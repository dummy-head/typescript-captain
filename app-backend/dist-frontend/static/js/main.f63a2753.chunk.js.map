{"version":3,"sources":["actions/DefaultRegistryActions.ts","reducers/DefaultRegistryReducer.ts","reducers/index.ts","utils/CrashReporter.ts","utils/ErrorFactory.ts","utils/Logger.ts","api/HttpClient.ts","api/ApiManager.ts","containers/global/ClickableLink.tsx","containers/global/ApiComponent.tsx","containers/global/CenteredSpinner.tsx","utils/Toaster.ts","containers/Dashboard.tsx","containers/LoggedInCatchAll.tsx","containers/nodes/DockerRegistriesStaticInfo.tsx","utils/Utils.ts","containers/nodes/DefaultDockerRegistry.tsx","models/IRegistryInfo.ts","containers/nodes/DockerRegistryTable.tsx","containers/nodes/DockerRegistryAdd.tsx","containers/nodes/DockerRegistries.tsx","containers/nodes/AddNode.tsx","containers/nodes/Nodes.tsx","containers/nodes/Cluster.tsx","containers/apps/CreateNewApp.tsx","containers/apps/AppsTable.tsx","containers/apps/Apps.tsx","containers/apps/appDetails/HttpSettings.tsx","containers/apps/appDetails/AppConfigs.tsx","containers/apps/appDetails/deploy/BuildLogsView.tsx","containers/apps/appDetails/deploy/TarUploader.tsx","containers/apps/appDetails/deploy/GitRepoForm.tsx","utils/DomUtils.ts","containers/apps/appDetails/deploy/UploaderPlainTextCaptainDefinition.tsx","containers/apps/appDetails/deploy/UploaderPlainTextBase.tsx","containers/apps/appDetails/deploy/UploaderPlainTextDockerfile.tsx","containers/apps/appDetails/deploy/Deployment.tsx","containers/apps/appDetails/AppDetails.tsx","containers/monitoring/LoadBalancerStats.tsx","containers/monitoring/NetDataDescription.tsx","containers/monitoring/NetDataSettingsForm.tsx","containers/monitoring/NetDataInfo.tsx","containers/monitoring/Monitoring.tsx","containers/settings/ChangePass.tsx","containers/settings/ReloadCaptainModal.tsx","containers/settings/CheckUpdate.tsx","containers/settings/NginxConfig.tsx","containers/settings/UnusedImagesTable.tsx","containers/settings/DiskCleanup.tsx","containers/settings/Settings.tsx","api/OneClickAppsApi.ts","containers/apps/oneclick/OneClickAppSelector.tsx","containers/apps/oneclick/OneClickVariablesSection.tsx","containers/apps/oneclick/OneClickAppDeploymentHelper.ts","containers/apps/oneclick/OneClickAppDeployManager.ts","containers/apps/oneclick/OneClickAppDeployProgress.tsx","containers/apps/oneclick/OneClickAppConfigPage.tsx","containers/PageRoot.tsx","containers/Login.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["DEFAULT_REGISTRY_CHANGED","rootReducer","combineReducers","registryReducer","state","arguments","length","undefined","action","type","Object","objectSpread","defaultRegistryId","payload","CrashReporter","err","Error","message","instance","utils_CrashReporter","utils_ErrorFactory","ErrorFactory","classCallCheck","this","OKAY","OKAY_BUILD_STARTED","STATUS_ERROR_GENERIC","STATUS_ERROR_CAPTAIN_NOT_INITIALIZED","STATUS_ERROR_USER_NOT_INITIALIZED","STATUS_ERROR_NOT_AUTHORIZED","STATUS_ERROR_ALREADY_EXIST","STATUS_ERROR_BAD_NAME","STATUS_WRONG_PASSWORD","STATUS_AUTH_TOKEN_INVALID","VERIFICATION_FAILED","UNKNOWN_ERROR","status","e","captainStatus","captainMessage","error","captureException","Logger","s","console","log","process","REACT_APP_IS_DEBUG","HttpClient","baseUrl","authToken","onAuthFailure","GET","POST","isDestroyed","headers","method","endpoint","variables","self","fetchInternal","then","axiosResponse","data","newAxiosResponse","createError","description","Promise","resolve","reject","catch","getReq","postReq","axios","get","params","createHeaders","post","URL","REACT_APP_API_URL","dev","ApiManager","http","getAuthToken","lastKnownPassword","destroy","setAuthToken","password","fetch","token","rootDomain","emailAddress","isEnabled","appName","file","formData","FormData","append","captainDefinition","detached","captainDefinitionContent","JSON","stringify","appDefinition","instanceCount","envVars","notExposeAsWebApp","forceSsl","volumes","ports","nodeId","appPushWebhook","customNginxConfig","preDeployFunction","hasPersistentData","customDomain","netDataInfo","oldPassword","newPassword","latestVersion","customBase","customCaptain","baseConfig","customValue","captainConfig","mostRecentLimit","imageIds","dockerRegistry","registryId","nodeType","privateKey","remoteNodeIpAddress","captainIpAddress","REACT_APP_DEFAULT_PASSWORD","ClickableLink","preventDefault","props","onLinkClicked","_this","react_default","a","createElement","onClick","handleClick","children","Component","ApiComponent","possibleConstructorReturn","getPrototypeOf","call","willUnmountSoon","apiManager","CenteredSpinner","antIcon","icon","style","fontSize","spin","width","textAlign","marginTop","marginBottom","indicator","size","Toaster","errorMessage","errorDescription","concat","toast","Search","input","Dashboard","userEmail","isLoading","apiData","reFetchData","getCaptainInfo","setState","createCatcher","isUsingHttp","window","location","href","startsWith","modal","confirm","title","content","onOk","success","onCancel","replace","target","rel","placeholder","onChange","event","value","trim","enableRootSsl","updateRootDomain","CenteredSpinner_CenteredSpinner","createInitialSetup","createSetupPanel","es_row","col","span","offset","card","addonBefore","disabled","hasRootSsl","defaultValue","enterButton","onSearch","justify","tooltip","es_button","onEnableSslClicked","onForceSslClicked","LoggedInCatchAll","isLoggedIn","history","push","DockerRegistriesStaticInfo","collapse","Panel","header","key","Utils","obj","parse","Option","es_select","DefaultDockerRegistry","isInEditMode","newSelectedDefaultId","registries","defaultPushRegistryId","index","element","id","registryUser","registryDomain","map","_this2","okText","changeDefault","visible","getAllOptions","className","es_alert","showIcon","ClickableLink_ClickableLink","getDefaultRegText","IRegistryTypes","LOCAL_REG","REMOTE_REG","DockerRegistryTable","modalShowing","remoteRegistryToEdit","registryIdToDelete","warn","registryType","dataIndex","render","registryPassword","reg","editRegistry","deleteRegistry","maxWidth","newData","height","addonAfter","registryImagePrefix","createEditModalContent","table","rowKey","pagination","columns","getCols","dataSource","DockerRegistryAdd","remoteRegistryToAdd","getPlainRegistryInfo","hasSelfHostedRegistry","indexOf","addDockerRegistry","DockerRegistries","getDockerRegistries","emitDefaultRegistryChanged","setDefaultPushDockerRegistry","fetchData","isSelfHosted","disableSelfHostedDockerRegistry","deleteDockerRegistry","updateDockerRegistry","enableSelfHostedDockerRegistry","DockerRegistriesStaticInfo_DockerRegistriesStaticInfo","DefaultDockerRegistry_DefaultDockerRegistry","DockerRegistryTable_DockerRegistryTable","DockerRegistryAdd_DockerRegistryAdd","connect","AddNode","nodeToAdd","childField","changeModel","paddingBottom","TextArea","rows","es_radio","Group","buttonStyle","Button","paddingTop","paddingLeft","onAddNodeClicked","CurrentNodes","getAllNodes","addDockerNode","nodes","node","paddingRight","borderRadius","border","backgroundColor","isLeader","ip","memoryBytes","toFixed","operatingSystem","nanoCpu","architecture","hostname","dockerEngineVersion","AddNode_AddNode","addNode","divider","createNodes","Cluster","nodes_DockerRegistries","Nodes","CreateNewApp","hasPersistency","onCreateNewAppClicked","onCreateOneClickAppClicked","Search_default","es_checkbox","checked","theme","AppsTable","searchTerm","onAppClicked","align","app","hasDefaultSubDomainSsl","appsToRender","apps","filter","extra","createColumns","Apps","registerNewApp","CreateNewApp_CreateNewApp","appDefinitions","AppsTable_AppsTable","defaultNginxConfig","getAllApps","HttpSettings","createHttpSettingsContent","setLoading","enableSslForBaseDomain","newDomain","attachNewCustomDomainToApp","enableSslForCustomDomain","removeCustomDomain","customDomains","forEach","c","row","publicDomain","hasSsl","onEnableCustomDomainSslClicked","marginRight","onRemoveCustomDomainClicked","newApiData","updateApiData","fontFamily","onEditDefaultNginxConfigClicked","_this3","enableDefaultHttps","HttpSettings_Search","onConnectNewDomainClicked","createCustomDomainRows","createCustomNginx","_this4","defaultChecked","createHttpDetailsSettingsContent","AppConfigs","dummyVar","forceEditableInstanceCount","envVarBulkEdit","bulkVals","forceEditableNodeId","src","toString","split","line","idx","keyValueArr","match","len","charAt","val","join","convertEnvVarsToBulk","keyVals","parseEnvVars","keys","k","addEnvVarClicked","hostPort","p","Number","containerPort","containerPath","hostPath","volumeName","createVolRows","addVolumeClicked","es_switch","createEnvVarSection","createPortRows","addPortMappingClicked","createVolSection","spellCheck","autoCorrect","autoComplete","autoCapitalize","BuildLogsView","isAppBuilding","expandedLogs","buildLogRecreationId","buildLogs","lastLineNumberPrinted","fetchBuildLogsInterval","clearInterval","fetchBuildLogs","logInfo","lines","logs","firstLineNumberOfLogs","firstLineNumber","firstLinesToPrint","lineAdded","i","setTimeout","textarea","document","getElementById","scrollTop","scrollHeight","setInterval","onExpandLogClicked","padding","overflow","TarUploader","beforeUpload","handleChange","info","fileList","fileToBeUploaded","name","uploadAppData","originFileObj","onUploadSucceeded","upload","Dragger","accept","multiple","listType","startUploadAndDeploy","GitRepoForm","gutter","gitRepoValues","repo","newObj","updateRepoInfo","branch","user","scrollToFixedFromTop","fromTopPx","el","scrollTo","top","behavior","DomUtils","delay","UploaderPlainTextCaptainDefinition","userEnteredValue","UploaderPlainTextBase","uploadInProcess","captainDefinitionToBeUploaded","uploadCaptainDefinitionContent","getPlaceHolderValue","startDeploy","convertDataToCaptainDefinition","UploaderPlainTextDockerfile","capDefinition","schemaVersion","dockerfileLines","Deployment","Date","getTime","hasPushToken","pushWebhookToken","repoInfo","BuildLogsView_BuildLogsView","deployedVersion","versions","gitHash","timeStamp","toLocaleString","TarUploader_TarUploader","onUploadSuccess","onFocus","select","execCommand","readOnly","protocol","GitRepoForm_GitRepoForm","newRepo","onUpdateConfigAndSave","UploaderPlainTextDockerfile_UploaderPlainTextDockerfile","UploaderPlainTextCaptainDefinition_UploaderPlainTextCaptainDefinition","TabPane","tabs","WEB_SETTINGS","AppDetails","reRenderTriggered","confirmedAppNameToDelete","activeTabKey","renderCounterForAffixBug","appDef","deleteApp","goBackToApps","warning","updateConfigAndSave","defaultActiveKey","tab","HttpSettings_HttpSettings","AppConfigs_AppConfigs","Deployment_Deployment","affix","offsetBottom","newLocal","mainContainer","current","background","minWidth","onDeleteAppClicked","LoadBalancerStatsCard","margin","avatar","color","titleText","titleNumber","text1","text2","LoadBalancerStats","getLoadBalancerInfo","updateApiInterval","updateApi","LoadBalancerStats_LoadBalancerStatsCard","total","activeConnections","handled","accepted","reading","writing","waiting","NetDataDescription","NetDataSettingsForm","parentField","netDataInfoData","updateModel","smtp","to","server","port","allowNonTls","username","slack","hook","channel","telegram","botToken","chatId","pushBullet","apiToken","fallbackEmail","NetDataInfo","refetchData","getNetDataInfo","isActivated","onUpdateNetDataClicked","updateNetDataInfo","NetDataDescription_NetDataDescription","toggleNetDataClicked","netDataUrl","NetDataSettingsForm_NetDataSettingsForm","Monitoring","LoadBalancerStats_LoadBalancerStats","NetDataInfo_NetDataInfo","ChangePass","old","new1","new2","changePass","onChangePasswordClicked","ReloadCaptainModal","hasAlreadyActivated","timeToRefresh","reload","isRefreshTimerActivated","startTimer","closable","footer","CheckUpdate","versionInfo","getVersionInfo","performUpdate","currentVersion","canUpdate","onPerformUpdateClicked","ReloadCaptainModal_ReloadCaptainModal","NginxConfig","nginxConfig","getNginxConfig","byDefault","setNginxConfig","onLoadDefaultNginxConfigClicked","onUpdateNginxConfigClicked","UnusedImagesTable","imageId","substr","Math","min","imageName","whiteSpace","unusedImages","tags","selectedRowKeys","selectedRows","getCheckboxProps","record","rowSelection","getRowSelection","getData","DiskCleanup","selectedImagesForDelete","deleteImages","onGetOldImagesClicked","getUnusedImages","hasSelectedImagesForRemoval","onRemoveImagesClicked","UnusedImagesTable_UnusedImagesTable","Settings","CheckUpdate_CheckUpdate","NginxConfig_NginxConfig","ChangePass_ChangePass","DiskCleanup_DiskCleanup","OneClickAppsApi","getAllOneClickApps","downloadUrl","download_url","res","OneClickAppSelector","oneClickAppList","selectedApp","createOptions","OneClickVariablesSection","enteredVariables","oneClickAppVariables","v","blurredFields","allFieldValid","isFieldValueValid","onNextClicked","variable","currVal","isEnteredValueValid","validRegex","parts","exec","RegExp","test","label","newModel","onBlur","createTextFields","OneClickAppDeploymentHelper","dockerComposeService","appDefs","vols","elements","environment","envKey","image","dockerFileLines","OneClickAppDeployManager","onDeploymentStateChanged","deploymentHelper","template","values","stringified","steps","currentStep","createAppsArrayInOrder","apply","toConsumableArray","createDeploymentStepPromises","service","stepsTexts","stepName","onNextStepPromiseCreator","successMessage","instructions","end","promise","stepPromise","numberOfServices","servicesMap","dockerCompose","services","itCount","dependsOn","depends_on","dependencyAlreadyAdded","j","promises","createRegisterPromise","createConfigurationPromise","createDeploymentPromise","Step","es_steps","OneClickAppDeployProgress","deploymentState","stepsInfo","text","direction","createSteps","onFinishClicked","onRestartClicked","OneClickAppConfigPage","isUnmount","assertThisInitialized","oneClickAppDeployHelper","getOneClickAppByName","captainVersion","unshift","OneClickAppDeployProgress_OneClickAppDeployProgress","start","OneClickVariablesSection_OneClickVariablesSection","startDeployProcess","Header","Content","Sider","PageRoot","React","createRef","goToLogin","react","marginLeft","param","layout","createUpdateAvailableIfNeeded","collapsible","menu","onSelect","onSelectMenu","mode","defaultSelectedKeys","borderRight","Item","ref","overflowY","es_Switch","es_Route","path","component","AppDetails_AppDetails","assign","FormItem","es_form","Login","position","left","transform","WrappedNormalLoginForm","onLoginRequested","NormalLoginForm","handleSubmit","form","validateFields","getFieldDecorator","onSubmit","rules","required","prefix","float","htmlType","create","init","createStoreWithMiddleware","applyMiddleware","thunk","createStore","App","es","store","reducers","HashRouter","Switch","Route","Boolean","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8UAAaA,EAA2B,2BCEzB,ICKAC,EAJKC,YAAgB,CAClCC,gBDFa,WAA6D,IAApDC,EAAoDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5C,GAAIG,EAAwCH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1E,OAAQC,EAAOC,MACb,KAAKT,EACH,OAAOU,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBQ,kBAAmBJ,EAAOK,UAC/C,QACE,OAAOT,wHENPU,2IAGaC,IACfA,EAAMA,GAAO,kBACQC,QAAQD,EAAM,IAAIC,MAAMD,EAAM,4CAGtCE,aAGbC,OAAsCX,EAO3BY,EALK,WAElB,OADKD,IAAUA,EAAW,IAAIJ,GACvBI,GCmBME,EAAA,eAjBb,SAAAC,IAAeX,OAAAY,EAAA,EAAAZ,CAAAa,KAAAF,GAAAE,KAfCC,KAAO,IAeTD,KAdEE,mBAAqB,IAcvBF,KAZEG,qBAAuB,IAYzBH,KAXEI,qCAAuC,KAWzCJ,KAVEK,kCAAoC,KAUtCL,KATEM,4BAA8B,KAShCN,KAREO,2BAA6B,KAQ/BP,KAPEQ,sBAAwB,KAO1BR,KANES,sBAAwB,KAM1BT,KALEU,0BAA4B,KAK9BV,KAJEW,oBAAsB,KAIxBX,KAFEY,cAAgB,6DAIpBC,EAAgBnB,GAC1B,IAAIoB,EAAI,IAAIrB,MAAMC,GAGlB,OAFAoB,EAAEC,cAAgBF,EAClBC,EAAEE,eAAiBtB,EACZoB,kDAIP,OAAO,SAASG,GACd1B,IAA4B2B,iBAAiBD,cC7B9BE,mGACRC,GACTC,QAAQC,IAAIF,iCAGDA,GACXC,QAAQJ,MAAMG,+BAGLA,GACLG,8CAAYC,oBACdH,QAAQC,IAAI,OAAQF,YCHLK,aAKnB,SAAAA,EACUC,EACAC,EACAC,GACRzC,OAAAY,EAAA,EAAAZ,CAAAa,KAAAyB,GAAAzB,KAAA0B,UAAA1B,KAAA2B,YAAA3B,KAAA4B,gBAAA5B,KARc6B,IAAM,MAQpB7B,KAPc8B,KAAO,OAOrB9B,KANK+B,aAAc,8DAWnB,IAAIC,EAAe,GAKnB,OAJIhC,KAAK2B,YAAWK,EAnBL,kBAmB6BhC,KAAK2B,WACjDK,EAnBY,eACF,UAqBHA,uCAGIL,GACX3B,KAAK2B,UAAYA,oCAIjB3B,KAAK+B,aAAc,gCAGfE,EAAwBC,EAAkBC,GAC9C,IAAMC,EAAOpC,KACb,OAAO,WACL,OAAOoC,EACJC,cAAcJ,EAAQC,EAAUC,GAChCG,KAAK,SAASC,GACb,IAAMC,EAAOD,EAAcC,KAC3B,OAAIA,EAAK3B,SAAWf,EAAaY,0BACxB0B,EACJR,gBACAU,KAAK,WACJ,OAAOF,EACJC,cAAcJ,EAAQC,EAAUC,GAChCG,KAAK,SAASG,GACb,OAAOA,EAAiBD,SAIzBA,IAGVF,KAAK,SAASE,GACb,GACEA,EAAK3B,SAAWf,EAAaG,MAC7BuC,EAAK3B,SAAWf,EAAaI,mBAE7B,MAAMJ,EAAa4C,YACjBF,EAAK3B,QAAUf,EAAac,cAC5B4B,EAAKG,aAAe,IAGxB,OAAOH,IAERF,KAAK,SAASE,GAKb,OAAO,IAAII,QAAQ,SAASC,EAASC,GAEnC,IAAKV,EAAKL,YAAa,OAAOc,EAAQL,EAAKA,UAG9CO,MAAM,SAAS9B,GAEd,OADAE,EAAOF,MAAMA,GACN,IAAI2B,QAAQ,SAASC,EAASC,GACnC,IAAKV,EAAKL,YAAa,OAAOe,EAAO7B,8CAMjCgB,EAAwBC,EAAkBC,GACtD,GAAIF,IAAWjC,KAAK6B,IAAK,OAAO7B,KAAKgD,OAAOd,EAAUC,GAEtD,GAAIF,IAAWjC,KAAK8B,KAAM,OAAO9B,KAAKiD,QAAQf,EAAUC,GAExD,MAAM,IAAI1C,MAAM,mBAAqBwC,kCAGhCC,EAAkBC,GAEvB,OAAOe,IACJC,IAAInD,KAAK0B,QAAUQ,EAAU,CAC5BkB,OAAQjB,EACRH,QAJShC,KAIKqD,kBAEff,KAAK,SAASE,GAEb,OAAOA,oCAILN,EAAkBC,GAExB,OAAOe,IACJI,KAAKtD,KAAK0B,QAAUQ,EAAUC,EAAW,CACxCH,QAHShC,KAGKqD,kBAEff,KAAK,SAASE,GAEb,OAAOA,aC5GTe,GAHchC,8CAAYiC,kBAC5BjC,8CAAYiC,kBACZ,IACsB,UAC1BrC,EAAOsC,IAAI,YAAcF,OAEJG,aAWnB,SAAAA,IAAevE,OAAAY,EAAA,EAAAZ,CAAAa,KAAA0D,GACb,IAAMtB,EAAOpC,KACbA,KAAK2D,KAAO,IAAIlC,EAAW8B,EAAKG,EAAW/B,UAAW,WACpD,OAAOS,EAAKwB,aAAaF,EAAWG,2EAKtC7D,KAAK2D,KAAKG,+CAGCnC,GACX+B,EAAW/B,UAAYA,EACvB3B,KAAK2D,KAAKI,aAAapC,wCAOZqC,GACX,IAAML,EAAO3D,KAAK2D,KAClBD,EAAWG,kBAAoBG,EAE/B,IAAM5B,EAAOpC,KACb,OAAO4C,QAAQC,UACZP,KAAKqB,EAAKM,MAAMN,EAAK7B,KAAM,SAAU,CAAEkC,cACvC1B,KAAK,SAASE,GACbJ,EAAK2B,aAAavB,EAAK0B,kDAK3B,IAAMP,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KAAKqB,EAAKM,MAAMN,EAAK9B,IAAK,oBAAqB,8CAGnCsC,GACf,IAAMR,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,gCAAiC,CAAEqC,sDAIjDC,GACZ,IAAMT,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KAAKqB,EAAKM,MAAMN,EAAK7B,KAAM,yBAA0B,CAAEsC,mDAGnDC,GACP,IAAMV,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KAAKqB,EAAKM,MAAMN,EAAK7B,KAAM,wBAAyB,CAAEuC,oDAIzD,IAAMV,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KAAKqB,EAAKM,MAAMN,EAAK9B,IAAK,4BAA6B,4CAG7CyC,GACb,IAAMX,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KAAKqB,EAAKM,MAAMN,EAAK9B,IAAK,sBAAwByC,EAAS,2CAGlDA,EAAiBC,GAC7B,IAAMZ,EAAO3D,KAAK2D,KACda,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,aAAcH,GACvB3B,QAAQC,UACZP,KACCqB,EAAKM,MACHN,EAAK7B,KACL,sBAAwBwC,EAAU,cAClCE,2DAMNF,EACAK,EACAC,GAEA,IAAMjB,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MACHN,EAAK7B,KACL,sBAAwBwC,GAAWM,EAAW,cAAgB,IAC9D,CAAEC,yBAA0BC,KAAKC,UAAUJ,kDAK/BL,EAAiBU,GACnC,IAAIC,EAAgBD,EAAcC,cAC9BC,EAAUF,EAAcE,QACxBC,EAAoBH,EAAcG,kBAClCC,EAAWJ,EAAcI,SACzBC,EAAUL,EAAcK,QACxBC,EAAQN,EAAcM,MACtBC,EAASP,EAAcO,OACvBC,EAAiBR,EAAcQ,eAC/BC,EAAoBT,EAAcS,kBAClCC,EAAoBV,EAAcU,kBAChC/B,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,mCAAoC,CACxDwC,QAASA,EACTW,cAAeA,EACfE,kBAAmBA,EACnBC,SAAUA,EACVC,QAASA,EACTC,MAAOA,EACPG,kBAAmBA,EACnBD,eAAgBA,EAChBD,OAAQA,EACRG,kBAAmBA,EACnBR,QAASA,4CAKFZ,EAAiBqB,GAC9B,IAAMhC,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,qCAAsC,CAC1DwC,UACAqB,yDAKErB,GACR,IAAMX,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,mCAAoC,CACxDwC,4DAKeA,GACrB,IAAMX,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,gDAAiD,CACrEwC,gEAKmBA,EAAiBsB,GAC1C,IAAMjC,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,yCAA0C,CAC9DwC,UACAsB,mEAKiBtB,EAAiBsB,GACxC,IAAMjC,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MACHN,EAAK7B,KACL,kDACA,CACEwC,UACAsB,6DAMStB,EAAiBsB,GAClC,IAAMjC,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,+CAAgD,CACpEwC,UACAsB,gEAMN,IAAMjC,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KAAKqB,EAAKM,MAAMN,EAAK9B,IAAK,gCAAiC,8CAI9D,IAAM8B,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KAAKqB,EAAKM,MAAMN,EAAK9B,IAAK,uBAAwB,+CAGrCgE,GAChB,IAAMlC,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KAAKqB,EAAKM,MAAMN,EAAK7B,KAAM,uBAAwB,CAAE+D,oDAG/CC,EAAqBC,GAC9B,IAAMpC,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,uBAAwB,CAC5CgE,cACAC,0DAMN,IAAMpC,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KAAKqB,EAAKM,MAAMN,EAAK9B,IAAK,2BAA4B,2CAG7CmE,GACZ,IAAMrC,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,2BAA4B,CAAEkE,4DAKxD,IAAMrC,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KAAKqB,EAAKM,MAAMN,EAAK9B,IAAK,2BAA4B,4CAG5CoE,EAAoBC,GACjC,IAAMvC,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,2BAA4B,CAChDqE,WAAY,CAAEC,YAAaH,GAC3BI,cAAe,CAAED,YAAaF,8CAKtBI,GACd,IAAM3C,EAAO3D,KAAK2D,KAClB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK9B,IAAK,yCAA0C,CAC7DyE,gBAAiBA,EAAkB,2CAK9BC,GACX,IAAM5C,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,yCAA0C,CAC9DyE,4DAMN,IAAM5C,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KAAKqB,EAAKM,MAAMN,EAAK9B,IAAK,mBAAoB,8DAIjD,IAAM8B,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MACHN,EAAK7B,KACL,+CACA,+DAMN,IAAM6B,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MACHN,EAAK7B,KACL,gDACA,+CAKU0E,GAChB,IAAM7C,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,0BAAtB3C,OAAAC,EAAA,EAAAD,CAAA,GAAsDqH,kDAIvCA,GACnB,IAAM7C,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,0BAAtB3C,OAAAC,EAAA,EAAAD,CAAA,GAAsDqH,kDAIvCC,GACnB,IAAM9C,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,0BAA2B,CAC/C2E,qEAKqBA,GAC3B,IAAM9C,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,2BAA4B,CAChD2E,sDAMN,IAAM9C,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KAAKqB,EAAKM,MAAMN,EAAK9B,IAAK,qBAAsB,2CAInD6E,EACAC,EACAC,EACAC,GAEA,IAAMlD,EAAO3D,KAAK2D,KAElB,OAAOf,QAAQC,UACZP,KACCqB,EAAKM,MAAMN,EAAK7B,KAAM,qBAAsB,CAC1C4E,WACAC,aACAC,sBACAC,6DA1XN,QAASnD,EAAW/B,mBA5BH+B,EACJG,kBAA4BtC,8CACxCuF,2BACCvF,8CAAYuF,2BAA6B,GACzC,YAJepD,EAKJ/B,UAAsBJ,8CAAYC,mBAC7C,oPACA,OCnBeuF,sLAIPjG,GACVA,EAAEkG,iBACEhH,KAAKiH,MAAMC,eAAelH,KAAKiH,MAAMC,iDAGlC,IAAAC,EAAAnH,KACP,OAAOoH,EAAAC,EAAAC,cAAA,KAAGC,QAAS,SAAAzG,GAAC,OAAIqG,EAAKK,YAAY1G,KAAKd,KAAKiH,MAAMQ,iBAVlBC,6FCCtBC,cAInB,SAAAA,EAAYV,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAA2H,IACtBR,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAwI,GAAAG,KAAA9H,KAAMiH,KACDc,iBAAkB,EACvBZ,EAAKa,WAAa,IAAItE,EAHAyD,sFAOtBnH,KAAK+H,iBAAkB,EACvB/H,KAAKgI,WAAWlE,iBAZsC4D,8BCArCO,mLAEjB,IAAMC,EAAUd,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,UAAUkJ,MAAO,CAAEC,SAAU,IAAMC,MAAI,IAElE,OACElB,EAAAC,EAAAC,cAAA,OACEc,MAAO,CACLG,MAAO,OACPC,UAAW,WAGbpB,EAAAC,EAAAC,cAAAgB,EAAA,GACEF,MAAO,CACLK,UAAW,GACXC,aAAc,GACdH,MAAO,QAETI,UAAWT,EACXU,KAAK,kBAlB8BlB,6BCDxBmB,qGACN5H,GACX,IAAI6H,EAAe,0BACnB,GAAI7H,EAAMF,cAAe,CACvB,IAAIgI,EAAmB9H,EAAMD,gBAAkB8H,EAC/CA,EAAY,GAAAE,OAAM/H,EAAMF,cAAZ,OAAAiI,OAA+BD,GAE7CrJ,EAAA,EAAQuB,MAAM6H,2CAId,OAAO,SAAS7H,GACd4H,EAAQI,MAAMhI,aCTdiI,EAASC,EAAA,EAAMD,OAEAE,cAInB,SAAAA,EAAYnC,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAoJ,IACtBjC,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAiK,GAAAtB,KAAA9H,KAAMiH,KACDpI,MAAQ,CACXwK,UAAW,GACXC,WAAW,EACXC,aAASvK,GALWmI,mFAUtBnH,KAAKwJ,oDAIL,IAAMpH,EAAOpC,KACbA,KAAKgI,WACFyB,iBACAnH,KAAK,SAASE,GACbJ,EAAKsH,SAAS,CAAEJ,WAAW,EAAOC,QAAS/G,MAE5CO,MAAM8F,EAAQc,6DAIjB,IAAMvH,EAAOpC,KAEP4J,EAAcC,OAAOC,SAASC,KAAKC,WAAW,WAEpDC,EAAA,EAAMC,QAAQ,CACZC,MAAO,cACPC,QACEhD,EAAAC,EAAAC,cAAA,mFAGGsC,EACG,0HACA,GAAI,IALV,iCASFS,KAZY,WAaVjI,EAAK4F,WACF5C,UAAS,GACT9C,KAAK,WACJ,OAAO,IAAIM,QAAQ,SAASC,EAASC,GACnCmH,EAAA,EAAMK,QAAQ,CACZH,MAAO,yBACPC,QACEhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wDAC+C,IAC5CsC,EACG,+EACA,KAIVS,KAZY,WAaVxH,KAEF0H,SAfY,WAgBV1H,WAKPP,KAAK,WACAsH,GACFC,OAAOC,SAASU,QACd,WAAapI,EAAKvD,MAAM0K,QAAQpF,cAIrCpB,MAAM8F,EAAQc,kBAEnBY,SA/CY,4DAsDd,IAAMnI,EAAOpC,KAGb4C,QAAQC,UACLP,KAAK,WACJ,OAAO,IAAIM,QAAQ,SAASC,EAASC,GACnCmH,EAAA,EAAMK,QAAQ,CACZH,MAAO,eACPC,QACEhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACe,IACbF,EAAAC,EAAAC,cAAA,KACEyC,KAAK,2BACLU,OAAO,SACPC,IAAI,uBAHN,iBAMK,IARP,uKAaAtD,EAAAC,EAAAC,cAAA,8NAIkCF,EAAAC,EAAAC,cAAA,2BAJlC,QAIgE,IAC9DF,EAAAC,EAAAC,cAAA,yCALF,0FAOMF,EAAAC,EAAAC,cAAA,6BAPN,yBASAF,EAAAC,EAAAC,cAAA6B,EAAA,GACEwB,YAAY,iBACZzL,KAAK,QACL0L,SAAU,SAAAC,GAAK,OACbzI,EAAKsH,SAAS,CACZL,WAAYwB,EAAMJ,OAAOK,OAAS,IAAIC,aAMhDV,KArCY,WAsCVxH,EAAQT,EAAKvD,MAAMwK,WAAa,KAElCkB,SAxCY,WAyCV1H,OAAQ7D,UAKfsD,KAAK,SAASE,GACb,YAAaxD,IAATwD,EApDO,UAqDXJ,EAAKsH,SAAS,CAAEJ,WAAW,IACpBlH,EAAK4F,WAAWgD,cAAcxI,MAGtCF,KAAK,SAASE,GACb,GA1DW,WA0DPA,EAiBJ,OAfAJ,EAAKoH,cAELS,EAAA,EAAMK,QAAQ,CACZH,MAAO,+BACPC,QACEhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BACkB,IAChBF,EAAAC,EAAAC,cAAA,YAAO,WAAalF,EAAKvD,MAAM0K,QAAQpF,YAFzC,qEASC,IAERpB,MAAM8F,EAAQc,0DAGFxF,GAEfnE,KAAKgI,WACFiD,iBAAiB9G,GACjB7B,KAAK,SAASE,GACbyH,EAAA,EAAMK,QAAQ,CACZH,MAAO,sBACPC,QACEhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2FAMJ+C,KAVY,WAWVR,OAAOC,SAASU,QAAQ,kBAAoBrG,QAIjDpB,MAAM8F,EAAQc,kDAMjB,OAFa3J,KAEJnB,MAAMyK,UACNlC,EAAAC,EAAAC,cAAC4D,EAAD,MAIP9D,EAAAC,EAAAC,cAAA,WAPWtH,KAQHmL,qBACN/D,EAAAC,EAAAC,cAAA,WATStH,KAUHoL,+DAMV,IAAMhJ,EAAOpC,KACb,OACEoH,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GAAIC,OAAQ,GACrBpE,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAM,sCACV/C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8FAEsBF,EAAAC,EAAAC,cAAA,iCAFtB,gBAE+D,IAC7DF,EAAAC,EAAAC,cAAA,yCAHF,MAGyC,IACvCF,EAAAC,EAAAC,cAAA,yCAJF,mPASEF,EAAAC,EAAAC,cAAA,WATF,iBASsBF,EAAAC,EAAAC,cAAA,mBATtB,IASoCF,EAAAC,EAAAC,cAAA,cATpC,IAS8C,IAC5CF,EAAAC,EAAAC,cAAA,4BAVF,IAUyBF,EAAAC,EAAAC,cAAA,sBAVzB,IAWEF,EAAAC,EAAAC,cAAA,gCAXF,IAW6BF,EAAAC,EAAAC,cAAA,4BAX7B,0DAcAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,gFAEc,IACZF,EAAAC,EAAAC,cAAA,KACEyC,KAAK,4EACLU,OAAO,SACPC,IAAI,uBAEH,IALH,QAOK,IAVP,uBAgBJtD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oCAC0BF,EAAAC,EAAAC,cAAA,yCAAuC,IADjE,+CAE+C,IAC7CF,EAAAC,EAAAC,cAAA,uCAHF,sBAKAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4B,EAAD,CACEwC,YAAY,kBACZC,SAAUvJ,EAAKvD,MAAM0K,QAAQqC,WAC7BjB,YAAY,0BACZkB,aAAczJ,EAAKvD,MAAM0K,QAAQpF,WAAa,GAC9C2H,YAAY,gBACZC,SAAU,SAAAjB,GAAK,OAAI1I,EAAK6I,iBAAiBH,QAI/C1D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,oCACb/C,EAAAC,EAAAC,cAAA4E,EAAA,GACEP,SACEvJ,EAAKvD,MAAM0K,QAAQqC,aAClBxJ,EAAKvD,MAAM0K,QAAQpF,WAEtBoD,QAAS,kBAAMnF,EAAK+J,uBALtB,iBAFJ,WAaE/E,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,8BACb/C,EAAAC,EAAAC,cAAA4E,EAAA,GACEP,UACGvJ,EAAKvD,MAAM0K,QAAQqC,YACpBxJ,EAAKvD,MAAM0K,QAAQnE,SAErBmC,QAAS,kBAAMnF,EAAKgK,sBALtB,iBAYJhF,EAAAC,EAAAC,cAAA,6DASV,OAAItH,KAAKnB,MAAM0K,QAAQqC,WAEdxE,EAAAC,EAAAC,cAAA,YAIPF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GAAIC,OAAQ,GACrBpE,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAM,yBACV/C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,UADF,+GAKAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,8CADF,qCAGEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,WALF,cAOEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2CARF,4BAWAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kCADF,kIA3UuBK,GCHlB0E,8LAIZ3I,EAAW4I,aAGdtM,KAAKiH,MAAMsF,QAAQC,KAAK,cAFxBxM,KAAKiH,MAAMsF,QAAQC,KAAK,2CAO1B,OAAOpF,EAAAC,EAAAC,cAAA,mBAZmCI,+CCDzB+E,oLAEjB,OACErF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0CACgCF,EAAAC,EAAAC,cAAA,0BADhC,uKAMAF,EAAAC,EAAAC,cAAAoF,EAAA,OACEtF,EAAAC,EAAAC,cAAAoF,EAAA,EAAUC,MAAV,CAAgBC,OAAO,YAAYC,IAAI,KACrCzF,EAAAC,EAAAC,cAAA,yVAQAF,EAAAC,EAAAC,cAAA,gFAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yCADF,mWAQEF,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oCADF,wXAnC0CI,+BCDzCoF,GAAA,SACCC,GACZ,OAAOjI,KAAKkI,MAAMlI,KAAKC,UAAUgI,KCE/BE,GAASC,GAAA,EAAOD,OAIDE,eAOnB,SAAAA,EAAYlG,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAmN,IACtBhG,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAgO,GAAArF,KAAA9H,KAAMiH,KACDpI,MAAQ,CACXuO,cAAc,EACdC,qBAAsB,IAJFlG,mFAWtB,IAFA,IAAMmG,EAAatN,KAAKiH,MAAMsC,QAAQ+D,WAChCC,EAAwBvN,KAAKiH,MAAMsC,QAAQgE,sBACxCC,EAAQ,EAAGA,EAAQF,EAAWvO,OAAQyO,IAAS,CACtD,IAAMC,EAAUH,EAAWE,GAC3B,GAAIC,EAAQC,KAAOH,EACjB,OAAOE,EAAQE,aAAe,MAAQF,EAAQG,eAIlD,MA3BkB,wDAgClB,OADmBd,GAAiB9M,KAAKiH,MAAMsC,QAAQ+D,YACrCO,IAAI,SAASJ,GAC7B,OACErG,EAAAC,EAAAC,cAAC2F,GAAD,CAAQnC,MAAO2C,EAAQC,GAAIb,IAAKY,EAAQC,IACrCD,EAAQE,aAAe,MAAQF,EAAQG,mDAMvC,IAAAE,EAAA9N,KACDoC,EAAOpC,KAEb,OACEoH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA2C,EAAA,GACEE,MAAM,qBACN4D,OAAO,kBACPxD,SAAU,kBAAMnI,EAAKsH,SAAS,CAAE0D,cAAc,KAC9C/C,KAAM,WACJjI,EAAKsH,SAAS,CAAE0D,cAAc,IAC9BhL,EAAK6E,MAAM+G,cAAc5L,EAAKvD,MAAMwO,uBAEtCY,QAAS7L,EAAKvD,MAAMuO,cAEpBhG,EAAAC,EAAAC,cAAA,uHAE0CF,EAAAC,EAAAC,cAAA,YA1D9B,iBA0D2D,IAFvE,0GAIyCF,EAAAC,EAAAC,cAAA,YA5D7B,iBAwDZ,2GAQAF,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA4F,GAAA,GACErB,aAAc7L,KAAKiH,MAAMsC,QAAQgE,uBAnEhC,OAoEDnF,MAAO,CAAEG,MAAO,KAChBqC,SAAU,SAAAE,GArET,QAsEKA,EACFgD,EAAKpE,SAAS,CAAE2D,qBAAsB,KAEtCS,EAAKpE,SAAS,CAAE2D,qBAAsBvC,MAI1C1D,EAAAC,EAAAC,cAAC2F,GAAD,CAAQnC,MA7EP,QACS,iBA6ET1I,EAAK8L,iBAGR9G,EAAAC,EAAAC,cAAA,OACEc,MAAO,CAAEK,UAAW,IACpB0F,UACI/L,EAAKvD,MAAMwO,qBAAuB,iBAAmB,IAGzDjG,EAAAC,EAAAC,cAAA8G,EAAA,GACEC,UAAU,EACVnP,KAAK,UACLQ,QAAQ,2KAId0H,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,mDAC0C,IACxCF,EAAAC,EAAAC,cAACgH,EAAD,CACEpH,cAAe,WACb9E,EAAKsH,SAAS,CACZ0D,cAAc,EACdC,qBACEjL,EAAK6E,MAAMsC,QAAQgE,uBAAyB,OAIlDnG,EAAAC,EAAAC,cAAA,YAAOtH,KAAKuO,qBATd,IAS0CnH,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,mBAvGZwI,+BCLtC8G,GAAb,SAAAA,IAAArP,OAAAY,EAAA,EAAAZ,CAAAa,KAAAwO,IAAaA,GACKC,UAAY,YADjBD,GAEKE,WAAa,aCI/B,IAGqBC,eAYnB,SAAAA,EAAY1H,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAA2O,IACtBxH,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAwP,GAAA7G,KAAA9H,KAAMiH,KACDpI,MAAQ,CACX+P,kBAAc5P,EACd6P,0BAAsB7P,EACtB8P,wBAAoB9P,GALAmI,8EASTuG,GACTA,IAAO1N,KAAKiH,MAAMsC,QAAQgE,sBAe9BvN,KAAK0J,SAAS,CACZoF,mBAAoBpB,EACpBkB,aAzCiB,mBAyBjB3E,EAAA,EAAM8E,KAAK,CACT5E,MAAO,6BACPC,QACEhD,EAAAC,EAAAC,cAAA,oTAiBKd,GACPA,EAAewI,eAAiBR,GAAeC,UAOnDzO,KAAK0J,SAAS,CACZkF,aAvDgB,gBAwDhBC,qBAAsB/B,GAAiBtG,KARvC9G,EAAA,EAAQqP,KACN,yGAYJ,IAAM3M,EAAOpC,KA+Cb,MA9CgB,CACd,CACEmK,MAAO,OACP8E,UAAW,gBAEb,CACE9E,MAAO,WACP8E,UAAW,mBACXC,OAAQ,SAACC,GACP,OAAO/H,EAAAC,EAAAC,cAAA,8BAGX,CACE6C,MAAO,SACP8E,UAAW,kBAEb,CACE9E,MAAO,eACP8E,UAAW,uBAEb,CACE9E,MAAO,UACP8E,UAAW,KACXC,OAAQ,SAACxB,EAAY0B,GACnB,OACEhI,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACgH,EAAD,CACEpH,cAAe,WACb9E,EAAKiN,aAAaD,KAGpBhI,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,UANf,mBASEkI,EAAAC,EAAAC,cAACgH,EAAD,CACEpH,cAAe,WACb9E,EAAKkN,eAAeF,EAAI1B,MAG1BtG,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,iEAWvB,IAAMkD,EAAOpC,KAEb,OACEoH,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEmH,SAAU,MACtBnI,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,WACZf,YAAY,6BACZzL,KAAK,QACL4L,MAAO1I,EAAKvD,MAAMgQ,qBAAsBlB,aACxC/C,SAAU,SAAA9J,GACR,IAAM0O,EAAU1C,GAAiB1K,EAAKvD,MAAMgQ,sBAC5CW,EAAQ7B,aAAe7M,EAAE2J,OAAOK,MAAMC,OACtC3I,EAAKsH,SAAS,CAAEmF,qBAAsBW,OAG1CpI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,WACZf,YAAY,aACZzL,KAAK,OACL4L,MAAO1I,EAAKvD,MAAMgQ,qBAAsBM,iBACxCvE,SAAU,SAAA9J,GACR,IAAM0O,EAAU1C,GAAiB1K,EAAKvD,MAAMgQ,sBAC5CW,EAAQL,iBAAmBrO,EAAE2J,OAAOK,MACpC1I,EAAKsH,SAAS,CAAEmF,qBAAsBW,OAG1CpI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,SACZf,YAAY,uBACZzL,KAAK,OACL4L,MAAO1I,EAAKvD,MAAMgQ,qBAAsBjB,eACxChD,SAAU,SAAA9J,GACR,IAAM0O,EAAU1C,GAAiB1K,EAAKvD,MAAMgQ,sBAC5CW,EAAQ5B,eAAiB9M,EAAE2J,OAAOK,MAAMC,OACxC3I,EAAKsH,SAAS,CAAEmF,qBAAsBW,OAG1CpI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,eACZf,YAAY,WACZ+E,WACEtI,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,kNACb/C,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,iBAGfA,KAAK,OACL4L,MAAO1I,EAAKvD,MAAMgQ,qBAAsBc,oBACxC/E,SAAU,SAAA9J,GACR,IAAM0O,EAAU1C,GAAiB1K,EAAKvD,MAAMgQ,sBAC5CW,EAAQG,oBAAsB7O,EAAE2J,OAAOK,MAAMC,OAC7C3I,EAAKsH,SAAS,CAAEmF,qBAAsBW,yCAQ9C,IAAMpN,EAAOpC,KACb,OACEoH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA2C,EAAA,GACEE,MAAM,iBACN4D,OAAO,kBACPxD,SAAU,kBAAMnI,EAAKsH,SAAS,CAAEkF,kBAAc5P,KAC9CqL,KAAM,WACJjI,EAAKsH,SAAS,CAAEkF,kBAAc5P,IAC9BoD,EAAK6E,MAAMqI,eAAelN,EAAKvD,MAAMiQ,qBAEvCb,QAvLa,mBAuLJ7L,EAAKvD,MAAM+P,cARtB,mIAaAxH,EAAAC,EAAAC,cAAA2C,EAAA,GACEE,MAAM,gBACN4D,OAAO,kBACPxD,SAAU,kBAAMnI,EAAKsH,SAAS,CAAEkF,kBAAc5P,KAC9CqL,KAAM,WACJjI,EAAKsH,SAAS,CAAEkF,kBAAc5P,IAC9BoD,EAAK6E,MAAMoI,aACTvC,GAAiB1K,EAAKvD,MAAMgQ,wBAGhCZ,QAvMY,kBAuMH7L,EAAKvD,MAAM+P,cAEnBxM,EAAKvD,MAAMgQ,qBACVzM,EAAKwN,yBAELxI,EAAAC,EAAAC,cAAA,aAGJF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAAuI,GAAA,GACEC,OAAO,KACPC,YAAY,EACZC,QAAShQ,KAAKiQ,UACdC,WAAYlQ,KAAKiH,MAAMsC,QAAQ+D,sBAlNM5F,aCF5ByI,eAUnB,SAAAA,EAAYlJ,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAmQ,IACtBhJ,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAgR,GAAArI,KAAA9H,KAAMiH,KACDpI,MAAQ,CACX+P,kBAAc5P,EACdoR,oBAAqBjJ,EAAKkJ,wBAJNlJ,sFAStB,MAAO,CACLuG,GAAI,GACJC,aAAc,GACdwB,iBAAkB,GAClBvB,eAAgB,GAChB+B,oBAAqB,GACrBX,aAAcR,GAAeE,6CAK/B,IAAMtM,EAAOpC,KAEPsQ,EACJtQ,KAAKiH,MAAMsC,QAAQ+D,WAChBO,IAAI,SAAAuB,GAAG,OAAIA,EAAIJ,eACfuB,QAAQ/B,GAAeC,YAAc,EAE1C,OACErH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA2C,EAAA,GACEE,MAAM,uBACN4D,OAAO,8BACPxD,SAAU,kBAAMnI,EAAKsH,SAAS,CAAEkF,kBAAc5P,KAC9CqL,KAAM,WACJjI,EAAKsH,SAAS,CAAEkF,kBAAc5P,IAC9BoD,EAAK6E,MAAMuJ,kBAAkB,CAC3BxB,aAAcR,GAAeC,aAGjCR,QApDW,iBAoDF7L,EAAKvD,MAAM+P,cAEpBxH,EAAAC,EAAAC,cAAA,iMAOFF,EAAAC,EAAAC,cAAA2C,EAAA,GACEE,MAAM,kBACN4D,OAAO,sBACPxD,SAAU,kBAAMnI,EAAKsH,SAAS,CAAEkF,kBAAc5P,KAC9CqL,KAAM,WACJjI,EAAKsH,SAAS,CAAEkF,kBAAc5P,IAC9BoD,EAAK6E,MAAMuJ,kBAAkBpO,EAAKvD,MAAMuR,sBAE1CnC,QApEY,kBAoEH7L,EAAKvD,MAAM+P,cAEpBxH,EAAAC,EAAAC,cAAA,iIAIAF,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEmH,SAAU,MACtBnI,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,WACZf,YAAY,6BACZzL,KAAK,QACL4L,MAAO1I,EAAKvD,MAAMuR,oBAAoBzC,aACtC/C,SAAU,SAAA9J,GACR,IAAM0O,EAAU1C,GACd1K,EAAKvD,MAAMuR,qBAEbZ,EAAQ7B,aAAe7M,EAAE2J,OAAOK,MAAMC,OACtC3I,EAAKsH,SAAS,CAAE0G,oBAAqBZ,OAGzCpI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,WACZf,YAAY,aACZzL,KAAK,OACL4L,MAAO1I,EAAKvD,MAAMuR,oBAAoBjB,iBACtCvE,SAAU,SAAA9J,GACR,IAAM0O,EAAU1C,GACd1K,EAAKvD,MAAMuR,qBAEbZ,EAAQL,iBAAmBrO,EAAE2J,OAAOK,MACpC1I,EAAKsH,SAAS,CAAE0G,oBAAqBZ,OAGzCpI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,SACZf,YAAY,uBACZzL,KAAK,OACL4L,MAAO1I,EAAKvD,MAAMuR,oBAAoBxC,eACtChD,SAAU,SAAA9J,GACR,IAAM0O,EAAU1C,GACd1K,EAAKvD,MAAMuR,qBAEbZ,EAAQ5B,eAAiB9M,EAAE2J,OAAOK,MAAMC,OACxC3I,EAAKsH,SAAS,CAAE0G,oBAAqBZ,OAGzCpI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,eACZf,YAAY,WACZ+E,WACEtI,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,kNACb/C,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,iBAGfA,KAAK,OACL4L,MAAO1I,EAAKvD,MAAMuR,oBAAoBT,oBACtC/E,SAAU,SAAA9J,GACR,IAAM0O,EAAU1C,GACd1K,EAAKvD,MAAMuR,qBAEbZ,EAAQG,oBAAsB7O,EAAE2J,OAAOK,MAAMC,OAC7C3I,EAAKsH,SAAS,CAAE0G,oBAAqBZ,SAM7CpI,EAAAC,EAAAC,cAAA,OAAK6G,UAAWmC,EAAwB,iBAAmB,IACzDlJ,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACE3E,QAAS,kBAAMnF,EAAKsH,SAAS,CAAEkF,aA/IxB,mBA8IT,8BAQJxH,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACE3E,QAAS,kBACPnF,EAAKsH,SAAS,CACZkF,aA1JM,gBA2JNwB,oBAAqBhO,EAAKiO,2BAJhC,gCArJqC3I,aCKzC+I,eAIJ,SAAAA,EAAYxJ,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAyQ,IACtBtJ,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAsR,GAAA3I,KAAA9H,KAAMiH,KACDpI,MAAQ,CACX0K,aAASvK,GAHWmI,2EAQtB,IAAM/E,EAAOpC,KACbA,KAAK0J,SAAS,CAAEH,aAASvK,IACzBgB,KAAKgI,WACF0I,sBACApO,KAAK,SAASE,GACbJ,EAAKsH,SAAS,CAAEH,QAAS/G,IACzBJ,EAAK6E,MAAM0J,2BACRnO,EAAsB+K,yBAG1BxK,MAAM8F,EAAQc,uDAGL+D,GACZ,IAAMtL,EAAOpC,KACbA,KAAK0J,SAAS,CAAEH,aAASvK,IAEzBgB,KAAKgI,WACF4I,6BAA6BlD,GAC7BpL,KAAK,WACJ5C,EAAA,EAAQ4K,QAAQ,iDAEjBvH,MAAM8F,EAAQc,iBACdrH,KAAK,WACJF,EAAKyO,qDAIInD,GACb,IAAMtL,EAAOpC,KAEP8Q,EACJ1O,EAAKvD,MACF0K,QAAS+D,WAAWO,IACnB,SAAAuB,GAAG,OAAIA,EAAIJ,eAAiBR,GAAeC,WAAaW,EAAI1B,KAAOA,IAEpE6C,SAAQ,IAAS,EAEtBvQ,KAAK0J,SAAS,CAAEH,aAASvK,KAExB8R,EACG9Q,KAAKgI,WAAW+I,kCAChB/Q,KAAKgI,WAAWgJ,qBAAqBtD,IAEtCpL,KAAK,WACJ5C,EAAA,EAAQ4K,QAAQ,uBAEjBvH,MAAM8F,EAAQc,iBACdrH,KAAK,WACJF,EAAKyO,mDAIErK,GACX,IAAMpE,EAAOpC,KACbA,KAAK0J,SAAS,CAAEH,aAASvK,IAEzBgB,KAAKgI,WACFiJ,qBAAqBzK,GACrBlE,KAAK,WACJ5C,EAAA,EAAQ4K,QAAQ,uBAEjBvH,MAAM8F,EAAQc,iBACdrH,KAAK,WACJF,EAAKyO,wDAIOrK,GAChB,IAAMpE,EAAOpC,KACbA,KAAK0J,SAAS,CAAEH,aAASvK,KACxBwH,EAAewI,eAAiBR,GAAeC,UAC5CrM,EAAK4F,WAAWkJ,iCAChB9O,EAAK4F,WAAWwI,kBAAkBhK,IAEnClE,KAAK,WACJ5C,EAAA,EAAQ4K,QAAQ,yCAEjBvH,MAAM8F,EAAQc,iBACdrH,KAAK,WACJF,EAAKyO,0DAKT7Q,KAAK6Q,6CAIL,IAAMzO,EAAOpC,KACb,OAAKA,KAAKnB,MAAM0K,QAKdnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6J,GAAD,MAEA/J,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,OACEc,MAAO,CAAEI,UAAW,UACpB2F,UAC2C,IAAzCnO,KAAKnB,MAAM0K,QAAQ+D,WAAWvO,OAAe,GAAK,kBAGpDqI,EAAAC,EAAAC,cAAA8G,EAAA,GACElP,KAAK,OACLQ,QAAQ,uEAIZ0H,EAAAC,EAAAC,cAAA,OACE6G,UACEnO,KAAKnB,MAAM0K,QAAQ+D,WAAWvO,OAAS,EAAI,GAAK,kBAGlDqI,EAAAC,EAAAC,cAAC8J,GAAD,CACE7H,QAASnH,EAAKvD,MAAM0K,QACpByE,cAAe,SAAAN,GACbtL,EAAK4L,cAAcN,MAIvBtG,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MAEtBrI,EAAAC,EAAAC,cAAC+J,GAAD,CACE9H,QAASnH,EAAKvD,MAAM0K,QACpB+F,eAAgB,SAAA5B,GACdtL,EAAKkN,eAAe5B,IAEtB2B,aAAc,SAAA7I,GACZpE,EAAKiN,aAAa7I,OAIxBY,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAACgK,GAAD,CACE/H,QAASnH,EAAKvD,MAAM0K,QACpBiH,kBAAmB,SAAAhK,GAAc,OAC/BpE,EAAKoO,kBAAkBhK,OAhDtBY,EAAAC,EAAAC,cAAC4D,EAAD,aAvGkBvD,GAqKhB4J,mBANf,SAAyB1S,GACvB,MAAO,CACLQ,kBAAmBR,EAAMD,gBAAgBS,oBAM3C,CACEsR,2BpBvLG,SAAoC7F,GACzC,MAAO,CACL5L,KAAMT,EACNa,QAASwL,KoBiLEyG,CAKbd,yCChLmBe,eAMnB,SAAAA,EAAYvK,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAwR,IACtBrK,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAqS,GAAA1J,KAAA9H,KAAMiH,KACDpI,MAAQ,CACX4S,UAAW,CACT7K,oBAAqB,GACrBC,iBAAkB,GAClBH,SAAU,SACVC,WAAY,KAPMQ,2EAYZuK,EAAoB5G,GAC9B,IAAM2G,EAAY3E,GAAiB9M,KAAKnB,MAAM4S,WAC9CA,EAAUC,GAAc5G,EACxB9K,KAAK0J,SAAS,CAAE+H,+CAIhB,IAAMrP,EAAOpC,KACPyR,EAAYrP,EAAKvD,MAAM4S,UAE7B,OACErK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAAmE,EAAA,GAAMrD,MAAO,CAAEK,UAAW,IAAMvJ,KAAK,QAAQiL,MAAM,mBACjD/C,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,iBACvB5E,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEf,MAAO,CAAEM,aAAc,IACvBgD,YAAY,sBACZf,YAAY,kBACZzL,KAAK,OACL4L,MAAO2G,EAAU7K,oBACjBgE,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YAAY,sBAAuB7Q,EAAE2J,OAAOK,WAIvD1D,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEf,MAAO,CAAEM,aAAc,IACvBgD,YAAY,qBACZf,YAAY,kBACZzL,KAAK,OACL4L,MAAO2G,EAAU5K,iBACjB+D,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YAAY,mBAAoB7Q,EAAE2J,OAAOK,WAIpD1D,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GAAInD,MAAO,CAAEK,UAAW,KACjCrB,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEwJ,cAAe,IAA7B,2BAC4BxK,EAAAC,EAAAC,cAAA,iBAD5B,SAGAF,EAAAC,EAAAC,cAAA6B,EAAA,EAAO0I,SAAP,CACEzJ,MAAO,CAAEM,aAAc,IACvByF,UAAU,aACV2D,KAAM,EACNnH,YAAY,gFACZG,MAAO2G,EAAU9K,WACjBiE,SAAU,SAAA9J,GAAC,OAAIsB,EAAKuP,YAAY,aAAc7Q,EAAE2J,OAAOK,YAI7D1D,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAAyK,GAAA,EAAOC,MAAP,CACEnG,aAAa,IACboG,YAAY,UACZ7J,MAAO,CAAEM,aAAc,IACvBoC,MAAO2G,EAAU/K,SACjBkE,SAAU,SAAA9J,GAAC,OAAIsB,EAAKuP,YAAY,WAAY7Q,EAAE2J,OAAOK,SAErD1D,EAAAC,EAAAC,cAAAyK,GAAA,EAAOG,OAAP,CAAcpH,MAAM,UAApB,uBACA1D,EAAAC,EAAAC,cAAAyK,GAAA,EAAOG,OAAP,CAAcpH,MAAM,WAApB,yBATJ,OAYE1D,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,yKACb/C,EAAAC,EAAAC,cAAAa,EAAA,GACEC,MAAO,CAAE+J,WAAY,EAAGC,YAAa,GACrClT,KAAK,kBAKXkI,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GAAQhN,KAAK,UAAUqI,QAAS,kBAAMnF,EAAK6E,MAAMoL,iBAAiBjQ,EAAKvD,MAAM4S,aAC3ErK,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,YADb,gCA3FyBwI,aCH/B4K,eAMJ,SAAAA,EAAYrL,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAsS,IACtBnL,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAmT,GAAAxK,KAAA9H,KAAMiH,KACDpI,MAAQ,CACX0K,aAASvK,GAHWmI,2EAQtB,IAAM/E,EAAOpC,KACboC,EAAKsH,SAAS,CAAEH,aAASvK,IACzBoD,EAAK4F,WACFuK,cACAjQ,KAAK,SAASE,GACbJ,EAAKsH,SAAS,CAAEH,QAAS/G,MAE1BO,MAAM8F,EAAQc,iDAGX8H,GACN,IAAMrP,EAAOpC,KACboC,EAAKsH,SAAS,CAAEH,aAASvK,IACzBoD,EAAK4F,WACFwK,cACCf,EAAU/K,SACV+K,EAAU9K,WACV8K,EAAU7K,oBACV6K,EAAU5K,kBAEXvE,KAAK,WACJ5C,EAAA,EAAQ4K,QAAQ,8BAEjBvH,MAAM8F,EAAQc,iBACdrH,KAAK,SAASE,GACbJ,EAAKyO,0DAKT7Q,KAAK6Q,kDAML,OAFqB7Q,KAAKnB,MAAM0K,QAAQkJ,OAAS,IAEpC5E,IAAI,SAAA6E,GACf,OACEtL,EAAAC,EAAAC,cAAA,OACEuF,IAAK6F,EAAKnN,OACV6C,MAAO,CACL+J,WAAY,GACZP,cAAe,GACfe,aAAc,GACdP,YAAa,GACb1J,aAAc,GACdkK,aAAc,EACdC,OAAQ,oBACRC,gBAAiB,YAGnB1L,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,UACvB5E,EAAAC,EAAAC,cAAA,6BADF,IAC+BoL,EAAKnN,QAEpC6B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA,mBACCoL,EAAKK,SAAW,qBAAuBL,EAAKxT,MAE/CkI,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA,iBACCoL,EAAKM,KAGV5L,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA,oBACCoL,EAAK7T,OAERuI,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA,qBACCoL,EAAK7R,SAGVuG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA,mBACEoL,EAAKO,YAAc,YAAYC,QAAQ,GAF3C,OAIA9L,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA,iBACCoL,EAAKS,kBAGV/L,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA,mBACEoL,EAAKU,QAAU,KAAYF,QAAQ,GAFvC,UAIA9L,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA,2BACCoL,EAAKW,eAGVjM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA,uBACCoL,EAAKY,UAERlM,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA,6BACCoL,EAAKa,0DAyBhB,IAAMnR,EAAOpC,KACb,OAAKA,KAAKnB,MAAM0K,QAKdnC,EAAAC,EAAAC,cAAA,WACGtH,KAAKiH,MAAM5H,kBACV+H,EAAAC,EAAAC,cAACkM,GAAD,CACEnB,iBAAkB,SAAAZ,GAChBrP,EAAKqR,QAAQhC,MAIjBrK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA8G,EAAA,GACElP,KAAK,UACLmP,UAAU,EACV3O,QAAQ,wLAId0H,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MAEtBrI,EAAAC,EAAAC,cAAAoM,GAAA,GAASxU,KAAK,cACZkI,EAAAC,EAAAC,cAAA,oCAEFF,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MAEtBrI,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,UACvB5E,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IAAKnJ,EAAKuR,iBA5BlBvM,EAAAC,EAAAC,cAAC4D,EAAD,aAlJcvD,GA2LZ4J,mBANf,SAAyB1S,GACvB,MAAO,CACLQ,kBAAmBR,EAAMD,gBAAgBS,oBAI9BkS,CAAyBe,IC9LnBsB,oLAEjB,OACExM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,UACvB5E,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAM,iCACV/C,EAAAC,EAAAC,cAACuM,GAAD,SAINzM,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,UACvB5E,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAM,SACV/C,EAAAC,EAAAC,cAACwM,GAAD,8DAfuBpM,oDCEhBqM,eAOnB,SAAAA,EAAY9M,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAA+T,IACtB5M,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAA4U,GAAAjM,KAAA9H,KAAMiH,KACDpI,MAAQ,CACXmV,gBAAgB,EAChB1P,QAAS,IAJW6C,uFAStBnH,KAAKiH,MAAMgN,sBACTjU,KAAKnB,MAAMyF,QACXtE,KAAKnB,MAAMmV,qEAKbhU,KAAKiH,MAAMiN,8DAIX,IAAM9R,EAAOpC,KAEb,OACEoH,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GAAIC,OAAQ,GACrBpE,EAAAC,EAAAC,cAAAmE,EAAA,GACEtB,MACE/C,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,gBADb,iCAMFkI,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAC6M,GAAA9M,EAAD,CACEsD,YAAY,iBACZmB,YAAY,iBACZlB,SAAU,SAAA9J,GAAC,OAAIsB,EAAKsH,SAAS,CAAEpF,QAASxD,EAAE2J,OAAOK,SACjDiB,SAAU,SAAAjB,GAAK,OAAI1I,EAAK6R,4BAG5B7M,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA8M,GAAA,GACExJ,SAAU,SAAC9J,GAAD,OACRsB,EAAKsH,SAAS,CAAEsK,iBAAkBlT,EAAE2J,OAAO4J,YAF/C,uBADF,WASEjN,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,oDACb/C,EAAAC,EAAAC,cAAA,KACEyC,KAAK,4EACLU,OAAO,SACPC,IAAI,uBAEJtD,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,kBAAkBoV,MAAM,eAM3ClN,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEI,UAAW,WACvBpB,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA4E,EAAA,GAAQ3E,QAAS,kBAAMnF,EAAK8R,+BAA5B,uCA9E4BxM,aCcrB6M,eASnB,SAAAA,EAAYtN,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAuU,IACtBpN,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAoV,GAAAzM,KAAA9H,KAAMiH,KACDpI,MAAQ,CAAE2V,WAAY,IAFLrN,4EAKX7C,GACXtE,KAAKiH,MAAMsF,QAAQC,KAAnB,iBAAAxD,OAAyC1E,4CAIzC,IAAMlC,EAAOpC,KAEb,MAAO,CACL,CACEmK,MAAO,WACP8E,UAAW,UACXpC,IAAK,UACLqC,OAAQ,SAAC5K,GAAD,OACN8C,EAAAC,EAAAC,cAACgH,EAAD,CAAepH,cAAe,kBAAM9E,EAAKqS,aAAanQ,KACnDA,KAIP,CACE6F,MAAO,oBACP8E,UAAW,oBACXpC,IAAK,oBACL6H,MAhBoB,SAiBpBxF,OAAQ,SAACvJ,GACP,OAAKA,EAKHyB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,WALNkI,EAAAC,EAAAC,cAAA,eAUb,CACE6C,MAAO,iBACP8E,UAAW,oBACXpC,IAAK,oBACL6H,MAjCoB,SAkCpBxF,OAAQ,SAAC/J,GACP,OAAMA,EACGiC,EAAAC,EAAAC,cAAA,aAIPF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,aAKnB,CACEiL,MAAO,iBACP8E,UAAW,gBACXpC,IAAK,gBACL6H,MAlDoB,UAoDtB,CACEvK,MAAO,kBACP8E,UAAW,oBACXpC,IAAK,gBACL6H,MAxDoB,SAyDpBxF,OAAQ,SAAC/J,EAA4BwP,GACnC,OAAIxP,EACKiC,EAAAC,EAAAC,cAAA,aAIPF,EAAAC,EAAAC,cAAA,KACEyC,KACE,QACC4K,EAAIC,uBAAyB,IAAM,IACpC,MACAD,EAAIrQ,QACJ,IACAlC,EAAK6E,MAAM9C,WAEbsG,OAAO,SACPC,IAAI,uBAEJtD,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,SAAU,yCAS/B,IAAMkD,EAAOpC,KAEP6U,EAAezS,EAAK6E,MAAM6N,KAAKC,OAAO,SAAAJ,GAC1C,OAAKvS,EAAKvD,MAAM2V,YAETG,EAAIrQ,QAASiM,QAAQnO,EAAKvD,MAAM2V,aAAe,IAGxD,OACEpN,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GAAIC,OAAQ,EAAGpD,MAAO,CAAEwJ,cAAe,MAChDxK,EAAAC,EAAAC,cAAAmE,EAAA,GACEuJ,MACE5N,EAAAC,EAAAC,cAAA6B,EAAA,GACEwB,YAAY,iBACZzL,KAAK,OACL0L,SAAU,SAAAC,GAAK,OACbzI,EAAKsH,SAAS,CACZ8K,YAAa3J,EAAMJ,OAAOK,OAAS,IAAIC,YAK/CZ,MACE/C,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,SADb,0BAMFkI,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAuI,GAAA,GACEC,OAAO,UACPE,QAAS5N,EAAK6S,gBACd/E,WAAY2E,EACZ9E,YAAY,EACZnH,KAAK,sBA5IkBlB,aCXlBwN,eAInB,SAAAA,EAAYjO,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAkV,IACtB/N,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAA+V,GAAApN,KAAA9H,KAAMiH,KACDpI,MAAQ,CACXyK,WAAW,EACXC,aAASvK,GAJWmI,4FAStBnH,KAAKiH,MAAMsF,QAAQC,KAAnB,iEAGoBlI,EAAiBqB,GACrC,IAAMvD,EAAOpC,KAEb4C,QAAQC,UACLP,KAAK,WAEJ,OADAF,EAAKsH,SAAS,CAAEJ,WAAW,IACpBlH,EAAK4F,WAAWmN,eAAe7Q,EAASqB,KAEhDrD,KAAK,SAASE,GACbJ,EAAKoH,gBAENzG,MAAM8F,EAAQc,kDAIjB,IAAMvH,EAAOpC,KAEb,OAAIoC,EAAKvD,MAAMyK,UACNlC,EAAAC,EAAAC,cAAC4D,EAAD,MAIP9D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8N,GAAD,CACEnB,sBAAuB,SAAC3P,EAAiB0P,GACvC5R,EAAK6R,sBAAsB3P,EAAS0P,IAEtCE,2BAA4B,WAC1B9R,EAAK8R,gCAGT9M,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACrBrN,EAAKvD,MAAM0K,QAAQ8L,eAAetW,OAAS,EAC1CqI,EAAAC,EAAAC,cAACgO,GAAD,CACE/I,QAASvM,KAAKiH,MAAMsF,QACpBgJ,mBAAoBvV,KAAKnB,MAAM0K,QAAQgM,mBACvCT,KAAM9U,KAAKnB,MAAM0K,QAAQ8L,eACzBlR,WAAYnE,KAAKnB,MAAM0K,QAAQpF,aAGjCiD,EAAAC,EAAAC,cAAA,yDAONtH,KAAKwJ,oDAIL,IAAMpH,EAAOpC,KACboC,EAAKsH,SAAS,CAAEJ,WAAW,IAC3BtJ,KAAKgI,WACFwN,aACAlT,KAAK,SAASE,GACbJ,EAAKsH,SAAS,CAAEJ,WAAW,EAAOC,QAAS/G,MAE5CO,MAAM8F,EAAQc,wBA1EahC,wCCK5BuB,GAASC,EAAA,EAAMD,OAEAuM,eAInB,SAAAA,EAAYxO,GAAa,OAAA9H,OAAAY,EAAA,EAAAZ,CAAAa,KAAAyV,GAAAtW,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAsW,GAAA3N,KAAA9H,KACjBiH,0EAIN,OAAOG,EAAAC,EAAAC,cAAA,WAAMtH,KAAK0V,mEAIlB1V,KAAKiH,MAAMuC,2DAIX,IAAMpH,EAAOpC,KAGb,OAFAA,KAAKiH,MAAM0O,YAAW,GAEf/S,QAAQC,UACZP,KAAK,WACJ,OAAOF,EAAK6E,MAAMe,WAAW4N,uBAC3BxT,EAAK6E,MAAMsC,QAASvE,cAAcV,WAGrChC,KAAK,WACJ5C,EAAA,EAAQ4K,QAAQ,uCAEjBhI,KAAK,WACJF,EAAKoH,gBAENzG,MAAM8F,EAAQc,mEAGOkM,GACxB,IAAMzT,EAAOpC,KAGb,OAFAA,KAAKiH,MAAM0O,YAAW,GAEf/S,QAAQC,UACZP,KAAK,WACJ,OAAOF,EAAK6E,MAAMe,WAAW8N,2BAC3B1T,EAAK6E,MAAMsC,QAASvE,cAAcV,QAClCuR,KAGHvT,KAAK,WACJ5C,EAAA,EAAQ4K,QAAQ,+CAEjBhI,KAAK,WACJF,EAAKoH,gBAENzG,MAAM8F,EAAQc,wEAGY/D,GAC7B,IAAMxD,EAAOpC,KAGb,OAFAA,KAAKiH,MAAM0O,YAAW,GAEf/S,QAAQC,UACZP,KAAK,WACJ,OAAOF,EAAK6E,MAAMe,WAAW+N,yBAC3B3T,EAAK6E,MAAMsC,QAASvE,cAAcV,QAClCsB,KAGHtD,KAAK,WACJ5C,EAAA,EAAQ4K,QAAQ,sDAEjBhI,KAAK,WACJF,EAAKoH,gBAENzG,MAAM8F,EAAQc,qEAGS/D,GAC1B,IAAMxD,EAAOpC,KAGb,OAFAA,KAAKiH,MAAM0O,YAAW,GAEf/S,QAAQC,UACZP,KAAK,WACJ,OAAOF,EAAK6E,MAAMe,WAAWgO,mBAC3B5T,EAAK6E,MAAMsC,QAASvE,cAAcV,QAClCsB,KAGHtD,KAAK,WACJ5C,EAAA,EAAQ4K,QAAQ,iDAEjBhI,KAAK,WACJF,EAAKoH,gBAENzG,MAAM8F,EAAQc,kEAGM,IAAAxC,EAAAnH,KACjBiW,EAAgBjW,KAAKiH,MAAMsC,QAASvE,cAAcY,cAAgB,GAElEkM,EAAsB,GA4C5B,OA3CAmE,EAAcC,QAAQ,SAAAC,GACpB,IAAMC,EACJhP,EAAAC,EAAAC,cAAA+D,EAAA,GAAKwB,IAAKsJ,EAAEE,aAAcjO,MAAO,CAAEK,UAAW,KAC5CrB,EAAAC,EAAAC,cAAA4E,EAAA,EAAQ8F,MAAR,CAAcpJ,KAAK,SACjBxB,EAAAC,EAAAC,cAAA2E,EAAA,GACE9B,MACEgM,EAAEG,OACE,oBACA,2CAGNlP,EAAAC,EAAAC,cAAA4E,EAAA,GACEP,SAAUwK,EAAEG,OACZ/O,QAAS,WACPJ,EAAKoP,+BAA+BJ,EAAEE,eAExCnX,KAAK,WALP,iBAUFkI,EAAAC,EAAAC,cAAA4E,EAAA,GACE9D,MAAO,CAAEoO,YAAa,IACtBjP,QAAS,WACPJ,EAAKsP,4BAA4BN,EAAEE,gBAHvC,WAUFjP,EAAAC,EAAAC,cAAA,KACEmD,OAAO,SACPC,IAAI,sBACJX,KAAM,UAAYoM,EAAEE,cAEnBF,EAAEE,eAITvE,EAAKtF,KAAK4J,KAGLtE,4DAIP,IAAM4E,EAAa5J,GAAiB9M,KAAKiH,MAAMsC,SAC/CmN,EAAW1R,cAAcS,kBAAoBzF,KAAKiH,MAAMsC,QAASgM,mBACjEvV,KAAKiH,MAAM0P,cAAcD,+CAGP,IAAA5I,EAAA9N,KACZyF,EAAoBzF,KAAKiH,MAAMsC,QAASvE,cAC3CS,kBACH,OAAKA,EAcH2B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6NAMAF,EAAAC,EAAAC,cAAA6B,EAAA,EAAO0I,SAAP,CACEzJ,MAAO,CACLwO,WAAY,aAEdhM,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiBgB,EAAK7G,MAAMsC,SAC/CmN,EAAW1R,cAAcS,kBAAoB3E,EAAE2J,OAAOK,MACtDgD,EAAK7G,MAAM0P,cAAcD,IAE3B5E,KAAM,GACNjG,aAAcpG,KA7BhB2B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA4E,EAAA,GACEhN,KAAK,UACLqI,QAAS,kBAAMuG,EAAK+I,oCAFtB,iGAkC2B,IAAAC,EAAA9W,KAC3B2U,EAAM3U,KAAKiH,MAAMsC,QAASvE,cAC1Bb,EAAanE,KAAKiH,MAAMsC,QAASpF,WAEvC,OACEiD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA2E,EAAA,GACE9B,MACEwK,EAAIC,uBACA,oBACA,2CAGNxN,EAAAC,EAAAC,cAAA4E,EAAA,GACEP,SAAUgJ,EAAIC,uBACdxM,MAAO,CAAEoO,YAAa,IACtBjP,QAAS,WACPuP,EAAKC,sBAEP7X,KAAK,UACL0J,KAAK,SAPP,iBAYFxB,EAAAC,EAAAC,cAAA,KACEyC,KACE,QACC4K,EAAIC,uBAAyB,IAAM,IACpC,MACAD,EAAIrQ,QACJ,IACAH,EAEFsG,OAAO,SACPC,IAAI,uBAEH,QACEiK,EAAIC,uBAAyB,IAAM,IACpC,MACAD,EAAIrQ,QACJ,IACAH,IAGNiD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAC0P,GAAD,CACErM,YAAY,oCACZmB,YAAY,qBACZC,SAAU,SAAAjB,GAAK,OAAIgM,EAAKG,0BAA0BnM,OALxD,eASE1D,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,iFACb/C,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMC,MAAO,CAAEK,UAAW,GAAKvJ,KAAK,mBAK1CkI,EAAAC,EAAAC,cAAA,WACCtH,KAAKkX,yBACN9P,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCtH,KAAKmX,oBACN/P,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAA8M,GAAA,GACExJ,SAAU,SAAC9J,GACT,IAAM4V,EAAa5J,GAAiBgK,EAAK7P,MAAMsC,SAC/CmN,EAAW1R,cAAcI,WAAatE,EAAE2J,OAAO4J,QAC/CyC,EAAK7P,MAAM0P,cAAcD,KAJ7B,0DASAtP,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,6JACb/C,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,uEAOO,IAAAkY,EAAApX,KACpB2U,EAAM3U,KAAKiH,MAAMsC,QAASvE,cAChC,OACEoC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+CACsC,IACpCF,EAAAC,EAAAC,cAAA,4BAAoBqN,EAAIrQ,SAF1B,mEAGmC,IACjC8C,EAAAC,EAAAC,cAAA,YAAO,uBAAyBqN,EAAIrQ,SAJtC,qBAMA8C,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA8M,GAAA,GACEiD,eAAgBrX,KAAKiH,MAAMsC,QAASvE,cAAcG,kBAClDyF,SAAU,SAAC9J,GACT,IAAM4V,EAAa5J,GAAiBsK,EAAKnQ,MAAMsC,SAC/CmN,EAAW1R,cAAcG,oBAAsBrE,EAAE2J,OAAO4J,QACxD+C,EAAKnQ,MAAM0P,cAAcD,KAL7B,4BAUAtP,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,gEACb/C,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,iBAGbkI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACrBkF,EAAIxP,kBACHiC,EAAAC,EAAAC,cAAA,YAEAtH,KAAKsX,2CAzT2B5P,gCCIrB6P,IAFNpO,EAAA,EAAMD,mBAYnB,SAAAqO,EAAYtQ,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAuX,IACtBpQ,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAoY,GAAAzP,KAAA9H,KAAMiH,KACDpI,MAAQ,CACX2Y,cAAUxY,EACVyY,4BAA4B,EAC5BC,gBAAgB,EAChBC,SAAU,GACVC,qBAAqB,GAPDzQ,4EAYX0Q,GACX,IAAM9K,EAA+B,GAiCrC,OA9BA8K,EACGC,WACAC,MAAM,MACN7B,QAAQ,SAAS8B,EAAMC,GAEtB,IAAMC,EAAcF,EAAKG,MAAM,iCAE/B,GAAmB,MAAfD,EAAqB,CACvB,IAAMrL,EAAMqL,EAAY,GAGpBpN,EAAQoN,EAAY,IAAM,GAGxBE,EAAMtN,EAAQA,EAAM/L,OAAS,EAEjCqZ,EAAM,GACc,MAApBtN,EAAMuN,OAAO,IACa,MAA1BvN,EAAMuN,OAAOD,EAAM,KAEnBtN,EAAQA,EAAMN,QAAQ,QAAS,OAIjCM,EAAQA,EAAMN,QAAQ,iBAAkB,IAAIO,OAE5CgC,EAAIF,GAAO/B,KAIViC,+CAGY7H,GACnB,OAAOA,EACJ2I,IAAI,SAAA/M,GACH,IAAIwX,EAAMxX,EAAEgK,MAIZ,OAHIwN,EAAI/H,QAAQ,OAAS,IACvB+H,EAAM,IAAMA,EAAIP,MAAM,MAAMQ,KAAK,OAAS,KAErCzX,EAAE+L,IAAM,IAAMyL,IAEtBC,KAAK,oDAIR,IAAMnW,EAAOpC,KACPkF,EAAUlF,KAAKiH,MAAMsC,QAAQvE,cAAcE,SAAW,GAE5D,GAAI9C,EAAKvD,MAAM6Y,eACb,OACEtQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA+D,EAAA,GAAKjD,MAAO,CAAEwJ,cAAe,KAC3BxK,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA6B,EAAA,EAAO0I,SAAP,CACE1D,UAAU,aACVxD,YAAa,2BACbmH,KAAM,EACNhH,MACE1I,EAAKvD,MAAM8Y,SACPvV,EAAKvD,MAAM8Y,SACXvV,EAAKoW,qBAAqBtT,GAEhC0F,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiB1K,EAAK6E,MAAMsC,SACzCkP,EAAUrW,EAAKsW,aAAa5X,EAAE2J,OAAOK,OACrC5F,EAAwB,GAC9B/F,OAAOwZ,KAAKF,GAASvC,QAAQ,SAAA0C,GAC3B1T,EAAQsH,KAAK,CAAEK,IAAK+L,EAAG9N,MAAO2N,EAAQG,OAExClC,EAAW1R,cAAcE,QAAUA,EACnC9C,EAAK6E,MAAM0P,cAAcD,GACzBtU,EAAKsH,SAAS,CAAEiO,SAAU7W,EAAE2J,OAAOK,cASjD,IAAMgH,EAAO5M,EAAQ2I,IAAI,SAAC/C,EAAO0C,GAC/B,OACEpG,EAAAC,EAAAC,cAAA+D,EAAA,GAAKjD,MAAO,CAAEwJ,cAAe,IAAM/E,IAAK,GAAKW,GAC3CpG,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GACTnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEgF,UAAU,aACVxD,YAAY,MACZG,MAAOA,EAAM+B,IACb3N,KAAK,OACL0L,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiB1K,EAAK6E,MAAMsC,SAC/CmN,EAAW1R,cAAcE,QAAQsI,GAAOX,IAAM/L,EAAE2J,OAAOK,MACvD1I,EAAK6E,MAAM0P,cAAcD,OAI/BtP,EAAAC,EAAAC,cAAAgE,EAAA,GAAKlD,MAAO,CAAEgK,YAAa,IAAM7G,KAAM,IACrCnE,EAAAC,EAAAC,cAAA6B,EAAA,EAAO0I,SAAP,CACE1D,UAAU,aACVxD,YAAY,QACZmH,KAAM,EACNhH,MAAOA,EAAMA,MACbF,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiB1K,EAAK6E,MAAMsC,SAC/CmN,EAAW1R,cAAcE,QAAQsI,GAAO1C,MAAQhK,EAAE2J,OAAOK,MACzD1I,EAAK6E,MAAM0P,cAAcD,UAQrC,OACEtP,EAAAC,EAAAC,cAAA,WACGwK,EAED1K,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA4E,EAAA,GAAQhN,KAAK,UAAUqI,QAAS,kBAAMnF,EAAKyW,qBAA3C,gEAQJ,IAAMzW,EAAOpC,KAEb,OADcA,KAAKiH,MAAMsC,QAAQvE,cAAcM,OAAS,IAC3CuI,IAAI,SAAC/C,EAAO0C,GACvB,OACEpG,EAAAC,EAAAC,cAAA+D,EAAA,GAAKjD,MAAO,CAAEwJ,cAAe,IAAM/E,IAAK,GAAKW,GAC3CpG,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,2CACb/C,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,cACZf,YAAY,OACZG,MAAOA,EAAMgO,SAAWhO,EAAMgO,SAAW,GAAK,GAC9C5Z,KAAK,SACL0L,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiB1K,EAAK6E,MAAMsC,SACzCwP,EAAIC,OAAOlY,EAAE2J,OAAOK,MAAMC,QAChC2L,EAAW1R,cAAcM,MAAMkI,GAAOsL,SACpCC,EAAI,EAAIA,EAAI,EACd3W,EAAK6E,MAAM0P,cAAcD,QAKjCtP,EAAAC,EAAAC,cAAAgE,EAAA,GAAKlD,MAAO,CAAEgK,YAAa,IAAM7G,KAAM,IACrCnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,iBACZf,YAAY,OACZG,MAAOA,EAAMmO,cAAgBnO,EAAMmO,cAAgB,GAAK,GACxDrO,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiB1K,EAAK6E,MAAMsC,SACzCwP,EAAIC,OAAOlY,EAAE2J,OAAOK,MAAMC,QAChC2L,EAAW1R,cAAcM,MAAMkI,GAAOyL,cACpCF,EAAI,EAAIA,EAAI,EACd3W,EAAK6E,MAAM0P,cAAcD,kDAUrC,IAAMtU,EAAOpC,KAEb,OADgBA,KAAKiH,MAAMsC,QAAQvE,cAAcK,SAAW,IAC7CwI,IAAI,SAAC/C,EAAO0C,GACzB,OACEpG,EAAAC,EAAAC,cAAA+D,EAAA,GAAKjD,MAAO,CAAEwJ,cAAe,IAAM/E,IAAK,GAAKW,GAC3CpG,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GACTnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,cACZyC,UAAU,aACVxD,YAAY,gBACZG,MAAOA,EAAMoO,cACbha,KAAK,OACL0L,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiB1K,EAAK6E,MAAMsC,SAC/CmN,EAAW1R,cAAcK,QAAQmI,GAAO0L,cACtCpY,EAAE2J,OAAOK,MACX1I,EAAK6E,MAAM0P,cAAcD,OAI/BtP,EAAAC,EAAAC,cAAAgE,EAAA,GACElD,MAAO,CAAEgK,YAAa,IACtB7G,KAAM,EACN4C,UAAWrD,EAAMqO,SAAW,iBAAmB,IAE/C/R,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,QACZyC,UAAU,aACVxD,YAAY,YACZG,MAAOA,EAAMsO,WACbxO,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiB1K,EAAK6E,MAAMsC,SAC/CmN,EAAW1R,cAAcK,QAAQmI,GAAO4L,WACtCtY,EAAE2J,OAAOK,MACX1I,EAAK6E,MAAM0P,cAAcD,OAK/BtP,EAAAC,EAAAC,cAAAgE,EAAA,GACElD,MAAO,CAAEgK,YAAa,IACtB7G,KAAM,EACN4C,UAAYrD,EAAMqO,SAA8B,GAAnB,kBAE7B/R,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,+DACb/C,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,eACZyC,UAAU,aACVxD,YAAY,oBACZG,MAAOA,EAAMqO,SACbvO,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiB1K,EAAK6E,MAAMsC,SAC/CmN,EAAW1R,cAAcK,QAAQmI,GAAO2L,SACtCrY,EAAE2J,OAAOK,MACX1I,EAAK6E,MAAM0P,cAAcD,QAKjCtP,EAAAC,EAAAC,cAAAgE,EAAA,GAAKlD,MAAO,CAAEgK,YAAa,IAAM7G,KAAM,GACrCnE,EAAAC,EAAAC,cAAA4E,EAAA,GACEhN,KAAK,SACLqI,QAAS,WACP,IAAMmP,EAAa5J,GAAiB1K,EAAK6E,MAAMsC,SAC/CmN,EAAW1R,cAAcK,QAAQmI,GAAO2L,SAAWzC,EAChD1R,cAAcK,QAAQmI,GAAO2L,SAC5B,GACA,IACJ/W,EAAK6E,MAAM0P,cAAcD,KAG1B5L,EAAMqO,SACH,0BACA,yEAQG,IAAArL,EAAA9N,KACXoC,EAAOpC,KACP2U,EAAM3U,KAAKiH,MAAMsC,QAASvE,cAEhC,OAAK2P,EAAIhP,kBAGPyB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wCAEEF,EAAAC,EAAAC,cAAA,KACEyC,KAAK,4EACLU,OAAO,SACPC,IAAI,uBAEJtD,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,kBAGfkI,EAAAC,EAAAC,cAAA,OACE6G,UACEwG,EAAItP,SAAasP,EAAItP,QAAQtG,OAAS,iBAAmB,IAG3DqI,EAAAC,EAAAC,cAAA,2EAGDtH,KAAKqZ,gBACNjS,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA4E,EAAA,GAAQhN,KAAK,UAAUqI,QAAS,kBAAMuG,EAAKwL,qBAA3C,4BAGAlS,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,EAAGnD,MAAO,CAAEG,MAAO,MAC5BnB,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,uCACb/C,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,UACZyC,UAAU,aACVrD,MAAO6J,EAAIpP,OAASoP,EAAIpP,OAAS,GACjCoG,UAAW3L,KAAKnB,MAAM+Y,oBACtBhN,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiB1K,EAAK6E,MAAMsC,SAC/CmN,EAAW1R,cAAcO,OAASzE,EAAE2J,OAAOK,MAC3C1I,EAAK6E,MAAM0P,cAAcD,QAKjCtP,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GAAInD,MAAO,CAAEgK,YAAa,KACnChL,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,8FACb/C,EAAAC,EAAAC,cAAA4E,EAAA,GACEhN,KAAK,UACLyM,SAAU3L,KAAKnB,MAAM+Y,oBACrBrQ,QAAS,kBAAMuG,EAAKpE,SAAS,CAAEkO,qBAAqB,MAHtD,WAWNxQ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YA7D+BF,EAAAC,EAAAC,cAAA,6CAkE5B,IAAAwP,EAAA9W,KACDoC,EAAOpC,KACP2U,EAAM3U,KAAKiH,MAAMsC,QAASvE,cAChC,OACEoC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA+D,EAAA,GAAKqJ,MAAM,SAAS1I,QAAQ,MAAM9M,KAAK,QACrCkI,EAAAC,EAAAC,cAAA,0BACkB,IAChBF,EAAAC,EAAAC,cAAAiS,GAAA,GACE3O,SAAU,SAAA0N,GACRlW,EAAKsH,SAAS,CAAEgO,eAAgBY,EAAKX,SAAU,UAKvDvQ,EAAAC,EAAAC,cAAA,OACE6G,UACEwG,EAAIzP,SAAayP,EAAIzP,QAAQnG,OAAS,iBAAmB,IAG3DqI,EAAAC,EAAAC,cAAA,uFAMDtH,KAAKwZ,sBAENpS,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAAA,KACEyC,KAAK,uEACLU,OAAO,SACPC,IAAI,uBAEJtD,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,kBAGfkI,EAAAC,EAAAC,cAAA,OACE6G,UAAWwG,EAAIrP,OAAWqP,EAAIrP,MAAMvG,OAAS,iBAAmB,IAEhEqI,EAAAC,EAAAC,cAAA,wEAGDtH,KAAKyZ,iBAENrS,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA4E,EAAA,GAAQhN,KAAK,UAAUqI,QAAS,kBAAMuP,EAAK4C,0BAA3C,oBAGAtS,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCtH,KAAK2Z,mBACNvS,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,EAAGnD,MAAO,CAAEG,MAAO,MAC5BnB,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,2CACb/C,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,iBACZxM,KAAK,SACL2M,aAAc8I,EAAI1P,cAAgB,GAClC0G,SACEgJ,EAAIhP,oBACH3F,KAAKnB,MAAM4Y,2BAEd7M,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiBgK,EAAK7P,MAAMsC,SAC/CmN,EAAW1R,cAAcC,cAAgB+T,OACvClY,EAAE2J,OAAOK,OAEXgM,EAAK7P,MAAM0P,cAAcD,QAKjCtP,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GACTnE,EAAAC,EAAAC,cAAA,OACEc,MAAO,CAAEgK,YAAa,IACtBjE,UAAYwG,EAAIhP,kBAAuC,GAAnB,kBAEpCyB,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,iOACb/C,EAAAC,EAAAC,cAAA4E,EAAA,GACEhN,KAAK,UACLyM,SAAU3L,KAAKnB,MAAM4Y,2BACrBlQ,QAAS,kBACPuP,EAAKpN,SAAS,CAAE+N,4BAA4B,MAJhD,YAcRrQ,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAAA,KACEc,MAAO,CAAEgK,YAAa,IACtBrI,KAAK,0DACLU,OAAO,SACPC,IAAI,uBAEJtD,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,kBAIfkI,EAAAC,EAAAC,cAAA6B,EAAA,EAAO0I,SAAP,CACE+H,YAAY,EACZC,YAAY,MACZC,aAAa,MACbC,eAAe,MACf5L,UAAU,aACVxD,YAAY,2EACZmH,KAAM,EACNhH,MAAO6J,EAAIjP,kBAAoBiP,EAAIjP,kBAAoB,GACvDkF,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiBgK,EAAK7P,MAAMsC,SAC/CmN,EAAW1R,cAAcU,kBAAoB5E,EAAE2J,OAAOK,MACtDgM,EAAK7P,MAAM0P,cAAcD,wDASnC,IAAMA,EAAa5J,GAAiB9M,KAAKiH,MAAMsC,SAC/CmN,EAAW1R,cAAcM,MAAQoR,EAAW1R,cAAcM,OAAS,GACnEoR,EAAW1R,cAAcM,MAAMkH,KAAK,CAClCyM,cAAe,EACfH,SAAU,IAEZ9Y,KAAKiH,MAAM0P,cAAcD,8CAIzB,IAAMA,EAAa5J,GAAiB9M,KAAKiH,MAAMsC,SAC/CmN,EAAW1R,cAAcE,QAAUwR,EAAW1R,cAAcE,SAAW,GACvEwR,EAAW1R,cAAcE,QAAQsH,KAAK,CACpCK,IAAK,GACL/B,MAAO,KAET9K,KAAKiH,MAAM0P,cAAcD,8CAIzB,IAAMA,EAAa5J,GAAiB9M,KAAKiH,MAAMsC,SAC/CmN,EAAW1R,cAAcK,QAAUqR,EAAW1R,cAAcK,SAAW,GACvEqR,EAAW1R,cAAcK,QAAQmH,KAAK,CACpC0M,cAAe,GACfE,WAAY,KAEdpZ,KAAKiH,MAAM0P,cAAcD,yCAIzB1W,KAAKiH,MAAMuC,qBApgByB9B,cCfnBsS,eAanB,SAAAA,EAAY/S,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAga,IACtB7S,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAA6a,GAAAlS,KAAA9H,KAAMiH,KACDpI,MAAQ,CACXob,eAAe,EACfC,eAAgB/S,EAAKF,MAAMkT,qBAC3BC,UAAW,GACXC,uBAAwB,KANJlT,sFAWlBnH,KAAKsa,wBACPC,cAAcva,KAAKsa,iEAKrB,IAAMlY,EAAOpC,KACbA,KAAKgI,WACFwS,eAAexa,KAAKiH,MAAM3C,SAC1BhC,KAAK,SAASmY,GACbrY,EAAKsH,SAAS,CAAEuQ,cAAeQ,EAAQR,gBACnCQ,EAAQR,eAEV7X,EAAKsH,SAAS,CAAEwQ,cAAc,IAGhC,IAAIQ,EAAQD,EAAQE,KAAKD,MACrBE,EAAwBH,EAAQE,KAAKE,gBACrCC,EAAoB,EACpBF,EAAwBxY,EAAKvD,MAAMwb,sBACjCO,EAAwB,EAE1BE,GAAqBF,EAErBxY,EAAKsH,SAAS,CACZ0Q,UAAWhY,EAAKvD,MAAMub,UAAY,sBAItCU,EACE1Y,EAAKvD,MAAMwb,sBAAwBO,EAGvCxY,EAAKsH,SAAS,CACZ2Q,sBAAuBO,EAAwBF,EAAM3b,SAMvD,IAHA,IAAIgc,GAAY,EAEZX,EAAYhY,EAAKvD,MAAMub,UAClBY,EAAIF,EAAmBE,EAAIN,EAAM3b,OAAQic,IAChDZ,IAAcM,EAAMM,IAAM,IAAIjQ,OAAS,KAEvCgQ,GAAY,EAEd3Y,EAAKsH,SAAS,CAAE0Q,UAAWA,IAEvBW,GACFE,WAAW,WACT,IAAIC,EAAWC,SAASC,eAAe,oBACnCF,IAAUA,EAASG,UAAYH,EAASI,eAC3C,OAGNvY,MAAM8F,EAAQc,6DAIjB,IAAMvH,EAAOpC,KACbA,KAAKwa,iBACLxa,KAAKsa,uBAAyBiB,YAAY,WACxCnZ,EAAKoY,kBACJ,kDAIHxa,KAAK0J,SAAS,CAAEwQ,cAAela,KAAKnB,MAAMqb,gDAI1C,IAAM9X,EAAOpC,KACb,OACEoH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAA,OAAK6G,UAAWnO,KAAKnB,MAAMob,cAAgB,GAAK,kBAC9C7S,EAAAC,EAAAC,cAAA8G,EAAA,GACE1O,QACE0H,EAAAC,EAAAC,cAAA,uBAEEF,EAAAC,EAAAC,cAAAgB,EAAA,GACEK,UACEvB,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,UAAUkJ,MAAO,CAAEC,SAAU,IAAMC,MAAI,IAEpDM,KAAK,YANT,iFAYF1J,KAAK,WAKXkI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MAEtBrI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgH,EAAD,CACEpH,cAAe,WACb9E,EAAKoZ,uBAGPpU,EAAAC,EAAAC,cAAA,MAAI6G,UAAU,qBACZ/G,EAAAC,EAAAC,cAAAa,EAAA,GACEjJ,KAAOc,KAAKnB,MAAMqb,aAA+B,YAAhB,gBAFrC,WAKIla,KAAKnB,MAAMqb,aAAwB,OAAT,OAL9B,iBAUJ9S,EAAAC,EAAAC,cAAA,OACE6G,UACEnO,KAAKnB,MAAMob,eAAiBja,KAAKnB,MAAMqb,aACnC,GACA,iBAEN9R,MAAO,CAAEqT,QAAS,IAElBrU,EAAAC,EAAAC,cAAA,OACEoG,GAAG,mBACHtF,MAAO,CACLsT,SAAU,SACVjM,OAAQ,IACRoD,OAAQ,oBACRC,gBAAiB,UACjBF,aAAc,EACd6I,QAAS,GACTpT,SAAU,QAGZjB,EAAAC,EAAAC,cAAA,WAAMlF,EAAKvD,MAAMub,sBA7JYzS,sBCAtBgU,eASnB,SAAAA,EAAY1U,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAA2b,IACtBxU,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAwc,GAAA7T,KAAA9H,KAAMiH,KAMR2U,aAAe,SAACrX,GAEd,OAAO,GATe4C,EAYxB0U,aAAe,SAACC,GACd,GAAIA,EAAKC,SAAShd,OAAS,EACzBW,EAAA,EAAQuB,MACN,mFAFJ,CAOA,GAA6B,IAAzB6a,EAAKC,SAAShd,OAGhB,OAFAoI,EAAKuC,SAAS,CAAEsS,sBAAkBhd,SAClCU,EAAA,EAAQoc,KAAK,gBAIf,IAAIvX,EAAOuX,EAAKC,SAAS,GAErBxX,EAAK0X,KAAK1L,QAAQ,QAAU,EAC9B7Q,EAAA,EAAQuB,MAAM,mCAIhBkG,EAAKuC,SAAS,CAAEsS,iBAAkBzX,MA/BlC4C,EAAKtI,MAAQ,CACXmd,sBAAkBhd,GAHEmI,sFAqCtB,IAAM/E,EAAOpC,KAEb4C,QAAQC,UACLP,KAAK,WACJ,OAAOF,EAAK4F,WAAWkU,cACrB9Z,EAAK6E,MAAM3C,QACXlC,EAAKvD,MAAMmd,iBAAkBG,iBAGhC7Z,KAAK,WACJF,EAAK6E,MAAMmV,sBAEZrZ,MAAM8F,EAAQc,kDAGV,IAAAmE,EAAA9N,KACP,OACEoH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,UACvB5E,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA+U,GAAA,EAAQC,QAAR,CACEL,KAAK,QACLM,OAAO,MACPC,UAAU,EACVT,SACE/b,KAAKnB,MAAMmd,iBACP,CAAChc,KAAKnB,MAAMmd,uBACZhd,EAENyd,SAAS,OACT7R,SAAU5K,KAAK6b,aACfD,aAAc5b,KAAK4b,aACnB3c,OAAO,MAEPmI,EAAAC,EAAAC,cAAA,KAAG6G,UAAU,wBACX/G,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,WAEbkI,EAAAC,EAAAC,cAAA,KAAG6G,UAAU,mBAAb,iDAGA/G,EAAAC,EAAAC,cAAA,KAAG6G,UAAU,mBAAb,gBACe/G,EAAAC,EAAAC,cAAA,kCADf,aAONF,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,UACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACE9D,MAAO,CAAEK,UAAW,IACpBkD,UAAW3L,KAAKnB,MAAMmd,iBACtBzU,QAAS,kBAAMuG,EAAK4O,wBACpBxd,KAAK,UACL0J,KAAK,SALP,4BA9F+BjB,GCDpBgV,oLAIV,IAAAxV,EAAAnH,KACP,OACEoH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMrI,OAAO,IAAI6a,aAAa,OAC5B1S,EAAAC,EAAAC,cAAA+D,EAAA,GAAKuR,OAAQ,IACXxV,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEf,MAAO,CAAEM,aAAc,IACvBoC,MAAO9K,KAAKiH,MAAM4V,cAAcC,KAChCpR,YAAY,aACZf,YAAY,+BACZzL,KAAK,MACL0a,YAAY,EACZC,YAAY,MACZC,aAAa,MACbC,eAAe,MACfnP,SAAU,SAAA9J,GACR,IAAMic,EAASjQ,GAAiB3F,EAAKF,MAAM4V,eAC3CE,EAAOD,KAAOhc,EAAE2J,OAAOK,MACvB3D,EAAKF,MAAM+V,eAAeD,OAIhC3V,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEf,MAAO,CAAEM,aAAc,IACvBoC,MAAO9K,KAAKiH,MAAM4V,cAAcI,OAChCvR,YAAatE,EAAAC,EAAAC,cAAA,sCACbqD,YAAY,SACZzL,KAAK,OACL0a,YAAY,EACZC,YAAY,MACZC,aAAa,MACbC,eAAe,MACfnP,SAAU,SAAA9J,GACR,IAAMic,EAASjQ,GAAiB3F,EAAKF,MAAM4V,eAC3CE,EAAOE,OAASnc,EAAE2J,OAAOK,MACzB3D,EAAKF,MAAM+V,eAAeD,OAIhC3V,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEf,MAAO,CAAEM,aAAc,IACvBoC,MAAO9K,KAAKiH,MAAM4V,cAAcK,KAChCxR,YAAatE,EAAAC,EAAAC,cAAA,4BACbqD,YAAY,oBACZzL,KAAK,QACL0L,SAAU,SAAA9J,GACR,IAAMic,EAASjQ,GAAiB3F,EAAKF,MAAM4V,eAC3CE,EAAOG,KAAOpc,EAAE2J,OAAOK,MACvB3D,EAAKF,MAAM+V,eAAeD,OAIhC3V,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEf,MAAO,CAAEM,aAAc,IACvBoC,MAAO9K,KAAKiH,MAAM4V,cAAc7Y,SAChC0H,YAAY,WACZf,YAAY,iBACZiP,YAAY,EACZC,YAAY,MACZC,aAAa,MACbC,eAAe,MACf7a,KAAK,OACL0L,SAAU,SAAA9J,GACR,IAAMic,EAASjQ,GAAiB3F,EAAKF,MAAM4V,eAC3CE,EAAO/Y,SAAWlD,EAAE2J,OAAOK,MAC3B3D,EAAKF,MAAM+V,eAAeD,iBAzEHrV,aCLzC,SAASyV,GAAqBC,EAAmBC,GAC/CxT,OAAOyT,SAAS,EAAGF,GACnBC,EAAGC,SAAS,CACVC,IAAKH,EACLI,SAAU,WAIC,IAAAC,GAAA,SACEC,GACb,IAAML,EAAKlC,SAASC,eAAe,wBAChBiC,EAAKA,EAAGhC,UAAY,IACrB,MAEbqC,EAKLzC,WAAW,WACTkC,GAAqB,EAAGE,IACvBK,GANDP,GAAqB,EAAGE,KCbTM,iMAEjB,4HAMuCC,GACvC,OAAOA,EAAiB7S,0BCI1B,SAAA8S,EAAY5W,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAA6d,IACtB1W,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAA0e,GAAA/V,KAAA9H,KAAMiH,KACDpI,MAAQ,CACX+e,iBAAkB,GAClBE,iBAAiB,GAJG3W,2EAcZ4W,GACV,IAAM3b,EAAOpC,KAEb4C,QAAQC,UACLP,KAAK,WAEJ,OADAF,EAAKsH,SAAS,CAAEoU,iBAAiB,IAC1B1b,EAAK4F,WAAWgW,+BACrB5b,EAAK6E,MAAM3C,QACXQ,KAAKkI,MAAM+Q,IACX,KAGHzb,KAAK,WACJF,EAAKsH,SAAS,CAAEkU,iBAAkB,KAClCxb,EAAK6E,MAAMmV,sBAEZrZ,MAAM8F,EAAQc,iBACdrH,KAAK,WACJF,EAAKsH,SAAS,CAAEoU,iBAAiB,uCAKrC,IAAM1b,EAAOpC,KACb,OACEoH,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqT,QAAS,KACrBrU,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAA6B,EAAA,EAAO0I,SAAP,CACE1D,UAAU,aACVxD,YAAavI,EAAK6b,sBAClBnM,KAAM,EACNhH,MAAO1I,EAAKvD,MAAM+e,iBAClBhT,SAAU,SAAA9J,GACRsB,EAAKsH,SAAS,CACZkU,iBAAkB9c,EAAE2J,OAAOK,YAKnC1D,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACEP,SACEvJ,EAAKvD,MAAMif,kBAAoB1b,EAAKvD,MAAM+e,iBAAiB7S,OAE7D7L,KAAK,UACLqI,QAAS,kBACPnF,EAAK8b,YACH9b,EAAK+b,+BAA+B/b,EAAKvD,MAAM+e,qBAPrD,uBAjEkDjW,ICFvCyW,iMAEjB,kLAMuCR,GACvC,IAAMS,EAAoC,CACxCC,cAAe,EACfC,gBAAiBX,EAAiB7S,OAAOgN,MAAM,OAGjD,OAAOjT,KAAKC,UAAUsZ,UAd+BV,ICYpCa,eAOnB,SAAAA,EAAYvX,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAwe,IACtBrX,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAqf,GAAA1W,KAAA9H,KAAMiH,KACDpI,MAAQ,CACX2Y,cAAUxY,EACVmb,qBAAsB,IAJFhT,iFAStBzH,EAAA,EAAQoc,KAAK,qBACb9b,KAAK0J,SAAS,CAAEyQ,qBAAsB,IAAK,IAAIsE,MAAOC,YACtDjB,sCAGO,IAAA3P,EAAA9N,KACDoC,EAAOpC,KACP2U,EAAM3U,KAAKiH,MAAMsC,QAAQvE,cACzB2Z,EACJhK,EAAInP,gBAAkBmP,EAAInP,eAAeoZ,iBACrCC,EAAWlK,EAAInP,eACjBmP,EAAInP,eAAeqZ,SACnB,CACE3B,KAAM,GACNlZ,SAAU,GACViZ,OAAQ,GACRH,KAAM,IAEZ,OACE1V,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwX,GAAD,CACExa,QAASqQ,EAAIrQ,QACb6V,qBAAsB/X,EAAKvD,MAAMsb,qBACjCtN,IAAK8H,EAAIrQ,QAAW,IAAMlC,EAAKvD,MAAMsb,uBAEvC/S,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,8BACCqN,EAAIoK,gBACL3X,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BAAyB,IACxBqN,EAAIqK,SAASrK,EAAIoK,iBAAiBE,SAAW,MAC9C7X,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,wBAAmB,IAClB,IAAImX,KACH9J,EAAIqK,SAASrK,EAAIoK,iBAAiBG,WAClCC,iBACF/X,EAAAC,EAAAC,cAAA,aAIJF,EAAAC,EAAAC,cAAA,oFAEM,IACJF,EAAAC,EAAAC,cAAA,KACEyC,KAAK,gEACLU,OAAO,UAFT,QAKK,IARP,qBAWArD,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,SADb,2BAGAkI,EAAAC,EAAAC,cAAA,yGAEwBF,EAAAC,EAAAC,cAAA,sCAFxB,8BAGkB,IAChBF,EAAAC,EAAAC,cAAA,KACEyC,KAAK,+EACLU,OAAO,UAFT,SAOFrD,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,SADb,sBAGAkI,EAAAC,EAAAC,cAAA,6CACmCF,EAAAC,EAAAC,cAAA,oBADnC,2DAKAF,EAAAC,EAAAC,cAAC8X,GAAD,CACEhD,kBAAmB,kBAAMha,EAAKid,mBAC9B/a,QAASqQ,EAAIrQ,UAGf8C,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,SADb,kDAGAkI,EAAAC,EAAAC,cAAA,+MAIEF,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAA6B,EAAA,GACEmW,QAAS,SAAAxe,GACH6d,IACF7d,EAAE2J,OAAO8U,SACTpE,SAASqE,YAAY,QACrB9f,EAAA,EAAQoc,KAAK,0BAGjB3N,UAAU,aACVsR,UAAU,EACV9T,UAAWgT,EACX9S,aACE8S,EACI9U,OAAOC,SAAS4V,SAChB,aACA1f,KAAKiH,MAAMsC,QAAQpF,WACnB,8DACAwQ,EAAInP,eAAgBoZ,iBACpB,6DAIVxX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqY,GAAD,CACE9C,cAAegC,EACf7B,eAAgB,SAAA4C,GACdve,QAAQC,IAAIse,GACZ,IAAMlJ,EAAa5J,GAAiBgB,EAAK7G,MAAMsC,SAC3CmN,EAAW1R,cAAcQ,eAC3BkR,EAAW1R,cAAcQ,eAAeqZ,SAAW/R,GACjD8S,GAGFlJ,EAAW1R,cAAcQ,eAAiB,CACxCqZ,SAAU/R,GAAiB8S,IAG/B9R,EAAK7G,MAAM0P,cAAcD,MAG7BtP,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACEP,UAAWkT,EAAS/B,KACpB5d,KAAK,UACLqI,QAAS,kBAAMnF,EAAK6E,MAAM4Y,0BAH5B,kBAQFzY,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,SADb,sCAGAkI,EAAAC,EAAAC,cAACwY,GAAD,CACExb,QAASqQ,EAAIrQ,QACb8X,kBAAmB,kBAAMha,EAAKid,qBAEhCjY,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,SADb,6CAGAkI,EAAAC,EAAAC,cAACyY,GAAD,CACEzb,QAASqQ,EAAIrQ,QACb8X,kBAAmB,kBAAMha,EAAKid,6BA9KA3X,aCWlCsY,GAAUC,GAAA,EAAKD,QAEfE,GAAe,eAsBAC,eAYnB,SAAAA,EAAYlZ,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAmgB,IACtBhZ,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAghB,GAAArY,KAAA9H,KAAMiH,KAJAmZ,mBAAoB,EAGJjZ,EAFhBkZ,yBAAmC,GAKzClZ,EAAKtI,MAAQ,CACXyhB,aAAcJ,GACd5W,WAAW,EACXiX,yBAA0B,EAC1BhX,aAASvK,GAPWmI,8EAYtBnH,KAAKiH,MAAMsF,QAAQC,KAAK,sDAIxB,IAAMpK,EAAOpC,KACPwgB,EAAS1T,GAAiB1K,EAAKvD,MAAM0K,QAASvE,eAEpD5C,EAAKie,yBAA2B,GAEhCpW,EAAA,EAAMC,QAAQ,CACZC,MAAO,4BACPC,QACEhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oCAC0BF,EAAAC,EAAAC,cAAA,YAAOkZ,EAAOlc,SADxC,0GAIE8C,EAAAC,EAAAC,cAAA,4BAJF,KAMAF,EAAAC,EAAAC,cAAA,KAAG6G,UAAWqS,EAAO7a,kBAAoB,GAAK,kBAC5CyB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,aAAKkZ,EAAOlc,SAFd,6LAME8C,EAAAC,EAAAC,cAAA,KACEyC,KAAK,mFACLU,OAAO,SACPC,IAAI,uBAHN,kBANF,qBAeAtD,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,OACLyL,YAAa6V,EAAOlc,QACpBsG,SAAU,SAAA9J,GACRsB,EAAKie,yBAA2Bvf,EAAE2J,OAAOK,MAAMC,WAKvDV,KAnCY,WAoCNjI,EAAKie,2BAA6BG,EAAOlc,SAK7ClC,EAAKsH,SAAS,CAAEJ,WAAW,IAC3BlH,EAAK4F,WACFyY,UAAUD,EAAOlc,SACjBhC,KAAK,WACJ5C,EAAA,EAAQ4K,QAAQ,kBAEjBhI,KAAK,WACJF,EAAKse,iBAEN3d,MAAM8F,EAAQc,kBAbfjK,EAAA,EAAQihB,QAAQ,iDAepBpW,SApDY,+DA2Dd,IAAMnI,EAAOpC,KACPwgB,EAAS1T,GAAiB1K,EAAKvD,MAAM0K,QAASvE,eACpD5C,EAAKsH,SAAS,CAAEJ,WAAW,IAC3BtJ,KAAKgI,WACF4Y,oBAAoBJ,EAAOlc,QAAUkc,GACrCle,KAAK,SAASE,GACbJ,EAAKoH,gBAENzG,MAAM8F,EAAQc,kDAGV,IAAAmE,EAAA9N,KACDoC,EAAOpC,KAEb,GAAIoC,EAAKvD,MAAMyK,UACb,OAAOlC,EAAAC,EAAAC,cAAC4D,EAAD,MAGJ9I,EAAKge,oBAERhe,EAAKge,mBAAoB,EACzBnF,WAAW,WACT7Y,EAAKsH,SAAS,CAAE6W,yBAA0B,KACzC,KAGL,IAAM5L,EAAMvS,EAAKvD,MAAM0K,QAASvE,cAEhC,OACEoC,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GAAIC,OAAQ,GACrBpE,EAAAC,EAAAC,cAAAmE,EAAA,GACEuJ,MACE5N,EAAAC,EAAAC,cAACgH,EAAD,CAAepH,cAAe,kBAAM9E,EAAKse,iBACvCtZ,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,SACb/C,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,YAIjBiL,MACE/C,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,SADb,eAEqByV,EAAIrQ,UAI3B8C,EAAAC,EAAAC,cAAA2Y,GAAA,GACEY,iBAAkBX,GAClBtV,SAAU,SAAAiC,GACRzK,EAAKsH,SAAS,CAAE4W,aAAczT,MAGhCzF,EAAAC,EAAAC,cAAC0Y,GAAD,CACEc,IAAK1Z,EAAAC,EAAAC,cAAA,QAAM6G,UAAU,qBAAhB,iBACLtB,IAAKqT,IAEL9Y,EAAAC,EAAAC,cAACyZ,GAAD,CACEpL,WAAY,SAAA7K,GAAK,OAAIgD,EAAKpE,SAAS,CAAEJ,UAAWwB,KAChDtB,YAAa,kBAAMsE,EAAKtE,eACxBD,QAASvJ,KAAKnB,MAAM0K,QACpBvB,WAAYhI,KAAKgI,WACjB2O,cAAe,SAACnH,GAAD,OACb1B,EAAKpE,SAAS,CAAEH,QAASiG,QAI/BpI,EAAAC,EAAAC,cAAC0Y,GAAD,CACEc,IAAK1Z,EAAAC,EAAAC,cAAA,QAAM6G,UAAU,qBAAhB,eACLtB,IArLI,eAuLJzF,EAAAC,EAAAC,cAAC0Z,GAAD,CACErL,WAAY,SAAA7K,GAAK,OAAIgD,EAAKpE,SAAS,CAAEJ,UAAWwB,KAChDtB,YAAa,kBAAMsE,EAAKtE,eACxBD,QAASvJ,KAAKnB,MAAM0K,QACpBvB,WAAYhI,KAAKgI,WACjB2O,cAAe,SAACnH,GAAD,OACb1B,EAAKpE,SAAS,CAAEH,QAASiG,QAI/BpI,EAAAC,EAAAC,cAAC0Y,GAAD,CACEc,IAAK1Z,EAAAC,EAAAC,cAAA,QAAM6G,UAAU,qBAAhB,cACLtB,IAlMG,cAoMHzF,EAAAC,EAAAC,cAAC2Z,GAAD,CACEtL,WAAY,SAAA7K,GAAK,OAAIgD,EAAKpE,SAAS,CAAEJ,UAAWwB,KAChDtB,YAAa,kBAAMsE,EAAKtE,eACxBD,QAASvJ,KAAKnB,MAAM0K,QACpBvB,WAAYhI,KAAKgI,WACjB6X,sBAAuB,kBAAMzd,EAAKyd,yBAClClJ,cAAe,SAACnH,GAAD,OACb1B,EAAKpE,SAAS,CAAEH,QAASiG,SAKjCpI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MAEtBrI,EAAAC,EAAAC,cAAA4Z,GAAA,GACEC,aAAc,GACd1W,OAAQ,WACN,IAAM2W,EAAWhf,EAAK6E,MAAMoa,cAC5B,OAAOD,GAAYA,EAASE,QAAUF,EAASE,QAAUzX,SAG3DzC,EAAAC,EAAAC,cAAA,OACE6G,UA1NG,eA2ND/L,EAAKvD,MAAMyhB,aAA8B,iBAAmB,GAE9DlY,MAAO,CACLwK,aAAc,EACd2O,WAAY,qBACZpP,WAAY,GACZP,cAAe,KAGjBxK,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,SAAS4Q,OAAQ,IACxCxV,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GACTnE,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEI,UAAW,WACvBpB,EAAAC,EAAAC,cAAA4E,EAAA,GACE9D,MAAO,CAAEoZ,SAAU,KACnBtiB,KAAK,SACL0J,KAAK,QACLrB,QAAS,kBAAMnF,EAAKqf,uBAJtB,gBAUJra,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GACTnE,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEI,UAAW,WACvBpB,EAAAC,EAAAC,cAAA4E,EAAA,GACE9D,MAAO,CAAEoZ,SAAU,KACnBtiB,KAAK,UACL0J,KAAK,QACLrB,QAAS,kBAAMnF,EAAKyd,0BAJtB,qEAoBlB7f,KAAKwJ,oDAIL,IAAMpH,EAAOpC,KACboC,EAAKsH,SAAS,CAAEJ,WAAW,IAC3BtJ,KAAKgI,WACFwN,aACAlT,KAAK,SAASE,GACb,IAAK,IAAIgL,EAAQ,EAAGA,EAAQhL,EAAK6S,eAAetW,OAAQyO,IAAS,CAC/D,IAAMC,EAAUjL,EAAK6S,eAAe7H,GACpC,GAAIC,EAAQnJ,UAAYlC,EAAK6E,MAAMkR,MAAM/U,OAAOkB,QAS9C,YARAlC,EAAKsH,SAAS,CACZJ,WAAW,EACXC,QAAS,CACPvE,cAAeyI,EACftJ,WAAY3B,EAAK2B,WACjBoR,mBAAoB/S,EAAK+S,sBAQjCnT,EAAKse,iBAEN3d,MAAM8F,EAAQc,wBA9QmBhC,sBC5ClC+Z,oLAEF,OACEta,EAAAC,EAAAC,cAAA,OACEc,MAAO,CACLqH,OAAQ,IACRiM,SAAU,SACV9I,aAAc,EACdC,OAAQ,oBACRC,gBAAiB,YAGnB1L,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEI,UAAW,SAAUmZ,OAAQ,KACzCva,EAAAC,EAAAC,cAAAsa,GAAA,GACExZ,MAAO,CAAE0K,gBAAiB9S,KAAKiH,MAAM4a,OACrCjZ,KAAM,GACNT,KAAMnI,KAAKiH,MAAMkB,QAGrBf,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEI,UAAW,WACvBpB,EAAAC,EAAAC,cAAA,UACGtH,KAAKiH,MAAM6a,UACZ1a,EAAAC,EAAAC,cAAA,WACCtH,KAAKiH,MAAM8a,aAEd3a,EAAAC,EAAAC,cAAA,SACGtH,KAAKiH,MAAM+a,MACZ5a,EAAAC,EAAAC,cAAA,WACCtH,KAAKiH,MAAMgb,gBA5BYva,aAoCfwa,eAMnB,SAAAA,EAAYjb,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAkiB,IACtB/a,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAA+iB,GAAApa,KAAA9H,KAAMiH,KACDpI,MAAQ,CAAE0K,aAASvK,GAFFmI,2EAKtB,IAAM/E,EAAOpC,KACbA,KAAKgI,WACFma,sBACA7f,KAAK,SAASE,GACbJ,EAAKsH,SAAS,CAAEH,QAAS/G,MAE1BO,MAAM8F,EAAQc,gEAIb3J,KAAKoiB,mBACP7H,cAAcva,KAAKoiB,+DAKrB,IAAMhgB,EAAOpC,KACbA,KAAKqiB,YACLriB,KAAKoiB,kBAAoB7G,YAAY,WACnCnZ,EAAKigB,aACJ,sCAIH,OAAKriB,KAAKnB,MAAM0K,QAKdnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GAAIC,OAAQ,GACrBpE,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAM,uBACV/C,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO0d,OAAQ,IACvBxV,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GACTnE,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,gDACb/C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgb,GAAD,CACEna,KAAK,SACL0Z,MAAM,UACNC,UAAU,iBACVC,YAAW,GAAA/Y,OAAKhJ,KAAKnB,MAAM0K,QAAQgZ,OACnCP,MAAK,GACLC,MAAK,QAKb7a,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GACTnE,EAAAC,EAAAC,cAACgb,GAAD,CACEna,KAAK,UACL0Z,MAAM,UACNC,UAAU,qBACVC,YAAW,GAAA/Y,OAAKhJ,KAAKnB,MAAM0K,QAAQiZ,mBACnCR,MAAK,GAAAhZ,OAAKhJ,KAAKnB,MAAM0K,QAAQkZ,QAAxB,YACLR,MAAK,GAAAjZ,OAAKhJ,KAAKnB,MAAM0K,QAAQmZ,SAAxB,gBAGTtb,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GACTnE,EAAAC,EAAAC,cAACgb,GAAD,CACEna,KAAK,OACL0Z,MAAM,UACNC,UAAU,kBACVC,YAAW,GAAA/Y,OAAKhJ,KAAKnB,MAAM0K,QAAQoZ,QACjC3iB,KAAKnB,MAAM0K,QAAQqZ,SACrBZ,MAAK,GAAAhZ,OAAKhJ,KAAKnB,MAAM0K,QAAQoZ,QAAxB,YACLV,MAAK,GAAAjZ,OAAKhJ,KAAKnB,MAAM0K,QAAQqZ,QAAxB,eAGTxb,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GACTnE,EAAAC,EAAAC,cAACgb,GAAD,CACEna,KAAK,eACL0Z,MAAM,UACNC,UAAU,mBACVC,YAAW,GAAA/Y,OAAKhJ,KAAKnB,MAAM0K,QAAQsZ,SACnCb,MAAK,KACLC,MAAK,aAnDZ7a,EAAAC,EAAAC,cAAC4D,EAAD,aApCkCvD,GCxC1Bmb,oLAEjB,OACE1b,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KACEyC,KAAK,sCACLU,OAAO,SACPC,IAAI,uBAHN,WAMK,IAPP,8WAeAtD,EAAAC,EAAAC,cAAA,qLAKAF,EAAAC,EAAAC,cAAA,uJAEwE,IACtEF,EAAAC,EAAAC,cAAA,wBAHF,+GAKEF,EAAAC,EAAAC,cAAA,KACEyC,KAAK,6CACLU,OAAO,SACPC,IAAI,uBAEH,IALH,YAOK,IAZP,KAeAtD,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,6DACAF,EAAAC,EAAAC,cAAA,KACEyC,KAAK,sCACLU,OAAO,SACPC,IAAI,uBAHN,eAFF,aAvCwChD,aCE3Bqb,uLAKjBC,EACAtR,EACA5G,GAEA,IAAMjF,EAAciH,GAAiB9M,KAAKiH,MAAMpB,aAC1Cod,EAAkBpd,EAAYrD,KAC/BygB,EAAgBD,KACnBC,EAAgBD,GAAe,IAEjCC,EAAgBD,GAAatR,GAAc5G,EAC3C9K,KAAKiH,MAAMic,YAAYrd,oCAIvB,IAAMzD,EAAOpC,KACP6F,EAAc7F,KAAKiH,MAAMpB,YAC/B,OACEuB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mCAEAF,EAAAC,EAAAC,cAAA,sIAGEF,EAAAC,EAAAC,cAAA,+DAEFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0BAEAF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GAAIC,OAAQ,GACrBpE,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO0d,OAAQ,GAAIlI,MAAM,UACjCtN,EAAAC,EAAAC,cAAAgE,EAAA,GAAK6C,UAAU,gBAAgB5C,KAAM,IAArC,kBAEEnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,OACLyL,YAAY,8BACZG,MAAOjF,EAAYrD,KAAK2gB,KAAKC,GAC7BxY,SAAU,SAAA9J,GAAC,OAAIsB,EAAKuP,YAAY,OAAQ,KAAM7Q,EAAE2J,OAAOK,WAI3D1D,EAAAC,EAAAC,cAAAgE,EAAA,GAAK6C,UAAU,gBAAgB5C,KAAM,IAArC,aAEEnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,OACLyL,YAAY,4BACZG,MAAOjF,EAAYrD,KAAK2gB,KAAK7P,SAC7B1I,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YAAY,OAAQ,WAAY7Q,EAAE2J,OAAOK,WAKpD1D,EAAAC,EAAAC,cAAAgE,EAAA,GAAK6C,UAAU,gBAAgB5C,KAAM,IAArC,cAEEnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,OACLyL,YAAY,iBACZG,MAAOjF,EAAYrD,KAAK2gB,KAAKE,OAC7BzY,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YAAY,OAAQ,SAAU7Q,EAAE2J,OAAOK,WAKlD1D,EAAAC,EAAAC,cAAAgE,EAAA,GAAK6C,UAAU,gBAAgB5C,KAAM,GAArC,YAEEnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,SACLyL,YAAY,MACZG,MAAOjF,EAAYrD,KAAK2gB,KAAKG,KAC7B1Y,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YAAY,OAAQ,OAAQ7Q,EAAE2J,OAAOK,WAKhD1D,EAAAC,EAAAC,cAAAgE,EAAA,GAAK6C,UAAU,gBAAgB5C,KAAM,GAArC,WAEEnE,EAAAC,EAAAC,cAAA8M,GAAA,GACEC,UAAWxO,EAAYrD,KAAK2gB,KAAKI,YACjC3Y,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YAAY,OAAQ,cAAe7Q,EAAE2J,OAAO4J,WAHrD,kBAUFjN,EAAAC,EAAAC,cAAAgE,EAAA,GAAK6C,UAAU,gBAAgB5C,KAAM,IAArC,gBAEEnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,OACLyL,YAAY,8BACZG,MAAOjF,EAAYrD,KAAK2gB,KAAKK,SAC7B5Y,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YAAY,OAAQ,WAAY7Q,EAAE2J,OAAOK,WAKpD1D,EAAAC,EAAAC,cAAAgE,EAAA,GAAK6C,UAAU,gBAAgB5C,KAAM,IAArC,gBAEEnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,OACLyL,YAAY,gBACZG,MAAOjF,EAAYrD,KAAK2gB,KAAKnf,SAC7B4G,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YAAY,OAAQ,WAAY7Q,EAAE2J,OAAOK,cAO1D1D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GAAIC,OAAQ,GACrBpE,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO0d,OAAQ,GAAIlI,MAAM,UACjCtN,EAAAC,EAAAC,cAAAgE,EAAA,GAAK6C,UAAU,gBAAgB5C,KAAM,IAArC,gBAEEnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,OACLyL,YAAY,wCACZG,MAAOjF,EAAYrD,KAAKihB,MAAMC,KAC9B9Y,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YAAY,QAAS,OAAQ7Q,EAAE2J,OAAOK,WAIjD1D,EAAAC,EAAAC,cAAAgE,EAAA,GAAK6C,UAAU,gBAAgB5C,KAAM,IAArC,gBAEEnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,OACLyL,YAAY,gBACZG,MAAOjF,EAAYrD,KAAKihB,MAAME,QAC9B/Y,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YAAY,QAAS,UAAW7Q,EAAE2J,OAAOK,cAO1D1D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GAAIC,OAAQ,GACrBpE,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO0d,OAAQ,GAAIlI,MAAM,UACjCtN,EAAAC,EAAAC,cAAAgE,EAAA,GAAK6C,UAAU,gBAAgB5C,KAAM,IAArC,YAEEnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,OACLyL,YAAY,qBACZG,MAAOjF,EAAYrD,KAAKohB,SAASC,SACjCjZ,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YAAY,WAAY,WAAY7Q,EAAE2J,OAAOK,WAIxD1D,EAAAC,EAAAC,cAAAgE,EAAA,GAAK6C,UAAU,gBAAgB5C,KAAM,IAArC,UAEEnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,OACLyL,YAAY,mBACZG,MAAOjF,EAAYrD,KAAKohB,SAASE,OACjClZ,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YAAY,WAAY,SAAU7Q,EAAE2J,OAAOK,cAO5D1D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GAAIC,OAAQ,GACrBpE,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO0d,OAAQ,GAAIlI,MAAM,UACjCtN,EAAAC,EAAAC,cAAAgE,EAAA,GAAK6C,UAAU,gBAAgB5C,KAAM,IAArC,wBAEEnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,OACLyL,YAAY,wBACZG,MAAOjF,EAAYrD,KAAKuhB,WAAWC,SACnCpZ,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YAAY,aAAc,WAAY7Q,EAAE2J,OAAOK,WAI1D1D,EAAAC,EAAAC,cAAAgE,EAAA,GAAK6C,UAAU,gBAAgB5C,KAAM,IAArC,oCAEEnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,OACLyL,YAAY,8BACZG,MAAOjF,EAAYrD,KAAKuhB,WAAWE,cACnCrZ,SAAU,SAAA9J,GAAC,OACTsB,EAAKuP,YACH,aACA,gBACA7Q,EAAE2J,OAAOK,sBA/MkBpD,aCK5Bwc,eACnB,SAAAA,EAAYjd,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAkkB,IACtB/c,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAA+kB,GAAApc,KAAA9H,KAAMiH,KACDpI,MAAQ,CACX0K,aAASvK,GAHWmI,mFAQtBnH,KAAKmkB,oDAIL,IAAM/hB,EAAOpC,KACboC,EAAKsH,SAAS,CAAEH,aAASvK,IACzBgB,KAAKgI,WACFoc,iBACA9hB,KAAK,SAASE,GACbJ,EAAKsH,SAAS,CAAEH,QAAS/G,MAE1BO,MAAM8F,EAAQc,8DAGE0a,GACnB,IAAMxe,EAAciH,GAAiB9M,KAAKnB,MAAM0K,SAChD1D,EAAYxB,YAAcggB,EAC1BrkB,KAAKskB,uBAAuBze,kDAGPA,GACrB,IAAMzD,EAAOpC,KAEb,OADAoC,EAAKsH,SAAS,CAAEH,aAASvK,IAClBgB,KAAKgI,WACTuc,kBAAkB1e,GAClBvD,KAAK,WACJ5C,EAAA,EAAQ4K,QACNzE,EAAYxB,UACR,kCACA,0BAGPtB,MAAM8F,EAAQc,iBACdrH,KAAK,WACJF,EAAK+hB,iDAKT,IAAM/hB,EAAOpC,KAEb,IAAKA,KAAKnB,MAAM0K,QACd,OAAOnC,EAAAC,EAAAC,cAAC4D,EAAD,MAGT,IAAMrF,EAAc7F,KAAKnB,MAAM0K,QAE/B,OACEnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GAAIC,OAAQ,GACrBpE,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAM,2BACV/C,EAAAC,EAAAC,cAACkd,GAAD,MACApd,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,OAAK6G,UAAWtI,EAAYxB,UAAY,iBAAmB,IACzD+C,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACE3E,QAAS,kBAAMnF,EAAKqiB,sBAAqB,IACzCvlB,KAAK,WAELkI,EAAAC,EAAAC,cAAA,wCAEEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,iBAMnBkI,EAAAC,EAAAC,cAAA,OAAK6G,UAAYtI,EAAYxB,UAA+B,GAAnB,kBACvC+C,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACE9D,MAAO,CAAEoO,YAAa,IACtBjP,QAAS,kBAAMnF,EAAKqiB,sBAAqB,IACzCvlB,KAAK,UAELkI,EAAAC,EAAAC,cAAA,oCAEEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,eAIfkI,EAAAC,EAAAC,cAAA,KACEpI,KAAK,SACL6K,KAAM,KAAOlE,EAAY6e,WACzBja,OAAO,SACPC,IAAI,uBAEJtD,EAAAC,EAAAC,cAAA4E,EAAA,GAEEhN,KAAK,WAELkI,EAAAC,EAAAC,cAAA,gCAEEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,mBAKnBkI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAACqd,GAAD,CACEzB,YAAa,SAAArd,GACXzD,EAAKsH,SAAS,CAAEH,QAAS1D,KAE3BA,YAAaA,IAGfuB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACEhN,KAAK,UACLqI,QAAS,kBACPnF,EAAKkiB,uBACHxX,GAAiB1K,EAAKvD,MAAM0K,YAJlC,+BAzHuB5B,GCLpBid,oLAEjB,OACExd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACud,GAAD,MACAzd,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAACwd,GAAD,cANgCpd,aCEnBqd,eAInB,SAAAA,EAAY9d,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAA+kB,IACtB5d,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAA4lB,GAAAjd,KAAA9H,KAAMiH,KACDpI,MAAQ,CACXyK,WAAW,EACX0b,IAAK,GACLC,KAAM,GACNC,KAAM,IANc/d,yFAWtB,IAAM/E,EAAOpC,KACRA,KAAKnB,MAAMomB,KAKZjlB,KAAKnB,MAAMomB,OAASjlB,KAAKnB,MAAMqmB,MAKnCllB,KAAK0J,SAAS,CAAEJ,WAAW,IAE3BtJ,KAAKgI,WACFmd,WAAWnlB,KAAKnB,MAAMmmB,IAAKhlB,KAAKnB,MAAMomB,MACtCliB,MAAM8F,EAAQc,iBACdrH,KAAK,SAASE,GACbJ,EAAKsH,SAAS,CAAEJ,WAAW,OAV7B5J,EAAA,EAAQuB,MAAM,wCALdvB,EAAA,EAAQuB,MAAM,iEAmBT,IAAA6M,EAAA9N,KACP,OAAIA,KAAKnB,MAAMyK,UACNlC,EAAAC,EAAAC,cAAC4D,EAAD,MAIP9D,EAAAC,EAAAC,cAAA,0BAEEF,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,WACL0L,SAAU,SAAA9J,GAAC,OAAIgN,EAAKpE,SAAS,CAAEsb,IAAKlkB,EAAE2J,OAAOK,WAE/C1D,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MARxB,eAUErI,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,WACL0L,SAAU,SAAA9J,GAAC,OAAIgN,EAAKpE,SAAS,CAAEub,KAAMnkB,EAAE2J,OAAOK,WAEhD1D,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MAdxB,uBAgBErI,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,WACL0L,SAAU,SAAA9J,GAAC,OAAIgN,EAAKpE,SAAS,CAAEwb,KAAMpkB,EAAE2J,OAAOK,WAEhD1D,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GAAQ3E,QAAS,kBAAMuG,EAAKsX,2BAA2BlmB,KAAK,WAA5D,4BAhE8ByI,GCHnB0d,eAOnB,SAAAA,EAAYpe,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAqlB,IACtBle,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAkmB,GAAAvd,KAAA9H,KAAMiH,KACDqe,qBAAsB,EAC3Bne,EAAKtI,MAAQ,CACX0mB,cAAe,GAJKpe,4EAStB,IAAM/E,EAAOpC,KACboC,EAAKsH,SAAS,CAAE6b,cAAe,KAC/BhK,YAAY,WACNnZ,EAAKvD,MAAM0mB,cAAgB,EAC7B1b,OAAOC,SAAS0b,QAAO,GAGzBpjB,EAAKsH,SAAS,CAAE6b,cAAenjB,EAAKvD,MAAM0mB,cAAgB,KACzD,sCAIH,IAAMnjB,EAAOpC,KAMb,OALIoC,EAAK6E,MAAMwe,0BAA4BzlB,KAAKslB,sBAC9CtlB,KAAKslB,qBAAsB,EAC3BrK,WAAW,kBAAM7Y,EAAKsjB,cAAc,KAIpCte,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA2C,EAAA,GACE0b,UAAU,EACVC,OAAQxe,EAAAC,EAAAC,cAAA,YACR6C,MAAM,yBACN8D,QAAS7L,EAAKvD,MAAM0mB,cAAgB,GAEpCne,EAAAC,EAAAC,cAAA,WACGlF,EAAK6E,MAAMQ,SACZL,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,8BACCtH,KAAKnB,MAAM0mB,yBA9CsB7d,aCK3Bme,eAInB,SAAAA,EAAY5e,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAA6lB,IACtB1e,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAA0mB,GAAA/d,KAAA9H,KAAMiH,KACDpI,MAAQ,CACXinB,iBAAa9mB,EACbymB,yBAAyB,GAJLte,mFAStB,IAAM/E,EAAOpC,KACboC,EAAK4F,WACF+d,iBACAzjB,KAAK,SAASE,GACbJ,EAAKsH,SAAS,CAAEoc,YAAatjB,MAE9BO,MAAM8F,EAAQc,kEAIjB,IAAMvH,EAAOpC,KACP8lB,EAAc9lB,KAAKnB,MAAMinB,YAC/B1jB,EAAK4F,WACFge,cAAcF,EAAa9f,eAC3B1D,KAAK,SAASE,GACbJ,EAAKsH,SAAS,CAAE+b,yBAAyB,MAE1C1iB,MAAM8F,EAAQc,kDAGV,IAAAmE,EAAA9N,KAED8lB,EAAc9lB,KAAKnB,MAAMinB,YAE/B,OAAKA,EAKH1e,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8aASAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,4BADF,KAC2Bwe,EAAYG,gBAEvC7e,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,kCADF,KACiCwe,EAAY9f,eAE7CoB,EAAAC,EAAAC,cAAA,OAAK6G,UAAW2X,EAAYI,UAAY,GAAK,kBAC3C9e,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACEhN,KAAK,UACLqI,QAAS,kBAAMuG,EAAKqY,2BAEpB/e,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,oBACL,IANV,yBAYJkI,EAAAC,EAAAC,cAAA,OAAK6G,UAAY2X,EAAYI,UAAiB,iBAAL,IACvC9e,EAAAC,EAAAC,cAAA8G,EAAA,GAAO1O,QAAQ,sCAAsCR,KAAK,UAG5DkI,EAAAC,EAAAC,cAAC8e,GAAD,CACEX,wBA5COzlB,KA4CuBnB,MAAM4mB,yBAEpCre,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wGAIAF,EAAAC,EAAAC,cAAA,gIAKAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,cArDCF,EAAAC,EAAAC,cAAC4D,EAAD,aAtC4BvD,GCApB0e,eAOnB,SAAAA,EAAYpf,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAqmB,IACtBlf,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAknB,GAAAve,KAAA9H,KAAMiH,KACDpI,MAAQ,CACXynB,iBAAatnB,EACbymB,yBAAyB,GAJLte,mFAStB,IAAM/E,EAAOpC,KACbA,KAAKgI,WACFue,iBACAjkB,KAAK,SAASE,GACbJ,EAAKsH,SAAS,CAAE4c,YAAa9jB,MAE9BO,MAAM8F,EAAQc,2EAIjB,IAAM+M,EAAa5J,GAAiB9M,KAAKnB,MAAMynB,aAC/C5P,EAAWvQ,WAAWC,YAAcsQ,EAAWvQ,WAAWqgB,UAC1D9P,EAAWrQ,cAAcD,YAAcsQ,EAAWrQ,cAAcmgB,UAChExmB,KAAK0J,SAAS,CAAE4c,YAAa5P,yDAI7B,IAAMtU,EAAOpC,KACP0W,EAAa5J,GAAiB9M,KAAKnB,MAAMynB,aAC/CtmB,KAAKgI,WACFye,eACC/P,EAAWvQ,WAAWC,YACtBsQ,EAAWrQ,cAAcD,aAE1B9D,KAAK,WACJF,EAAKsH,SAAS,CAAE+b,yBAAyB,MAE1C1iB,MAAM8F,EAAQc,kDAIjB,IAAMvH,EAAOpC,KACPsmB,EAActmB,KAAKnB,MAAMynB,YAE/B,OAAKA,EAKHlf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8e,GAAD,CACEX,wBAAyBrjB,EAAKvD,MAAM4mB,yBAEpCre,EAAAC,EAAAC,cAAA,gFACqE,IACnEF,EAAAC,EAAAC,cAAA,mEACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aAEkB,IACtBF,EAAAC,EAAAC,cAAA,iLAKAF,EAAAC,EAAAC,cAAA,sGAE2BF,EAAAC,EAAAC,cAAA,kBAF3B,QAEkDF,EAAAC,EAAAC,cAAA,kBAAmB,IAFrE,6CAKAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,oDADF,2BAGAF,EAAAC,EAAAC,cAAA,OACE6G,UACEmY,EAAYngB,WAAWC,aACvBkgB,EAAYjgB,cAAcD,YACtB,GACA,kBAGNgB,EAAAC,EAAAC,cAAA6B,EAAA,EAAO0I,SAAP,CACE1D,UAAU,aACVxD,YAAY,GACZmH,KAAM,GACNhH,MAAOwb,EAAYngB,WAAWC,YAC9BwE,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiBwZ,GACpC5P,EAAWvQ,WAAWC,YAActF,EAAE2J,OAAOK,MAC7C1I,EAAKsH,SAAS,CAAE4c,YAAa5P,OAGjCtP,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,OAExBrI,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,uDADF,yCAIAF,EAAAC,EAAAC,cAAA,OACE6G,UACEmY,EAAYngB,WAAWC,aACvBkgB,EAAYjgB,cAAcD,YACtB,GACA,kBAGNgB,EAAAC,EAAAC,cAAA6B,EAAA,EAAO0I,SAAP,CACE1D,UAAU,aACVxD,YAAY,GACZmH,KAAM,GACNhH,MAAOwb,EAAYjgB,cAAcD,YACjCwE,SAAU,SAAA9J,GACR,IAAM4V,EAAa5J,GAAiBwZ,GACpC5P,EAAWrQ,cAAcD,YAActF,EAAE2J,OAAOK,MAChD1I,EAAKsH,SAAS,CAAE4c,YAAa5P,QAInCtP,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACEhN,KAAK,UACLqI,QAAS,kBAAMnF,EAAKskB,oCAFtB,0BAQFtf,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MAEtBrI,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACEhN,KAAK,UACLqI,QAAS,kBAAMnF,EAAKukB,+BAEpBvf,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,UACL,IANV,2BAxFCkI,EAAAC,EAAAC,cAAC4D,EAAD,aAnD4BvD,GCHpBif,qLA+BjB,MA1BgB,CACd,CACEzc,MAAO,WACP8E,UAAW,UACXC,OAAQ,SAAC2X,GAEP,OADAA,EAAUA,GAAW,GAEnBzf,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEG,MAAO,IAAKF,SAAU,QACjCwe,EAAQC,OAAO,EAAGC,KAAKC,IAAIH,EAAQ9nB,OAAQ,KAD9C,SAMN,CACEoL,MAAO,kBACP8E,UAAW,YACXC,OAAQ,SAAC+X,GAEP,OADAA,EAAYA,GAAa,GAEvB7f,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAE8e,WAAY,WAAY7e,SAAU,QAC7C4e,wCAWX,IADA,IAAMzkB,EAA8D,GAC3DgL,EAAQ,EAAGA,EAAQxN,KAAKiH,MAAMkgB,aAAapoB,OAAQyO,IAAS,CACnE,IAAMC,EAAUzN,KAAKiH,MAAMkgB,aAAa3Z,GACxChL,EAAKgK,KAAK,CACRK,IAAKY,EAAQC,GACbmZ,QAASpZ,EAAQC,GACjBuZ,UAAWxZ,EAAQ2Z,KAAK7O,KAAK,QAGjC,OAAO/V,4CAKP,IAAMJ,EAAOpC,KAUb,MATqB,CACnB4K,SAAU,SAACyc,EAAsBC,GAC/BllB,EAAK6E,MAAMic,YAAYmE,IAEzBE,iBAAkB,SAACC,GAAD,MAAkB,CAClC7b,UAAU,EACVsQ,KAAMuL,EAAOX,4CAOjB,OACEzf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAAuI,GAAA,GACEE,YAAY,EACZ0X,aAAcznB,KAAK0nB,kBACnB1X,QAAShQ,KAAKiQ,UACdC,WAAYlQ,KAAK2nB,oBArEoBjgB,aCgB1BkgB,eAQnB,SAAAA,EAAY3gB,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAA4nB,IACtBzgB,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAyoB,GAAA9f,KAAA9H,KAAMiH,KACDpI,MAAQ,CACXyH,gBAAiB,EACjBuhB,wBAAyB,GACzBV,aAAc,IALMhgB,uFAUtB,IAAM/E,EAAOpC,KACbA,KAAK0J,SAAS,CAAEyd,kBAAcnoB,IAC9BgB,KAAKgI,WACF8f,aAAa9nB,KAAKnB,MAAMgpB,yBACxBvlB,KAAK,SAASE,GACb9C,EAAA,EAAQ4K,QAAQ,8BAChBlI,EAAK2lB,0BAENhlB,MAAM8F,EAAQc,iEAIjB,IAAMvH,EAAOpC,KACbA,KAAK0J,SAAS,CAAEyd,kBAAcnoB,IAC9BgB,KAAKgI,WACFggB,gBAAgBhoB,KAAKnB,MAAMyH,iBAC3BhE,KAAK,SAASE,GACbJ,EAAKsH,SAAS,CAAEyd,aAAc3kB,EAAK2kB,iBAEpCpkB,MAAM8F,EAAQc,kDAGV,IAAAmE,EAAA9N,KACDoC,EAAOpC,KACPmnB,EAAennB,KAAKnB,MAAMsoB,aAEhC,IAAKA,EACH,OAAO/f,EAAAC,EAAAC,cAAC4D,EAAD,MAGT,IAAM+c,KACJ7lB,EAAKvD,MAAMgpB,0BACXzlB,EAAKvD,MAAMgpB,wBAAwB9oB,QAGrC,OACEqI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4XAQAF,EAAAC,EAAAC,cAAA,gNAKAF,EAAAC,EAAAC,cAAA,ugBAWAF,EAAAC,EAAAC,cAAA,YAGFF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA2E,EAAA,GAAS9B,MAAM,iFACb/C,EAAAC,EAAAC,cAAA6B,EAAA,GACEuC,YAAY,mBACZxM,KAAK,SACL4L,MAAO9K,KAAKnB,MAAMyH,gBAAkB,GACpCsE,SAAU,SAAA9J,GACRgN,EAAKpE,SAAS,CAAEpD,gBAAiB0S,OAAOlY,EAAE2J,OAAOK,cAKzD1D,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACEhN,KAAK,UACLqI,QAAS,kBAAMuG,EAAKia,0BAEpB3gB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,UACL,IANV,oBAaNkI,EAAAC,EAAAC,cAAA,OAAK6G,UAAWgZ,EAAapoB,OAAS,EAAI,GAAK,kBAC7CqI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA2E,EAAA,GACE9B,MACE8d,EACI,GACA,+EAGN7gB,EAAAC,EAAAC,cAAA4E,EAAA,GACEP,UAAWsc,EACX/oB,KAAK,UACLqI,QAAS,WACPnF,EAAK8lB,0BAGP9gB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,WAAY,KACjB,IATV,+BAcJkI,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBADF,qGAIAF,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAC6gB,GAAD,CACEhB,aAAcA,EACdjE,YAAa,SAAA2E,GAAuB,OAClC/Z,EAAKpE,SAAS,CAAEme,wCAhJWlgB,GCdpBygB,oLAEjB,OACEhhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,gBACvB5E,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GACTnE,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEuZ,OAAQ,KACpBva,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAM,qBACV/C,EAAAC,EAAAC,cAAC+gB,GAAD,SAINjhB,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEuZ,OAAQ,KACpBva,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAM,wBACV/C,EAAAC,EAAAC,cAACghB,GAAD,SAINlhB,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,GACTnE,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEuZ,OAAQ,KACpBva,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAM,mBACV/C,EAAAC,EAAAC,cAACihB,GAAD,SAINnhB,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEuZ,OAAQ,KACpBva,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAM,gBACV/C,EAAAC,EAAAC,cAACkhB,GAAD,kBA7BsB9gB,aCFjB+gB,gHACEnkB,GAEnB,OADatE,KACD0oB,qBAAqBpmB,KAAK,SAASE,GAC7C,IAAK8B,EAAS,MAAM,IAAI7E,MAAM,qBAE9B,IAAMkpB,EAAcnmB,EAAKuS,OAAO,SAAAjK,GAAK,OAAIA,EAAMmR,OAAS3X,IAAS,GAC9DskB,aAEH,OAAO1lB,IACJC,IAAIwlB,GACJrmB,KAAK,SAASumB,GAEb,OAAOA,EAAIrmB,sDAOjB,OAAOU,IACJC,IADI,kGAIJb,KAAK,SAASumB,GAEb,OAAQA,EAAIrmB,KAAkCqL,IAAI,SAAAJ,GAChD,MAAO,CACLwO,KAAMxO,EAAQwO,KAAK6K,OAAO,EAAGrZ,EAAQwO,KAAKld,OA9BrC,QA8BuDA,QAC5D6pB,aAAcnb,EAAQmb,2BCrBbE,eAOnB,SAAAA,EAAY7hB,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAA8oB,IACtB3hB,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAA2pB,GAAAhhB,KAAA9H,KAAMiH,KACDpI,MAAQ,CACXkqB,qBAAiB/pB,EACjBgqB,iBAAahqB,GAJOmI,mFAStB,IAAM/E,EAAOpC,MACb,IAAIyoB,IACDC,qBACApmB,KAAK,SAASE,GACbJ,EAAKsH,SAAS,CACZqf,gBAAiBvmB,MAGpBO,MAAM8F,EAAQc,yDAIjB,OAAO3J,KAAKnB,MAAMkqB,gBAAiBlb,IAAI,SAAA8G,GACrC,OACEvN,EAAAC,EAAAC,cAAA4F,GAAA,EAAQD,OAAR,CAAeJ,IAAK8H,EAAIsH,KAAMnR,MAAO6J,EAAIsH,MACtCtH,EAAIsH,yCAOX,IAAM7Z,EAAOpC,KAEb,OAAKA,KAAKnB,MAAMkqB,gBAGd3hB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,UACvB5E,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAM,kBACV/C,EAAAC,EAAAC,cAAA,gLAG2C,IACzCF,EAAAC,EAAAC,cAAA,KACEyC,KAAK,4DACLU,OAAO,SACPC,IAAI,uBAHN,8BAQFtD,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,MAAM0I,MAAM,UACnCtN,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA4F,GAAA,GACE9E,MAAO,CAAEoZ,SAAU,KACnB5W,SAAU,SAAAE,GACR1I,EAAKsH,SAAS,CAAEsf,YAAale,EAAMgN,eAGpC1V,EAAK6mB,kBAGV7hB,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,MAAM0I,MAAM,UACnCtN,EAAAC,EAAAC,cAAA4E,EAAA,GACE3E,QAAS,kBACPnF,EAAK6E,MAAMsF,QAAQC,KAAnB,kBAAAxD,OACoB5G,EAAKvD,MAAMmqB,eAGjCrd,UAAWvJ,EAAKvD,MAAMmqB,YACtB5gB,MAAO,CAAEoZ,SAAU,KACnBtiB,KAAK,WARP,aAjC4BkI,EAAAC,EAAAC,cAAC4D,EAAD,aAxCKxD,sBCP5BwhB,eAUnB,SAAAA,EAAYjiB,GAAY,IAAAE,EAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAkpB,GACtB/hB,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAA+pB,GAAAphB,KAAA9H,KAAMiH,IAEN,IAAIkiB,EAA4C,GAH1B,OAItBhiB,EAAKF,MAAMmiB,qBAAqBlT,QAAQ,SAAAmT,GACtC,IAAMxd,EAAewd,EAAExd,aACnBA,IACFsd,EAAiBE,EAAE3b,IAAM7B,KAI7B1E,EAAKtI,MAAQ,CACXsqB,mBACAG,cAAe,IAbKniB,+EAkBtB,IAAM/E,EAAOpC,KACPspB,EAAgBxc,GAAiB1K,EAAKvD,MAAMyqB,eAC9CC,GAAgB,EACpBnnB,EAAK6E,MAAMmiB,qBAAqBlT,QAAQ,SAAAmT,GACtCC,EAAcD,EAAE3b,KAAM,EACjBtL,EAAKonB,kBAAkBH,KAC1BE,GAAgB,KAIfA,EAGHnnB,EAAK6E,MAAMwiB,cAAcrnB,EAAKvD,MAAMsqB,kBAFpCzpB,EAAA,EAAQuB,MAAM,oCAIhBmB,EAAKsH,SAAS,CAAE4f,4DAGAI,GAChB,IACMC,EADO3pB,KACQnB,MAAMsqB,iBAAiBO,EAAShc,KAAO,GACxDkc,GAAsB,EAC1B,GAAIF,EAASG,WAAY,CAEvB,IAAIC,EAAQ,eAAeC,KAAKL,EAASG,YAEtCC,GACA,IAAIE,OAAOF,EAAM,GAAIA,EAAM,IAAIG,KAAKN,KAErCC,GAAsB,GAI1B,OAAOA,6CAGU,IAAA9b,EAAA9N,KACXoC,EAAOpC,KACb,OAAOA,KAAKiH,MAAMmiB,qBAAqBvb,IAAI,SAAA6b,GACzC,IAAMC,EAAUvnB,EAAKvD,MAAMsqB,iBAAiBO,EAAShc,IAErD,OACEtG,EAAAC,EAAAC,cAAA,OAAKuF,IAAK6c,EAAShc,GAAItF,MAAO,CAAEM,aAAc,KAC5CtB,EAAAC,EAAAC,cAAA,UAAKoiB,EAASQ,OACd9iB,EAAAC,EAAAC,cAAA,OACEc,MAAO,CAAEwJ,cAAe,EAAGvJ,SAAU,OACrC8F,UAAaub,EAAS/mB,YAAc,GAAK,kBAExC+mB,EAAS/mB,aAGZyE,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA6B,EAAA,GACEjK,KAAK,OACLyL,YAAa+e,EAAS7d,aACtBf,WAAmB9L,IAAZ2qB,EAAwBD,EAAS7d,aAAe8d,EACvD/e,SAAU,SAAA9J,GACR,IAAMqpB,EAAWrd,GACfgB,EAAKjP,MAAMsqB,kBAEbgB,EAAST,EAAShc,IAAM5M,EAAE2J,OAAOK,MACjCgD,EAAKpE,SAAS,CAAEyf,iBAAkBgB,KAEpCC,OAAQ,SAAAtpB,GACN,IAAMwoB,EAAgBxc,GACpB1K,EAAKvD,MAAMyqB,eAEbA,EAAcI,EAAShc,KAAM,EAC7BtL,EAAKsH,SAAS,CAAE4f,qBAGpBliB,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,KACtBrI,EAAAC,EAAAC,cAAA8G,EAAA,GACED,WACG/L,EAAKvD,MAAMyqB,cAAcI,EAAShc,KACnCtL,EAAKonB,kBAAkBE,GACnB,iBACA,GAENrb,UAAQ,EACR3O,QACE0H,EAAAC,EAAAC,cAAA,mDAEEF,EAAAC,EAAAC,cAAA,YAAOoiB,EAASG,aAGpB3qB,KAAK,gDAUjB,IAAMkD,EAAOpC,KACb,OACEoH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAMtH,KAAKqqB,oBACXjjB,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACEtD,KAAK,QACLR,MAAO,CAAEoZ,SAAU,KACnBtiB,KAAK,UACLqI,QAAS,kBAAMnF,EAAKqnB,kBAJtB,mBAlI4C/hB,uBCAjC4iB,oDACXtiB,WAAyB,IAAItE,oEAGnCY,EACAimB,GAEA,IAAMnoB,EAAOpC,KACb,OAAO4C,QAAQC,UAAUP,KAAK,WAC5B,OAAOF,EAAK4F,WAAWmN,eACrB7Q,IACEimB,EAAqBllB,WAAaklB,EAAqBllB,QAAQtG,6DAMrEuF,EACAimB,GAEA,IAAMnoB,EAAOpC,KACb,OAAO4C,QAAQC,UAAUP,KAAK,WAC5B,OAAOF,EAAK4F,WACTwN,aACAlT,KAAK,SAASE,GAEb,IADA,IAAMgoB,EAAUhoB,EAAK6S,eACZ7H,EAAQ,EAAGA,EAAQgd,EAAQzrB,OAAQyO,IAAS,CACnD,IAAMC,EAAU+c,EAAQhd,GACxB,GAAIC,EAAQnJ,UAAYA,EACtB,OAAOwI,GAAiBW,MAI7BnL,KAAK,SAASke,GACb,IAAKA,EACH,MAAM,IAAI/gB,MAAM,+CAGlB+gB,EAAOnb,QAAUmb,EAAOnb,SAAW,GAGnC,IADA,IAAMolB,EAAOF,EAAqBllB,SAAW,GACpC2V,EAAI,EAAGA,EAAIyP,EAAK1rB,OAAQic,IAAK,CACpC,IAAM0P,EAAWD,EAAKzP,GAAGjD,MAAM,KAC3B2S,EAAS,GAAG1gB,WAAW,KACzBwW,EAAOnb,QAAQmH,KAAK,CAClB2M,SAAUuR,EAAS,GACnBxR,cAAewR,EAAS,KAG1BlK,EAAOnb,QAAQmH,KAAK,CAClB4M,WAAYsR,EAAS,GACrBxR,cAAewR,EAAS,KAK9BlK,EAAOlb,MAAQkb,EAAOlb,OAAS,GAE/B,IADA,IAAMA,EAAQilB,EAAqBjlB,OAAS,GACnC0V,EAAI,EAAGA,EAAI1V,EAAMvG,OAAQic,IAAK,CACrC,IAAM0P,EAAWplB,EAAM0V,GAAGjD,MAAM,KAChCyI,EAAOlb,MAAMkH,KAAK,CAChBsM,SAAUE,OAAO0R,EAAS,IAC1BzR,cAAeD,OAAO0R,EAAS,MAInClK,EAAOtb,QAAUsb,EAAOtb,SAAW,GACnC,IAAMylB,EAAcJ,EAAqBI,aAAe,GAQxD,OAPAxrB,OAAOwZ,KAAKgS,GAAazU,QAAQ,SAAS0U,GACxCpK,EAAOtb,QAAQsH,KAAK,CAClBK,IAAK+d,EACL9f,MAAO6f,EAAYC,OAIhBxoB,EAAK4F,WAAW4Y,oBAAoBtc,EAASkc,uDAM1Dlc,EACAimB,GAEA,IAAMnoB,EAAOpC,KACb,OAAO4C,QAAQC,UAAUP,KAAK,WAC5B,IAAIqC,EAAwC,CAC1C2Z,cAAe,GAUjB,OAPIiM,EAAqBM,MACvBlmB,EAAkBsiB,UAAYsD,EAAqBM,MAEnDlmB,EAAkB4Z,gBAChBgM,EAAqBO,gBAGlB1oB,EAAK4F,WAAWgW,+BACrB1Z,EACAK,GACA,cCtFaomB,cAGnB,SAAAA,EACUC,GAGR7rB,OAAAY,EAAA,EAAAZ,CAAAa,KAAA+qB,GAAA/qB,KAAAgrB,2BAAAhrB,KANMirB,iBAAgD,IAAIX,kEAW1DY,EACAC,GAKA,IAHA,IAAM/oB,EAAOpC,KACTorB,EAActmB,KAAKC,UAAUmmB,GAExB1d,EAAQ,EAAGA,EAAQ0d,EAAS/oB,UAAUpD,OAAQyO,IAAS,CAC9D,IAAMC,EAAUyd,EAAS/oB,UAAUqL,GACnC4d,EAAcA,EACXrT,MAAMtK,EAAQC,IACd6K,KAAK4S,EAAO1d,EAAQC,KAAO,IAGhC,IACE1N,KAAKkrB,SAAWpmB,KAAKkI,MAAMoe,GAC3B,MAAOnqB,GAMP,YALAjB,KAAKgrB,yBAAyB,CAC5BK,MAAO,CAAC,wBACRpqB,MAAO,iBAAA+H,OAAiBoiB,GAAgB,WAAanqB,EACrDqqB,YAAa,IAWjB,IAAMxW,EAAO9U,KAAKurB,yBAClB,GAAKzW,EAOE,GAAoB,IAAhBA,EAAK/V,OACdqD,EAAK4oB,yBAAyB,CAC5BK,MAAO,CAAC,wBACRpqB,MAAO,iDACPqqB,YAAa,QAEV,CAEL,IADA,IAAMD,EAA2B,GACxB7d,EAAQ,EAAGA,EAAQsH,EAAK/V,OAAQyO,IAAS,CAChD,IAAMC,EAAUqH,EAAKtH,GACrB6d,EAAM7e,KAANgf,MAAAH,EAAKlsB,OAAAssB,GAAA,EAAAtsB,CACAiD,EAAKspB,6BAA6Bje,EAAQnJ,QAASmJ,EAAQke,WAKlE,IADA,IAAMC,EAAuB,CAAC,wBACrBpe,EAAQ,EAAGA,EAAQ6d,EAAMtsB,OAAQyO,IACxCoe,EAAWpf,KAAK6e,EAAM7d,GAAOqe,UAwB/B,IArBA,IAAIP,EAAc,EACZQ,EAA2B,WAC/B,OAAO,IAAIlpB,QAAc,SAASC,GAChCyoB,IACAlpB,EAAK4oB,yBACHle,GAAiB,CACfue,MAAOO,EACP3qB,MAAO,GACPqqB,cACAS,eACET,GAAeM,EAAW7sB,OACtBqD,EAAK8oB,SAAUc,aAAaC,SAC5BjtB,KAGV6D,OAIAqpB,EAAUJ,IAELte,EAAQ,EAAGA,EAAQ6d,EAAMtsB,OAAQyO,IAAS,CACjD,IAAMC,EAAU4d,EAAM7d,GACtB0e,EAAUA,EACP5pB,KAAKmL,EAAQ0e,aACb7pB,KAAKwpB,GAGVI,EAAQnpB,MAAM,SAAS9B,GACrBmB,EAAK4oB,yBACHle,GAAiB,CACfue,MAAOO,EACP3qB,MAAO,WAAaA,EACpBqqB,wBA3DNlpB,EAAK4oB,yBAAyB,CAC5BK,MAAO,CAAC,wBACRpqB,MACE,iFACFqqB,YAAa,qDAmEjB,IAAMxW,EAGA,GAEFsX,EAAmB,EACjBC,EAAcrsB,KAAKkrB,SAAUoB,cAAcC,SACjDptB,OAAOwZ,KAAK0T,GAAanW,QAAQ,SAASrJ,GACxCuf,MAIF,IADA,IAAII,EAAU,EACP1X,EAAK/V,OAASqtB,GAAkB,CACrC,GAAII,EAAUJ,EAEZ,OAEFI,IAEArtB,OAAOwZ,KAAK0T,GAAanW,QAAQ,SAAS5R,GACxC,IAAK,IAAIkJ,EAAQ,EAAGA,EAAQsH,EAAK/V,OAAQyO,IAAS,CAEhD,GADgBsH,EAAKtH,GACTlJ,UAAYA,EAEtB,OAQJ,IAJA,IAAIqnB,EAAUU,EAAY/nB,GAEpBmoB,EAAYd,EAAQe,YAAc,GAE/Blf,EAAQ,EAAGA,EAAQif,EAAU1tB,OAAQyO,IAAS,CAGrD,IAFA,IAAMC,EAAUgf,EAAUjf,GACtBmf,GAAyB,EACpBC,EAAI,EAAGA,EAAI9X,EAAK/V,OAAQ6tB,IAC3Bnf,IAAYqH,EAAK8X,GAAGtoB,UACtBqoB,GAAyB,GAI7B,IAAKA,EAAwB,OAG/B7X,EAAKtI,KAAK,CACRlI,UACAqnB,cAKN,OAAO7W,uDAIPxQ,EACAimB,GAEA,IAAMsC,EAA8B,GAC9BzqB,EAAOpC,KAgCb,OA9BA6sB,EAASrgB,KAAK,CACZqf,SAAQ,eAAA7iB,OAAiB1E,GACzB6nB,YAAa,WACX,OAAO/pB,EAAK6oB,iBAAiB6B,sBAC3BxoB,EACAimB,MAKNsC,EAASrgB,KAAK,CACZqf,SAAQ,eAAA7iB,OAAiB1E,EAAjB,8CACR6nB,YAAa,WACX,OAAO/pB,EAAK6oB,iBAAiB8B,2BAC3BzoB,EACAimB,MAKNsC,EAASrgB,KAAK,CACZqf,SAAQ,aAAA7iB,OAAe1E,EAAf,gCACR6nB,YAAa,WACX,OAAO/pB,EAAK6oB,iBAAiB+B,wBAC3B1oB,EACAimB,MAKCsC,8BC9NLI,GAAOC,GAAA,EAAMD,KAEEE,yLAUjB,IAHA,IAAM9B,EAAQrrB,KAAKiH,MAAMmmB,gBAAgB/B,MACnCgC,EAAY,GAET7f,EAAQ,EAAGA,EAAQ6d,EAAMtsB,OAAQyO,IACxC6f,EAAU7gB,KAAK,CACb8gB,KACElmB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,YACGkG,IAAUxN,KAAKiH,MAAMmmB,gBAAgB9B,aACrCtrB,KAAKiH,MAAMmmB,gBAAgBnsB,MAM1BmG,EAAAC,EAAAC,cAAA,aALAF,EAAAC,EAAAC,cAAAa,EAAA,GACEC,MAAO,CAAEC,SAAU,OAAQsK,aAAc,IACzCzT,KAAK,aAMVmsB,EAAM7d,IAGXrF,UAAMnJ,IAIV,OAAOquB,EAAUxf,IAAI,SAAAzM,GACnB,OAAOgG,EAAAC,EAAAC,cAAC2lB,GAAD,CAAM9kB,KAAM/G,EAAE+G,KAAMgC,MAAO/I,EAAEksB,0CAKtC,IAAMlrB,EAAOpC,KAEb,OACEoH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,UACvB5E,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAK,kBAAAnB,OAAoBhJ,KAAKiH,MAAM3C,UACxC8C,EAAAC,EAAAC,cAAA,+GAIAF,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqT,QAAS,KACrBrU,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA4lB,GAAA,GACErsB,OACIuB,EAAK6E,MAAMmmB,gBAAgBnsB,MAAQ,aAAUjC,EAEjDuuB,UAAU,WACVjM,QAASlf,EAAK6E,MAAMmmB,gBAAgB9B,aAEnClpB,EAAKorB,eAGRpmB,EAAAC,EAAAC,cAAA,OACE6G,UACI/L,EAAK6E,MAAMmmB,gBAAgBrB,eACzB,GACA,kBAGN3kB,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA8G,EAAA,GACEC,UAAQ,EACRnP,KAAK,UACLQ,QACE0H,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAE8e,WAAY,aACvB9kB,EAAK6E,MAAMmmB,gBAAgBrB,kBAIlC3kB,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACE9D,MAAO,CAAEoZ,SAAU,KACnB5Y,KAAK,QACL1J,KAAK,UACLqI,QAAS,kBAAMnF,EAAK6E,MAAMwmB,oBAJ5B,YAWJrmB,EAAAC,EAAAC,cAAA,OACE6G,UACI/L,EAAK6E,MAAMmmB,gBAAgBnsB,MAAQ,GAAK,kBAG5CmG,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAA8G,EAAA,GACEC,UAAQ,EACRnP,KAAK,QACLQ,QAAS0C,EAAK6E,MAAMmmB,gBAAgBnsB,QAEtCmG,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MAEtBrI,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA4E,EAAA,GACEtD,KAAK,QACL1J,KAAK,UACLqI,QAAS,kBAAMnF,EAAK6E,MAAMymB,qBAH5B,sCA3GiChmB,aCwClCimB,eAUnB,SAAAA,EAAY1mB,GAAY,IAAAE,EAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAA2tB,IACtBxmB,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAwuB,GAAA7lB,KAAA9H,KAAMiH,KAHA2mB,WAAqB,EAI3B,IAAMxrB,EAAIjD,OAAA0uB,GAAA,EAAA1uB,QAAA0uB,GAAA,EAAA1uB,CAAAgI,IAFY,OAGtBA,EAAKtI,MAAQ,CACX0K,aAASvK,EACTouB,qBAAiBpuB,GAEnBmI,EAAK2mB,wBAA0B,IAAI/C,GACjC,SAAAqC,GACMhrB,EAAKwrB,WAGTxrB,EAAKsH,SAAS,CAAE0jB,sBAZEjmB,sFAkBtBnH,KAAK4tB,WAAY,8CAIjB,IAAMxrB,EAAOpC,MACb,IAAIyoB,IACDsF,qBAAqB/tB,KAAKiH,MAAMkR,MAAM/U,OAAOkB,SAC7ChC,KAAK,SAASE,GACkC,OAA1CA,EAAKwrB,gBAAkB,IAAIlW,YAOhCtV,EAAKL,UAAYK,EAAKL,WAAa,GAEnCK,EAAKL,UAAU8rB,QAAQ,CACrBvgB,GA9EiC,gBA+EjCwc,MAAO,WACPvnB,YACE,kEACFknB,WAAY,iCAEdznB,EAAKsH,SAAS,CAAEH,QAAS/G,KAfvB9C,EAAA,EAAQuB,MACN,yEAgBL8B,MAAM8F,EAAQc,kDAIjB,IAAMvH,EAAOpC,KACPotB,EAAkBptB,KAAKnB,MAAMuuB,gBAC7B7jB,EAAUvJ,KAAKnB,MAAM0K,QAE3B,OAAKA,EAIC6jB,EAEFhmB,EAAAC,EAAAC,cAAC4mB,GAAD,CACE5pB,QAASlC,EAAK6E,MAAMkR,MAAM/U,OAAOkB,QACjC8oB,gBAAiBA,EACjBK,gBAAiB,kBAAMrrB,EAAK6E,MAAMsF,QAAQC,KAAK,UAC/CkhB,iBAAkB,kBAAMtrB,EAAKsH,SAAS,CAAE0jB,qBAAiBpuB,OAM7DoI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,UACvB5E,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAK,cAAAnB,OAAgBhJ,KAAKiH,MAAMkR,MAAM/U,OAAOkB,UACjD8C,EAAAC,EAAAC,cAAA,UAAKtH,KAAKiH,MAAMkR,MAAM/U,OAAOkB,SAC7B8C,EAAAC,EAAAC,cAAA,KACEc,MAAO,CACL8e,WAAY,WACZ9U,YAAa,GACbO,aAAc,KAGfpJ,EAAQyiB,aAAamC,OAExB/mB,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEqH,OAAQ,MACtBrI,EAAAC,EAAAC,cAAC8mB,GAAD,CACEhF,qBAAsB7f,EAAQpH,UAC9BsnB,cAAe,SAAA0B,GACb/oB,EAAK0rB,wBAAwBO,mBAC3BjsB,EAAKvD,MAAM0K,QACX4hB,GAEF1N,YArCLrW,EAAAC,EAAAC,cAAC4D,EAAD,aA/DsCxD,aC3B3C4mB,cAAQC,eAASC,aAEJC,eAQnB,SAAAA,EAAYxnB,GAAY,IAAAE,EAAA,OAAAhI,OAAAY,EAAA,EAAAZ,CAAAa,KAAAyuB,IACtBtnB,EAAAhI,OAAAyI,EAAA,EAAAzI,CAAAa,KAAAb,OAAA0I,EAAA,EAAA1I,CAAAsvB,GAAA3mB,KAAA9H,KAAMiH,KACDoa,cAAgBqN,IAAMC,YAC3BxnB,EAAKtI,MAAQ,CACXinB,iBAAa9mB,GAJOmI,mFAStB,IAAM/E,EAAOpC,KAER0D,EAAW4I,aAGdtM,KAAKgI,WACF+d,iBACAzjB,KAAK,SAASE,GACbJ,EAAKsH,SAAS,CAAEoc,YAAatjB,MAE9BO,MAAM8F,EAAQc,iBAPjB3J,KAAK4uB,gDAYP5uB,KAAKiH,MAAMsF,QAAQC,KAAK,kEAIxB,IAAMpK,EAAOpC,KAEb,OAAKoC,EAAKvD,MAAMinB,aAAgB1jB,EAAKvD,MAAMinB,YAAYI,UAKrD9e,EAAAC,EAAAC,cAACunB,EAAA,SAAD,KACEznB,EAAAC,EAAAC,cAACgH,EAAD,CACEpH,cAAe,kBAAM9E,EAAK6E,MAAMsF,QAAQC,KAAK,eAE7CpF,EAAAC,EAAAC,cAAAa,EAAA,GACEjJ,KAAK,OACLoV,MAAM,UACNlM,MAAO,CACL0mB,WAAY,MAGhB1nB,EAAAC,EAAAC,cAAAa,EAAA,GACEjJ,KAAK,OACLoV,MAAM,UACNlM,MAAO,CACLoO,YAAa,GACbsY,WAAY,KAflB,oBAmBE1nB,EAAAC,EAAAC,cAAAa,EAAA,GACEjJ,KAAK,OACLoV,MAAM,UACNlM,MAAO,CACL0mB,WAAY,MAGhB1nB,EAAAC,EAAAC,cAAAa,EAAA,GACEjJ,KAAK,OACLoV,MAAM,UACNlM,MAAO,CACL0mB,WAAY,OAnCb1nB,EAAAC,EAAAC,cAAA,kDA2CEynB,GACX/uB,KAAKiH,MAAMsF,QAAQC,KAAK,IAAMuiB,EAAMliB,sCAIpC,IAAMzK,EAAOpC,KACb,OACEoH,EAAAC,EAAAC,cAAA0nB,EAAA,GAAQ7gB,UAAU,kBAChB/G,EAAAC,EAAAC,cAACgnB,GAAD,CAAQngB,UAAU,UAChB/G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA+D,EAAA,OACEjE,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,MAAIc,MAAO,CAAEyZ,MAAO,SAClBza,EAAAC,EAAAC,cAAA,OACEuQ,IAAI,eACJzP,MAAO,CACLoO,YAAa,MAJnB,oBAWDpU,EAAK6sB,iCAER7nB,EAAAC,EAAAC,cAAAgE,EAAA,GAAKC,KAAM,IACTnE,EAAAC,EAAAC,cAAA+D,EAAA,GAAKnM,KAAK,OAAO8M,QAAQ,OACvB5E,EAAAC,EAAAC,cAAA,KACEyC,KAAK,kDACLU,OAAO,SACPC,IAAI,sBACJtC,MAAO,CAAEoO,YAAa,KAJxB,UASApP,EAAAC,EAAAC,cAAA,KACEyC,KAAK,8BACLU,OAAO,SACPC,IAAI,sBACJtC,MAAO,CAAEoO,YAAa,KAJxB,QAQApP,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,QACEc,MAAO,CACLyK,OAAQ,oBACRD,aAAc,EACd6I,QAAS,IAGXrU,EAAAC,EAAAC,cAACgH,EAAD,CACEpH,cAAe,WACb9E,EAAK4F,WAAWjE,aAAa,IAC7B3B,EAAKwsB,cAHT,UAMSxnB,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,mBASlCkI,EAAAC,EAAAC,cAAA0nB,EAAA,OACE5nB,EAAAC,EAAAC,cAACknB,GAAD,CAAOU,aAAW,EAAC3mB,MAAO,IAAKH,MAAO,CAAEmZ,WAAY,SAClDna,EAAAC,EAAAC,cAAA6nB,EAAA,GACEC,SAAU,SAACL,GACT3sB,EAAKitB,aAAaN,IAEpBza,MAAM,OACNgb,KAAK,SACLC,oBAAqB,CAAC,aACtBnnB,MAAO,CAAEqH,OAAQ,OAAQ+f,YAAa,IAEtCpoB,EAAAC,EAAAC,cAAA6nB,EAAA,EAAMM,KAAN,CAAW5iB,IAAI,aACbzF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,WACXkI,EAAAC,EAAAC,cAAA,2BAGJF,EAAAC,EAAAC,cAAA6nB,EAAA,EAAMM,KAAN,CAAW5iB,IAAI,QACbzF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,SACXkI,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA6nB,EAAA,EAAMM,KAAN,CAAW5iB,IAAI,cACbzF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,cACXkI,EAAAC,EAAAC,cAAA,4BAGJF,EAAAC,EAAAC,cAAA6nB,EAAA,EAAMM,KAAN,CAAW5iB,IAAI,WACbzF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,YACXkI,EAAAC,EAAAC,cAAA,yBAGJF,EAAAC,EAAAC,cAAA6nB,EAAA,EAAMM,KAAN,CAAW5iB,IAAI,YACbzF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,YACXkI,EAAAC,EAAAC,cAAA,4BAKRF,EAAAC,EAAAC,cAACinB,GAAD,KACEnnB,EAAAC,EAAAC,cAAA,OACEooB,IAAKttB,EAAKif,cACVjZ,MAAO,CACL+J,WAAY,GACZP,cAAe,GACfnC,OAAQ,OACRkgB,UAAW,UAEbjiB,GAAG,uBAEHtG,EAAAC,EAAAC,cAACsoB,EAAA,EAAD,KACExoB,EAAAC,EAAAC,cAACuoB,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAW3mB,IACrChC,EAAAC,EAAAC,cAACuoB,EAAA,EAAD,CACEC,KAAK,yBACL5gB,OAAQ,SAAAjI,GAAK,OACXG,EAAAC,EAAAC,cAAC0oB,GAAD7wB,OAAA8wB,OAAA,GAAgBhpB,EAAhB,CAAuBoa,cAAejf,EAAKif,oBAG/Cja,EAAAC,EAAAC,cAACuoB,EAAA,EAAD,CACEC,KAAK,0BACLC,UAAWpC,KAEbvmB,EAAAC,EAAAC,cAACuoB,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAWjH,KACxC1hB,EAAAC,EAAAC,cAACuoB,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAW7a,KAChC9N,EAAAC,EAAAC,cAACuoB,EAAA,EAAD,CAAOC,KAAK,eAAeC,UAAWnL,KACtCxd,EAAAC,EAAAC,cAACuoB,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWnc,KACnCxM,EAAAC,EAAAC,cAACuoB,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAW3H,KACpChhB,EAAAC,EAAAC,cAACuoB,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAW1jB,gBA7NL1E,sBCfhCuoB,GAAWC,GAAA,EAAKV,KAEDW,4LACFpsB,GACf,IAAM5B,EAAOpC,KACbA,KAAKgI,WACFpE,aAAaI,GACb1B,KAAK,WACJF,EAAK6E,MAAMsF,QAAQC,KAAK,OAEzBzJ,MAAM8F,EAAQc,kDAIjB,IAAMvH,EAAOpC,KACb,OACEoH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEc,MAAO,CACLioB,SAAU,WACVC,KAAM,MACN/S,IAAK,MACLgT,UAAW,yBAGbnpB,EAAAC,EAAAC,cAAAmE,EAAA,GAAMtB,MAAM,kBAAkB/B,MAAO,CAAEG,MAAO,MAC5CnB,EAAAC,EAAAC,cAACkpB,GAAD,CACEC,iBAAkB,SAACzsB,GAAD,OAChB5B,EAAKquB,iBAAiBzsB,gBA1BH2D,GAoC7B+oB,8MACJC,aAAe,SAAC7vB,GACd,IAAMsB,EAAIjD,OAAA0uB,GAAA,EAAA1uB,QAAA0uB,GAAA,EAAA1uB,CAAAgI,IACVrG,EAAEkG,iBACFG,EAAKF,MAAM2pB,KAAKC,eAAe,SAACrxB,EAAU2rB,GACnC3rB,GACH4C,EAAK6E,MAAMwpB,iBAAiBtF,EAAOnnB,qFAKhC,IACC8sB,EAAsB9wB,KAAKiH,MAAM2pB,KAAjCE,kBACR,OACE1pB,EAAAC,EAAAC,cAAA6oB,GAAA,GAAMY,SAAU/wB,KAAK2wB,aAAcxiB,UAAU,cAC3C/G,EAAAC,EAAAC,cAAC4oB,GAAD,KACGY,EAAkB,WAAY,CAC7BE,MAAO,CAAC,CAAEC,UAAU,EAAMvxB,QAAS,iCADpCoxB,CAGC1pB,EAAAC,EAAAC,cAAA6B,EAAA,GACE+nB,OAAQ9pB,EAAAC,EAAAC,cAAAa,EAAA,GAAMjJ,KAAK,OAAOkJ,MAAO,CAAEyZ,MAAO,qBAC1C3iB,KAAK,WACLyL,YAAY,eAIlBvD,EAAAC,EAAAC,cAAC4oB,GAAD,KACE9oB,EAAAC,EAAAC,cAAA4E,EAAA,GACE9D,MAAO,CAAE+oB,MAAO,SAChBjyB,KAAK,UACLkyB,SAAS,SACTjjB,UAAU,qBAJZ,kBA3BoBugB,IAAMhnB,WAyC9B8oB,GAAyBL,GAAA,EAAKkB,QAALlB,CAAcO,ICvE7CnxB,IAA4B+xB,OAE5B,IAAMC,GAA4BC,YAAgBC,IAAhBD,CAAuBE,KAmB1CC,oLAfX,OACEvqB,EAAAC,EAAAC,cAAA,OAAK6G,UAAU,kBACb/G,EAAAC,EAAAC,cAACsqB,EAAA,EAAD,CAAUC,MAAON,GAA0BO,IACzC1qB,EAAAC,EAAAC,cAACyqB,EAAA,EAAD,KACE3qB,EAAAC,EAAAC,cAAC0qB,EAAA,EAAD,KACE5qB,EAAAC,EAAAC,cAAC2qB,EAAA,EAAD,CAAOnC,KAAK,UAAUC,UAAWK,KACjChpB,EAAAC,EAAAC,cAAC2qB,EAAA,EAAD,CAAOnC,KAAK,IAAIC,UAAWtB,gBARvB/mB,aCNEwqB,QACW,cAA7BroB,OAAOC,SAASwJ,UAEe,UAA7BzJ,OAAOC,SAASwJ,UAEhBzJ,OAAOC,SAASwJ,SAAS6E,MACvB,2DCZNga,IAASjjB,OAAO9H,EAAAC,EAAAC,cAAC8qB,GAAD,MAASjX,SAASC,eAAe,SD2H3C,kBAAmBiX,WACrBA,UAAUC,cAAcC,MAAMjwB,KAAK,SAAAkwB,GACjCA,EAAaC","file":"static/js/main.f63a2753.chunk.js","sourcesContent":["export const DEFAULT_REGISTRY_CHANGED = \"DEFAULT_REGISTRY_CHANGED\";\n\nexport function emitDefaultRegistryChanged(value: string | undefined) {\n  return {\n    type: DEFAULT_REGISTRY_CHANGED,\n    payload: value\n  };\n}\n","import { DEFAULT_REGISTRY_CHANGED } from \"../actions/DefaultRegistryActions\";\n\nexport default function(state = {}, action: { payload: any; type: string }) {\n  switch (action.type) {\n    case DEFAULT_REGISTRY_CHANGED:\n      return { ...state, defaultRegistryId: action.payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport DefaultRegistryReducer from \"./DefaultRegistryReducer\";\n\nconst rootReducer = combineReducers({\n  registryReducer: DefaultRegistryReducer\n});\n\nexport default rootReducer;\n","// In the future this can be set up to report crashes\nclass CrashReporter {\n  init() {}\n\n  captureException(err: any) {\n    err = err || \"NULL\";\n    if (!(err instanceof Error)) err = new Error(err + \"\");\n  }\n\n  captureMessage(message: any) {}\n}\n\nlet instance: CrashReporter | undefined = undefined;\n\nconst getInstance = function() {\n  if (!instance) instance = new CrashReporter();\n  return instance;\n};\n\nexport default {\n  getInstance: getInstance\n};\n","import CrashReporter from \"./CrashReporter\";\n\nclass ErrorFactory {\n  public readonly OKAY = 100;\n  public readonly OKAY_BUILD_STARTED = 101;\n\n  public readonly STATUS_ERROR_GENERIC = 1000;\n  public readonly STATUS_ERROR_CAPTAIN_NOT_INITIALIZED = 1001;\n  public readonly STATUS_ERROR_USER_NOT_INITIALIZED = 1101;\n  public readonly STATUS_ERROR_NOT_AUTHORIZED = 1102;\n  public readonly STATUS_ERROR_ALREADY_EXIST = 1103;\n  public readonly STATUS_ERROR_BAD_NAME = 1104;\n  public readonly STATUS_WRONG_PASSWORD = 1105;\n  public readonly STATUS_AUTH_TOKEN_INVALID = 1106;\n  public readonly VERIFICATION_FAILED = 1107;\n\n  public readonly UNKNOWN_ERROR = 1999;\n\n  constructor() {}\n\n  createError(status: number, message: string) {\n    let e = new Error(message) as any;\n    e.captainStatus = status;\n    e.captainMessage = message;\n    return e;\n  }\n\n  eatUpPromiseRejection() {\n    return function(error: any) {\n      CrashReporter.getInstance().captureException(error);\n      // nom nom\n    };\n  }\n}\n\nexport default new ErrorFactory();\n","export default class Logger {\n  static log(s: string) {\n    console.log(s);\n  }\n\n  static error(s: any) {\n    console.error(s);\n  }\n\n  static dev(s: string) {\n    if (process.env.REACT_APP_IS_DEBUG) {\n      console.log(\">>> \", s);\n    }\n  }\n}\n","import axios from \"axios\";\nimport ErrorFactory from \"../utils/ErrorFactory\";\nimport Logger from \"../utils/Logger\";\n\nvar TOKEN_HEADER = \"x-captain-auth\";\nvar NAMESPACE = \"x-namespace\";\nvar CAPTAIN = \"captain\";\n\nexport default class HttpClient {\n  public readonly GET = \"GET\";\n  public readonly POST = \"POST\";\n  public isDestroyed = false;\n\n  constructor(\n    private baseUrl: string,\n    private authToken: string,\n    private onAuthFailure: () => Promise<any>\n  ) {\n    //\n  }\n\n  createHeaders() {\n    let headers: any = {};\n    if (this.authToken) headers[TOKEN_HEADER] = this.authToken;\n    headers[NAMESPACE] = CAPTAIN;\n\n    // check user/appData or apiManager.uploadAppData before changing this signature.\n    return headers;\n  }\n\n  setAuthToken(authToken: string) {\n    this.authToken = authToken;\n  }\n\n  destroy() {\n    this.isDestroyed = true;\n  }\n\n  fetch(method: \"GET\" | \"POST\", endpoint: string, variables: any) {\n    const self = this;\n    return function(): Promise<any> {\n      return self\n        .fetchInternal(method, endpoint, variables) //\n        .then(function(axiosResponse) {\n          const data = axiosResponse.data; // this is an axios thing!\n          if (data.status === ErrorFactory.STATUS_AUTH_TOKEN_INVALID) {\n            return self\n              .onAuthFailure() //\n              .then(function() {\n                return self\n                  .fetchInternal(method, endpoint, variables)\n                  .then(function(newAxiosResponse) {\n                    return newAxiosResponse.data;\n                  });\n              });\n          } else {\n            return data;\n          }\n        })\n        .then(function(data) {\n          if (\n            data.status !== ErrorFactory.OKAY &&\n            data.status !== ErrorFactory.OKAY_BUILD_STARTED\n          ) {\n            throw ErrorFactory.createError(\n              data.status || ErrorFactory.UNKNOWN_ERROR,\n              data.description || \"\"\n            );\n          }\n          return data;\n        })\n        .then(function(data) {\n          // These two blocks are clearly memory leaks! But I don't have time to fix them now... I need to CANCEL the promise, but since I don't\n          // have CANCEL method on the native Promise, I return a promise that will never RETURN if the HttpClient is destroyed.\n          // Will fix them later... but it shouldn't be a big deal anyways as it's only a problem when user navigates away from a page before the\n          // network request returns back.\n          return new Promise(function(resolve, reject) {\n            // data.data here is the \"data\" field inside the API response! {status: 100, description: \"Login succeeded\", data: {…}}\n            if (!self.isDestroyed) return resolve(data.data);\n          });\n        })\n        .catch(function(error) {\n          Logger.error(error);\n          return new Promise(function(resolve, reject) {\n            if (!self.isDestroyed) return reject(error);\n          });\n        });\n    };\n  }\n\n  fetchInternal(method: \"GET\" | \"POST\", endpoint: string, variables: any) {\n    if (method === this.GET) return this.getReq(endpoint, variables);\n\n    if (method === this.POST) return this.postReq(endpoint, variables);\n\n    throw new Error(\"Unknown method: \" + method);\n  }\n\n  getReq(endpoint: string, variables: any) {\n    const self = this;\n    return axios\n      .get(this.baseUrl + endpoint, {\n        params: variables,\n        headers: self.createHeaders()\n      }) //\n      .then(function(data) {\n        //console.log(data);\n        return data;\n      });\n  }\n\n  postReq(endpoint: string, variables: any) {\n    const self = this;\n    return axios\n      .post(this.baseUrl + endpoint, variables, {\n        headers: self.createHeaders()\n      }) //\n      .then(function(data) {\n        //console.log(data);\n        return data;\n      });\n  }\n}\n","import HttpClient from \"./HttpClient\";\nimport Logger from \"../utils/Logger\";\nimport { IAppDef } from \"../containers/apps/AppDefinition\";\nimport { IRegistryInfo } from \"../models/IRegistryInfo\";\nimport Utils from \"../utils/Utils\";\nimport { ICaptainDefinition } from \"../models/ICaptainDefinition\";\nimport { IVersionInfo } from \"../models/IVersionInfo\";\n\nconst BASE_DOMAIN = process.env.REACT_APP_API_URL\n  ? process.env.REACT_APP_API_URL\n  : \"\";\nconst URL = BASE_DOMAIN + \"/api/v2\";\nLogger.dev(\"API URL: \" + URL);\n\nexport default class ApiManager {\n  private static lastKnownPassword: string = process.env\n    .REACT_APP_DEFAULT_PASSWORD\n    ? process.env.REACT_APP_DEFAULT_PASSWORD + \"\"\n    : \"captain42\";\n  private static authToken: string = !!process.env.REACT_APP_IS_DEBUG\n    ? \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Im5hbWVzcGFjZSI6ImNhcHRhaW4iLCJ0b2tlblZlcnNpb24iOiI5NmRjM2U1MC00ZDk3LTRkNmItYTIzMS04MmNiZjY0ZTA2NTYifSwiaWF0IjoxNTQ1OTg0MDQwLCJleHAiOjE1ODE5ODQwNDB9.uGJyhb2JYsdw9toyMKX28bLVuB0PhnS2POwEjKpchww\"\n    : \"\";\n\n  private http: HttpClient;\n\n  constructor() {\n    const self = this;\n    this.http = new HttpClient(URL, ApiManager.authToken, function() {\n      return self.getAuthToken(ApiManager.lastKnownPassword);\n    });\n  }\n\n  destroy() {\n    this.http.destroy();\n  }\n\n  setAuthToken(authToken: string) {\n    ApiManager.authToken = authToken;\n    this.http.setAuthToken(authToken);\n  }\n\n  static isLoggedIn() {\n    return !!ApiManager.authToken;\n  }\n\n  getAuthToken(password: string) {\n    const http = this.http;\n    ApiManager.lastKnownPassword = password;\n\n    const self = this;\n    return Promise.resolve() //\n      .then(http.fetch(http.POST, \"/login\", { password }))\n      .then(function(data) {\n        self.setAuthToken(data.token);\n      });\n  }\n\n  getCaptainInfo() {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(http.fetch(http.GET, \"/user/system/info\", {}));\n  }\n\n  updateRootDomain(rootDomain: string) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/system/changerootdomain\", { rootDomain })\n      );\n  }\n\n  enableRootSsl(emailAddress: string) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(http.fetch(http.POST, \"/user/system/enablessl\", { emailAddress }));\n  }\n\n  forceSsl(isEnabled: boolean) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(http.fetch(http.POST, \"/user/system/forcessl\", { isEnabled }));\n  }\n\n  getAllApps() {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(http.fetch(http.GET, \"/user/apps/appDefinitions\", {}));\n  }\n\n  fetchBuildLogs(appName: string) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(http.fetch(http.GET, \"/user/apps/appData/\" + appName, {}));\n  }\n\n  uploadAppData(appName: string, file: File) {\n    const http = this.http;\n    var formData = new FormData();\n    formData.append(\"sourceFile\", file);\n    return Promise.resolve() //\n      .then(\n        http.fetch(\n          http.POST,\n          \"/user/apps/appData/\" + appName + \"?detached=1\",\n          formData\n        )\n      );\n  }\n\n  uploadCaptainDefinitionContent(\n    appName: string,\n    captainDefinition: ICaptainDefinition,\n    detached: boolean\n  ) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(\n          http.POST,\n          \"/user/apps/appData/\" + appName + (detached ? \"?detached=1\" : \"\"),\n          { captainDefinitionContent: JSON.stringify(captainDefinition) }\n        )\n      );\n  }\n\n  updateConfigAndSave(appName: string, appDefinition: IAppDef) {\n    var instanceCount = appDefinition.instanceCount;\n    var envVars = appDefinition.envVars;\n    var notExposeAsWebApp = appDefinition.notExposeAsWebApp;\n    var forceSsl = appDefinition.forceSsl;\n    var volumes = appDefinition.volumes;\n    var ports = appDefinition.ports;\n    var nodeId = appDefinition.nodeId;\n    var appPushWebhook = appDefinition.appPushWebhook;\n    var customNginxConfig = appDefinition.customNginxConfig;\n    var preDeployFunction = appDefinition.preDeployFunction;\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/apps/appDefinitions/update\", {\n          appName: appName,\n          instanceCount: instanceCount,\n          notExposeAsWebApp: notExposeAsWebApp,\n          forceSsl: forceSsl,\n          volumes: volumes,\n          ports: ports,\n          customNginxConfig: customNginxConfig,\n          appPushWebhook: appPushWebhook,\n          nodeId: nodeId,\n          preDeployFunction: preDeployFunction,\n          envVars: envVars\n        })\n      );\n  }\n\n  registerNewApp(appName: string, hasPersistentData: boolean) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/apps/appDefinitions/register\", {\n          appName,\n          hasPersistentData\n        })\n      );\n  }\n\n  deleteApp(appName: string) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/apps/appDefinitions/delete\", {\n          appName\n        })\n      );\n  }\n\n  enableSslForBaseDomain(appName: string) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/apps/appDefinitions/enablebasedomainssl\", {\n          appName\n        })\n      );\n  }\n\n  attachNewCustomDomainToApp(appName: string, customDomain: string) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/apps/appDefinitions/customdomain\", {\n          appName,\n          customDomain\n        })\n      );\n  }\n\n  enableSslForCustomDomain(appName: string, customDomain: string) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(\n          http.POST,\n          \"/user/apps/appDefinitions/enablecustomdomainssl\",\n          {\n            appName,\n            customDomain\n          }\n        )\n      );\n  }\n\n  removeCustomDomain(appName: string, customDomain: string) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/apps/appDefinitions/removecustomdomain\", {\n          appName,\n          customDomain\n        })\n      );\n  }\n\n  getLoadBalancerInfo() {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(http.fetch(http.GET, \"/user/system/loadbalancerinfo\", {}));\n  }\n\n  getNetDataInfo() {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(http.fetch(http.GET, \"/user/system/netdata\", {}));\n  }\n\n  updateNetDataInfo(netDataInfo: any) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(http.fetch(http.POST, \"/user/system/netdata\", { netDataInfo }));\n  }\n\n  changePass(oldPassword: string, newPassword: string) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/changepassword\", {\n          oldPassword,\n          newPassword\n        })\n      );\n  }\n\n  getVersionInfo(): Promise<IVersionInfo> {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(http.fetch(http.GET, \"/user/system/versioninfo\", {}));\n  }\n\n  performUpdate(latestVersion: string) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/system/versioninfo\", { latestVersion })\n      );\n  }\n\n  getNginxConfig() {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(http.fetch(http.GET, \"/user/system/nginxconfig\", {}));\n  }\n\n  setNginxConfig(customBase: string, customCaptain: string) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/system/nginxconfig\", {\n          baseConfig: { customValue: customBase },\n          captainConfig: { customValue: customCaptain }\n        })\n      );\n  }\n\n  getUnusedImages(mostRecentLimit: number) {\n    const http = this.http;\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.GET, \"/user/apps/appDefinitions/unusedImages\", {\n          mostRecentLimit: mostRecentLimit + \"\"\n        })\n      );\n  }\n\n  deleteImages(imageIds: string[]) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/apps/appDefinitions/deleteImages\", {\n          imageIds\n        })\n      );\n  }\n\n  getDockerRegistries() {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(http.fetch(http.GET, \"/user/registries\", {}));\n  }\n\n  enableSelfHostedDockerRegistry() {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(\n          http.POST,\n          \"/user/system/selfhostregistry/enableregistry\",\n          {}\n        )\n      );\n  }\n\n  disableSelfHostedDockerRegistry() {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(\n          http.POST,\n          \"/user/system/selfhostregistry/disableregistry\",\n          {}\n        )\n      );\n  }\n\n  addDockerRegistry(dockerRegistry: IRegistryInfo) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/registries/insert\", { ...dockerRegistry })\n      );\n  }\n\n  updateDockerRegistry(dockerRegistry: IRegistryInfo) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/registries/update\", { ...dockerRegistry })\n      );\n  }\n\n  deleteDockerRegistry(registryId: string) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/registries/delete\", {\n          registryId\n        })\n      );\n  }\n\n  setDefaultPushDockerRegistry(registryId: string) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/registries/setpush\", {\n          registryId\n        })\n      );\n  }\n\n  getAllNodes() {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(http.fetch(http.GET, \"/user/system/nodes\", {}));\n  }\n\n  addDockerNode(\n    nodeType: string,\n    privateKey: string,\n    remoteNodeIpAddress: string,\n    captainIpAddress: string\n  ) {\n    const http = this.http;\n\n    return Promise.resolve() //\n      .then(\n        http.fetch(http.POST, \"/user/system/nodes\", {\n          nodeType,\n          privateKey,\n          remoteNodeIpAddress,\n          captainIpAddress\n        })\n      );\n  }\n}\n","import React, { Component, MouseEvent } from \"react\";\n\nexport default class ClickableLink extends Component<\n  { onLinkClicked: Function },\n  {}\n> {\n  handleClick(e: MouseEvent) {\n    e.preventDefault();\n    if (this.props.onLinkClicked) this.props.onLinkClicked();\n  }\n\n  render() {\n    return <a onClick={e => this.handleClick(e)}>{this.props.children}</a>;\n  }\n}\n","import { Component } from \"react\";\nimport ApiManager from \"../../api/ApiManager\";\n\nexport default class ApiComponent<P = {}, S = {}> extends Component<P, S> {\n  protected willUnmountSoon: boolean;\n  protected apiManager: ApiManager;\n\n  constructor(props: any) {\n    super(props);\n    this.willUnmountSoon = false;\n    this.apiManager = new ApiManager();\n  }\n\n  componentWillUnmount() {\n    this.willUnmountSoon = true;\n    this.apiManager.destroy();\n  }\n}\n","import React, { Component } from \"react\";\nimport { Spin, Icon } from \"antd\";\n\nexport default class CenteredSpinner extends Component {\n  render() {\n    const antIcon = <Icon type=\"loading\" style={{ fontSize: 32 }} spin />;\n\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          textAlign: \"center\"\n        }}\n      >\n        <Spin\n          style={{\n            marginTop: 60,\n            marginBottom: 60,\n            width: \"100%\"\n          }}\n          indicator={antIcon}\n          size=\"large\"\n        />\n      </div>\n    );\n  }\n}\n","import { message, Button } from \"antd\";\n\nexport default class Toaster {\n  static toast(error: any) {\n    let errorMessage = \"Something bad happened.\";\n    if (error.captainStatus) {\n      let errorDescription = error.captainMessage || errorMessage;\n      errorMessage = `${error.captainStatus} : ${errorDescription}`;\n    }\n    message.error(errorMessage);\n  }\n\n  static createCatcher() {\n    return function(error: any) {\n      Toaster.toast(error);\n    };\n  }\n}\n","import React, { Component } from \"react\";\nimport { Modal, Tooltip, Row, Col, Card, Input, Button } from \"antd\";\nimport ApiComponent from \"./global/ApiComponent\";\nimport CenteredSpinner from \"./global/CenteredSpinner\";\nimport Toaster from \"../utils/Toaster\";\nconst Search = Input.Search;\n\nexport default class Dashboard extends ApiComponent<\n  {},\n  { isLoading: boolean; apiData: any; userEmail: string }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      userEmail: \"\",\n      isLoading: true,\n      apiData: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.reFetchData();\n  }\n\n  reFetchData() {\n    const self = this;\n    this.apiManager\n      .getCaptainInfo()\n      .then(function(data: any) {\n        self.setState({ isLoading: false, apiData: data });\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  onForceSslClicked() {\n    const self = this;\n\n    const isUsingHttp = window.location.href.startsWith(\"http://\");\n\n    Modal.confirm({\n      title: \"Force HTTPS\",\n      content: (\n        <p>\n          Once Force HTTPS is activated, all HTTP traffic is redirected to\n          HTTPS.\n          {isUsingHttp\n            ? \"Since this is a one-way action, and there is no revert, it is highly recommended that you test the HTTPS website first.\"\n            : \"\"}{\" \"}\n          Do you still want to proceed?\n        </p>\n      ),\n      onOk() {\n        self.apiManager\n          .forceSsl(true)\n          .then(function() {\n            return new Promise(function(resolve, reject) {\n              Modal.success({\n                title: \"Force HTTPS activated!\",\n                content: (\n                  <div>\n                    <p>\n                      All HTTP traffic is now redirected to HTTPS.{\" \"}\n                      {isUsingHttp\n                        ? \"You will have to login again as you will now be redirected to HTTPS website.\"\n                        : \"\"}\n                    </p>\n                  </div>\n                ),\n                onOk() {\n                  resolve();\n                },\n                onCancel() {\n                  resolve();\n                }\n              });\n            });\n          })\n          .then(function() {\n            if (isUsingHttp) {\n              window.location.replace(\n                \"https://\" + self.state.apiData.rootDomain\n              );\n            }\n          })\n          .catch(Toaster.createCatcher());\n      },\n      onCancel() {\n        // do nothing\n      }\n    });\n  }\n\n  onEnableSslClicked() {\n    const self = this;\n    const IGNORE = \"IGNORE\";\n\n    Promise.resolve()\n      .then(function() {\n        return new Promise(function(resolve, reject) {\n          Modal.success({\n            title: \"Enable HTTPS\",\n            content: (\n              <div>\n                <p>\n                  Captain uses{\" \"}\n                  <a\n                    href=\"https://letsencrypt.org/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Let&#39;s Encrypt\n                  </a>{\" \"}\n                  to provide free SSL Certificates (HTTPS). This email address\n                  is very important as Let&#39;s Encrypt uses it for validation\n                  purposes. Please provide a valid email here.\n                </p>\n                <p>\n                  IMPORTANT: Once you enable HTTPS, you cannot edit the root\n                  domain ever again. Make sure you use a good root domain. A\n                  good practice is to go one level deeper and setup your root\n                  domain. For example, if you own <code>example.com</code>, use{\" \"}\n                  <code>*.captainroot.example.com</code> as your root domain.\n                  This will allow you to better manage your subdomains, do not\n                  use <code>*.example.com</code> as your root domain.\n                </p>\n                <Input\n                  placeholder=\"your@email.com\"\n                  type=\"email\"\n                  onChange={event =>\n                    self.setState({\n                      userEmail: (event.target.value || \"\").trim()\n                    })\n                  }\n                />\n              </div>\n            ),\n            onOk() {\n              resolve(self.state.userEmail || \"\");\n            },\n            onCancel() {\n              resolve(undefined);\n            }\n          });\n        });\n      })\n      .then(function(data: any) {\n        if (data === undefined) return IGNORE;\n        self.setState({ isLoading: true });\n        return self.apiManager.enableRootSsl(data);\n      })\n\n      .then(function(data: any) {\n        if (data === IGNORE) return;\n\n        self.reFetchData();\n\n        Modal.success({\n          title: \"Root Domain HTTPS activated!\",\n          content: (\n            <div>\n              <p>\n                You can now use{\" \"}\n                <code>{\"https://\" + self.state.apiData.rootDomain}</code>. Next\n                step is to Force HTTPS to disallow plain HTTP traffic.\n              </p>\n            </div>\n          )\n        });\n\n        return true;\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  updateRootDomain(rootDomain: string) {\n    const self = this;\n    this.apiManager\n      .updateRootDomain(rootDomain)\n      .then(function(data: any) {\n        Modal.success({\n          title: \"Root Domain Updated\",\n          content: (\n            <div>\n              <p>\n                Click Ok to get redirected to your new root domain. You need to\n                log in again.\n              </p>\n            </div>\n          ),\n          onOk() {\n            window.location.replace(\"http://captain.\" + rootDomain);\n          }\n        });\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  render() {\n    const self = this;\n\n    if (self.state.isLoading) {\n      return <CenteredSpinner />;\n    }\n\n    return (\n      <div>\n        {self.createInitialSetup()}\n        <br />\n        {self.createSetupPanel()}\n      </div>\n    );\n  }\n\n  createSetupPanel() {\n    const self = this;\n    return (\n      <Row>\n        <Col span={14} offset={5}>\n          <Card title=\"Captain Root Domain Configurations\">\n            <div>\n              <p>\n                The very first thing that Captain needs is a root domain. For\n                example, if you own <i>myawesomecompany.com</i>, you can use{\" \"}\n                <i>captain.myawesomecompany.com</i> or{\" \"}\n                <i>foo.bar.myawesomecompany.com</i> as your root domain. First,\n                you need to make sure that the ip address for all subdomains of\n                the root domain resolve to the Captain ip address. To do this,\n                go to the DNS settings in your domain provider website, and set\n                a wild card A entry.\n                <br /> For example: <b> Type:</b> <u>A</u>,{\" \"}\n                <b>Name (or host):</b> <u>*.captain</u>,\n                <b> IP (or Points to):</b> <u>110.120.130.140</u> where this is\n                the IP address of your captain machine.\n              </p>\n              <p>\n                <i>\n                  NOTE: DNS settings might take several hours to take into\n                  effect. See{\" \"}\n                  <a\n                    href=\"https://ca.godaddy.com/help/what-factors-affect-dns-propagation-time-1746\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" \"}\n                    here\n                  </a>{\" \"}\n                  for more details.\n                </i>\n              </p>\n            </div>\n\n            <hr />\n            <br />\n\n            <Row>\n              <div>\n                <p>\n                  For example, if you set <code>*.captainroot.example.com</code>{\" \"}\n                  to the IP address of your server, just enter{\" \"}\n                  <code>captainroot.example.com</code> in the box below:\n                </p>\n                <br />\n                <div>\n                  <Search\n                    addonBefore=\"[wildcard]&nbsp;.\"\n                    disabled={self.state.apiData.hasRootSsl}\n                    placeholder=\"captainroot.example.com\"\n                    defaultValue={self.state.apiData.rootDomain + \"\"}\n                    enterButton=\"Update Domain\"\n                    onSearch={value => self.updateRootDomain(value)}\n                  />\n                </div>\n              </div>\n              <br />\n              <br />\n              <Row type=\"flex\" justify=\"end\">\n                <Tooltip title=\"Using Let's Encrypt Free Service\">\n                  <Button\n                    disabled={\n                      self.state.apiData.hasRootSsl ||\n                      !self.state.apiData.rootDomain\n                    }\n                    onClick={() => self.onEnableSslClicked()}\n                  >\n                    Enable HTTPS\n                  </Button>\n                </Tooltip>\n                &nbsp;&nbsp;\n                <Tooltip title=\"Redirect all HTTP to HTTPS\">\n                  <Button\n                    disabled={\n                      !self.state.apiData.hasRootSsl ||\n                      self.state.apiData.forceSsl\n                    }\n                    onClick={() => self.onForceSslClicked()}\n                  >\n                    Force HTTPS\n                  </Button>\n                </Tooltip>\n              </Row>\n\n              <div />\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n\n  createInitialSetup() {\n    if (this.state.apiData.hasRootSsl) {\n      // User has set up the machine, no need to show the welcome message\n      return <div />;\n    }\n\n    return (\n      <Row>\n        <Col span={18} offset={3}>\n          <Card title=\"Captain Initial Setup\">\n            <div>\n              <h3>Congratulations! 🎉🎉</h3>\n              <p>\n                <b /> You have installed CaptainDuckDuck successfully! You can\n                set up your CaptainDuckDuck instance in two ways:\n              </p>\n\n              <ul>\n                <li>\n                  <b>Command Line Tool (RECOMMENDED): </b> On your local\n                  machine, simply run\n                  <br />\n                  <code>npm i -g captainduckduck</code>\n                  <br />\n                  followed by\n                  <br />\n                  <code>captainduckduck serversetup</code>. Then follow the\n                  guide.\n                </li>\n                <li>\n                  <b>Use the panel below: </b> This is a non-guided version of\n                  the Command Line method. Use this method only for the purpose\n                  of experimentation.\n                </li>\n              </ul>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport ApiManager from \"../api/ApiManager\";\n\nexport default class LoggedInCatchAll extends Component<\n  RouteComponentProps<any>\n> {\n  componentDidMount() {\n    if (!ApiManager.isLoggedIn()) {\n      this.props.history.push(\"/login\");\n    } else {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return <div />;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Collapse } from \"antd\";\n\nexport default class DockerRegistriesStaticInfo extends Component {\n  render() {\n    return (\n      <div>\n        <p>\n          Setting up Docker Registry is <b>only required</b> if you plan to run\n          your Captain on a cluster. For single node Captain deployments, Docker\n          Registry is not recommended as it makes deployment significantly\n          slower.\n        </p>\n        <Collapse>\n          <Collapse.Panel header=\"More info\" key=\"1\">\n            <p>\n              Docker registry is a repository for your built images. It is\n              similar to Github, or Bitbucker, with private repositories.\n              However, instead of source code, it contains the built artifacts\n              for your application. It is required for cluster mode, as other\n              nodes need to access the built image in order for your application\n              to run on them.\n            </p>\n            <p>\n              Captain provides two methods for you to setup your docker\n              registry:\n            </p>\n            <ul>\n              <li>\n                <b>Self hosted Docker Registry:</b> This is the simplest way to\n                setup a docker registry. Captain creates an instance of Docker\n                Registry on the main machine and it manages the registry for\n                you. However, it has its own limitation. If your main machine is\n                destroyed, your local images will be lost. In most cases, this\n                is not a disaster as you can re-deploy your apps from your\n                source code.\n                <br />\n              </li>\n              <li>\n                <b>Remote Docker Registry:</b> This approach relies on a remote\n                service to act as your Docker Registry. Using this approach,\n                you'll have a more reliable cluster, assuming the third party\n                service you use is reliable! There are multiple private Docker\n                Registry services available: Google Container Registry, Amazon\n                EC2 Container Registry, Quay and etc. Note that this approach\n                costs you money.\n              </li>\n            </ul>\n          </Collapse.Panel>\n        </Collapse>\n      </div>\n    );\n  }\n}\n","import { number } from \"prop-types\";\n\nexport default {\n  copyObject<T>(obj: T): T {\n    return JSON.parse(JSON.stringify(obj)) as T;\n  },\n\n  generateUuidV4() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n      var r = (Math.random() * 16) | 0,\n        v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ClickableLink from \"../global/ClickableLink\";\nimport { IRegistryApi } from \"../../models/IRegistryInfo\";\nimport { Icon, Modal, Select, Alert } from \"antd\";\nimport Utils from \"../../utils/Utils\";\n\nconst Option = Select.Option;\nconst NONE = \"none\";\nconst DISABLED_PUSH = \"disabled push\";\n\nexport default class DefaultDockerRegistry extends Component<\n  {\n    apiData: IRegistryApi;\n    changeDefault: (regId: string) => void;\n  },\n  { isInEditMode: boolean; newSelectedDefaultId: string }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isInEditMode: false,\n      newSelectedDefaultId: \"\"\n    };\n  }\n\n  getDefaultRegText() {\n    const registries = this.props.apiData.registries;\n    const defaultPushRegistryId = this.props.apiData.defaultPushRegistryId;\n    for (let index = 0; index < registries.length; index++) {\n      const element = registries[index];\n      if (element.id === defaultPushRegistryId) {\n        return element.registryUser + \" @ \" + element.registryDomain;\n      }\n    }\n\n    return DISABLED_PUSH;\n  }\n\n  getAllOptions() {\n    const registries = Utils.copyObject(this.props.apiData.registries);\n    return registries.map(function(element) {\n      return (\n        <Option value={element.id} key={element.id}>\n          {element.registryUser + \" @ \" + element.registryDomain}\n        </Option>\n      );\n    });\n  }\n\n  render() {\n    const self = this;\n\n    return (\n      <div>\n        <Modal\n          title=\"Edit Push Registry\"\n          okText=\"Save and Update\"\n          onCancel={() => self.setState({ isInEditMode: false })}\n          onOk={() => {\n            self.setState({ isInEditMode: false });\n            self.props.changeDefault(self.state.newSelectedDefaultId);\n          }}\n          visible={self.state.isInEditMode}\n        >\n          <p>\n            Default Docker Registry is the registry that will be used to store\n            your newly built images. You can select <code>{DISABLED_PUSH}</code>{\" \"}\n            if you don't want to push your newly built images to any docker\n            registry. Keep in mind that if you use <code>{DISABLED_PUSH}</code>,\n            cluster nodes (if you happen to have more than one server) will not\n            be able to run your applications.\n          </p>\n          <p>Change the default Docker Registry:</p>\n          <Select\n            defaultValue={this.props.apiData.defaultPushRegistryId || NONE}\n            style={{ width: 300 }}\n            onChange={value => {\n              if (value == NONE) {\n                this.setState({ newSelectedDefaultId: \"\" });\n              } else {\n                this.setState({ newSelectedDefaultId: value });\n              }\n            }}\n          >\n            <Option value={NONE}>{DISABLED_PUSH}</Option>\n            {self.getAllOptions()}\n          </Select>\n\n          <div\n            style={{ marginTop: 20 }}\n            className={\n              !!self.state.newSelectedDefaultId ? \"hide-on-demand\" : \"\"\n            }\n          >\n            <Alert\n              showIcon={true}\n              type=\"warning\"\n              message=\"If you have a cluster (more than one server), you need to have a default push registry. If you only have one single server, disabling default push registry is fine.\"\n            />\n          </div>\n        </Modal>\n        <h3>Default Push Registry</h3>\n        <p>\n          Docker Registry for Pushing New Images:{\" \"}\n          <ClickableLink\n            onLinkClicked={() => {\n              self.setState({\n                isInEditMode: true,\n                newSelectedDefaultId:\n                  self.props.apiData.defaultPushRegistryId || \"\"\n              });\n            }}\n          >\n            <code>{this.getDefaultRegText()}</code> <Icon type=\"edit\" />\n          </ClickableLink>\n        </p>\n      </div>\n    );\n  }\n}\n","export interface IRegistryApi {\n  registries: IRegistryInfo[];\n  defaultPushRegistryId: string | undefined;\n}\n\nexport class IRegistryTypes {\n  static readonly LOCAL_REG = \"LOCAL_REG\";\n  static readonly REMOTE_REG = \"REMOTE_REG\";\n}\n\ntype IRegistryType = \"LOCAL_REG\" | \"REMOTE_REG\";\n\nexport interface IRegistryInfo {\n  id: string;\n  registryUser: string;\n  registryPassword: string;\n  registryDomain: string;\n  registryImagePrefix: string;\n  registryType: IRegistryType;\n}\n","import React, { Component } from \"react\";\nimport { Table, Icon, message, Modal, Input, Tooltip } from \"antd\";\nimport {\n  IRegistryApi,\n  IRegistryInfo,\n  IRegistryTypes\n} from \"../../models/IRegistryInfo\";\nimport ClickableLink from \"../global/ClickableLink\";\nimport Utils from \"../../utils/Utils\";\nimport { ColumnProps } from \"antd/lib/table\";\n\nconst EDITING_MODAL = \"EDITING_MODAL\";\nconst DELETING_MODAL = \"DELETING_MODAL\";\n\nexport default class DockerRegistryTable extends Component<\n  {\n    apiData: IRegistryApi;\n    editRegistry: (dockerRegistry: IRegistryInfo) => void;\n    deleteRegistry: (regId: string) => void;\n  },\n  {\n    modalShowing: \"EDITING_MODAL\" | \"DELETING_MODAL\" | undefined;\n    remoteRegistryToEdit: IRegistryInfo | undefined;\n    registryIdToDelete: string | undefined;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      modalShowing: undefined,\n      remoteRegistryToEdit: undefined,\n      registryIdToDelete: undefined\n    };\n  }\n\n  deleteRegistry(id: string) {\n    if (id === this.props.apiData.defaultPushRegistryId) {\n      Modal.warn({\n        title: \"Cannot Delete Default Push\",\n        content: (\n          <div>\n            This registry is set to be the default push. You cannot delete the\n            default push registry. To remove, first you need to change the\n            default push registry to another registry, or completely disable the\n            default push registry. Then, come back and delete this.\n          </div>\n        )\n      });\n      return;\n    }\n\n    this.setState({\n      registryIdToDelete: id,\n      modalShowing: DELETING_MODAL\n    });\n  }\n\n  editRegistry(dockerRegistry: IRegistryInfo) {\n    if (dockerRegistry.registryType === IRegistryTypes.LOCAL_REG) {\n      message.warn(\n        \"You cannot edit the self hosted registry. It is managed by Captain.\"\n      );\n      return;\n    }\n\n    this.setState({\n      modalShowing: EDITING_MODAL,\n      remoteRegistryToEdit: Utils.copyObject(dockerRegistry)\n    });\n  }\n\n  getCols(): ColumnProps<IRegistryInfo>[] {\n    const self = this;\n    const columns = [\n      {\n        title: \"User\",\n        dataIndex: \"registryUser\" as \"registryUser\"\n      },\n      {\n        title: \"Password\",\n        dataIndex: \"registryPassword\" as \"registryPassword\",\n        render: (registryPassword: string) => {\n          return <span>Edit to see.</span>;\n        }\n      },\n      {\n        title: \"Domain\",\n        dataIndex: \"registryDomain\" as \"registryDomain\"\n      },\n      {\n        title: \"Image Prefix\",\n        dataIndex: \"registryImagePrefix\" as \"registryImagePrefix\"\n      },\n      {\n        title: \"Actions\",\n        dataIndex: \"id\" as \"id\",\n        render: (id: string, reg: IRegistryInfo) => {\n          return (\n            <span>\n              <ClickableLink\n                onLinkClicked={() => {\n                  self.editRegistry(reg);\n                }}\n              >\n                <Icon type=\"form\" />\n              </ClickableLink>\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              <ClickableLink\n                onLinkClicked={() => {\n                  self.deleteRegistry(reg.id);\n                }}\n              >\n                <Icon type=\"delete\" />\n              </ClickableLink>\n            </span>\n          );\n        }\n      }\n    ];\n    return columns;\n  }\n\n  createEditModalContent() {\n    const self = this;\n\n    return (\n      <div style={{ maxWidth: 360 }}>\n        <Input\n          addonBefore=\"Username\"\n          placeholder=\"username | email@gmail.com\"\n          type=\"email\"\n          value={self.state.remoteRegistryToEdit!.registryUser}\n          onChange={e => {\n            const newData = Utils.copyObject(self.state.remoteRegistryToEdit!);\n            newData.registryUser = e.target.value.trim();\n            self.setState({ remoteRegistryToEdit: newData });\n          }}\n        />\n        <div style={{ height: 20 }} />\n        <Input\n          addonBefore=\"Password\"\n          placeholder=\"mypassword\"\n          type=\"text\"\n          value={self.state.remoteRegistryToEdit!.registryPassword}\n          onChange={e => {\n            const newData = Utils.copyObject(self.state.remoteRegistryToEdit!);\n            newData.registryPassword = e.target.value;\n            self.setState({ remoteRegistryToEdit: newData });\n          }}\n        />\n        <div style={{ height: 20 }} />\n        <Input\n          addonBefore=\"Domain\"\n          placeholder=\"registry-1.docker.io\"\n          type=\"text\"\n          value={self.state.remoteRegistryToEdit!.registryDomain}\n          onChange={e => {\n            const newData = Utils.copyObject(self.state.remoteRegistryToEdit!);\n            newData.registryDomain = e.target.value.trim();\n            self.setState({ remoteRegistryToEdit: newData });\n          }}\n        />\n        <div style={{ height: 20 }} />\n        <Input\n          addonBefore=\"Image Prefix\"\n          placeholder=\"username\"\n          addonAfter={\n            <Tooltip title=\"Your images will be tagged as RegistryDomain/ImagePrefix/ImageName. For most providers, Image Prefix is exactly your username, unless the field DOMAIN is specific to you, in that case, this prefix is empty.\">\n              <Icon type=\"info-circle\" />\n            </Tooltip>\n          }\n          type=\"text\"\n          value={self.state.remoteRegistryToEdit!.registryImagePrefix}\n          onChange={e => {\n            const newData = Utils.copyObject(self.state.remoteRegistryToEdit!);\n            newData.registryImagePrefix = e.target.value.trim();\n            self.setState({ remoteRegistryToEdit: newData });\n          }}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const self = this;\n    return (\n      <div>\n        <Modal\n          title=\"Confirm Delete\"\n          okText=\"Delete Registry\"\n          onCancel={() => self.setState({ modalShowing: undefined })}\n          onOk={() => {\n            self.setState({ modalShowing: undefined });\n            self.props.deleteRegistry(self.state.registryIdToDelete!);\n          }}\n          visible={self.state.modalShowing === DELETING_MODAL}\n        >\n          Are you sure you want to remote this registry from your list. You will\n          no longer be able to push to or pull from this registry.\n        </Modal>\n        <Modal\n          title=\"Edit Registry\"\n          okText=\"Save and Update\"\n          onCancel={() => self.setState({ modalShowing: undefined })}\n          onOk={() => {\n            self.setState({ modalShowing: undefined });\n            self.props.editRegistry(\n              Utils.copyObject(self.state.remoteRegistryToEdit!)\n            );\n          }}\n          visible={self.state.modalShowing === EDITING_MODAL}\n        >\n          {self.state.remoteRegistryToEdit ? (\n            self.createEditModalContent()\n          ) : (\n            <div />\n          )}\n        </Modal>\n        <h3>Docker Registries</h3>\n        <div>\n          <Table\n            rowKey=\"id\"\n            pagination={false}\n            columns={this.getCols()}\n            dataSource={this.props.apiData.registries}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, Row, Modal, Input, Tooltip, Icon } from \"antd\";\nimport {\n  IRegistryInfo,\n  IRegistryTypes,\n  IRegistryApi\n} from \"../../models/IRegistryInfo\";\nimport Utils from \"../../utils/Utils\";\n\nconst ADDING_LOCAL = \"ADDING_LOCAL\";\nconst ADDING_REMOTE = \"ADDING_REMOTE\";\n\nexport default class DockerRegistryAdd extends Component<\n  {\n    apiData: IRegistryApi;\n    addDockerRegistry: (dockerRegistry: IRegistryInfo) => void;\n  },\n  {\n    modalShowing: \"ADDING_LOCAL\" | \"ADDING_REMOTE\" | undefined;\n    remoteRegistryToAdd: IRegistryInfo;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      modalShowing: undefined,\n      remoteRegistryToAdd: this.getPlainRegistryInfo()\n    };\n  }\n\n  getPlainRegistryInfo(): IRegistryInfo {\n    return {\n      id: \"\",\n      registryUser: \"\",\n      registryPassword: \"\",\n      registryDomain: \"\",\n      registryImagePrefix: \"\",\n      registryType: IRegistryTypes.REMOTE_REG\n    };\n  }\n\n  render() {\n    const self = this;\n\n    const hasSelfHostedRegistry =\n      this.props.apiData.registries\n        .map(reg => reg.registryType)\n        .indexOf(IRegistryTypes.LOCAL_REG) >= 0;\n\n    return (\n      <div>\n        <Modal\n          title=\"Self-Hosted Registry\"\n          okText=\"Enable Self-Hosted Registry\"\n          onCancel={() => self.setState({ modalShowing: undefined })}\n          onOk={() => {\n            self.setState({ modalShowing: undefined });\n            self.props.addDockerRegistry({\n              registryType: IRegistryTypes.LOCAL_REG // Other values are getting ignored by the downstream callback\n            } as IRegistryInfo);\n          }}\n          visible={self.state.modalShowing === ADDING_LOCAL}\n        >\n          <p>\n            You can read more about this type of registry on the page behind\n            this modal, specifically under \"More Info\" section. Do you want to\n            proceed and enable self-hosted Docker Registry?\n          </p>\n        </Modal>\n\n        <Modal\n          title=\"Remote Registry\"\n          okText=\"Add Remote Registry\"\n          onCancel={() => self.setState({ modalShowing: undefined })}\n          onOk={() => {\n            self.setState({ modalShowing: undefined });\n            self.props.addDockerRegistry(self.state.remoteRegistryToAdd);\n          }}\n          visible={self.state.modalShowing === ADDING_REMOTE}\n        >\n          <p>\n            You can read more about this type of registry on the page behind\n            this modal, specifically under \"More Info\" section.\n          </p>\n          <div style={{ height: 20 }} />\n          <div style={{ maxWidth: 360 }}>\n            <Input\n              addonBefore=\"Username\"\n              placeholder=\"username | email@gmail.com\"\n              type=\"email\"\n              value={self.state.remoteRegistryToAdd.registryUser}\n              onChange={e => {\n                const newData = Utils.copyObject(\n                  self.state.remoteRegistryToAdd\n                );\n                newData.registryUser = e.target.value.trim();\n                self.setState({ remoteRegistryToAdd: newData });\n              }}\n            />\n            <div style={{ height: 20 }} />\n            <Input\n              addonBefore=\"Password\"\n              placeholder=\"mypassword\"\n              type=\"text\"\n              value={self.state.remoteRegistryToAdd.registryPassword}\n              onChange={e => {\n                const newData = Utils.copyObject(\n                  self.state.remoteRegistryToAdd\n                );\n                newData.registryPassword = e.target.value;\n                self.setState({ remoteRegistryToAdd: newData });\n              }}\n            />\n            <div style={{ height: 20 }} />\n            <Input\n              addonBefore=\"Domain\"\n              placeholder=\"registry-1.docker.io\"\n              type=\"text\"\n              value={self.state.remoteRegistryToAdd.registryDomain}\n              onChange={e => {\n                const newData = Utils.copyObject(\n                  self.state.remoteRegistryToAdd\n                );\n                newData.registryDomain = e.target.value.trim();\n                self.setState({ remoteRegistryToAdd: newData });\n              }}\n            />\n            <div style={{ height: 20 }} />\n            <Input\n              addonBefore=\"Image Prefix\"\n              placeholder=\"username\"\n              addonAfter={\n                <Tooltip title=\"Your images will be tagged as RegistryDomain/ImagePrefix/ImageName. For most providers, Image Prefix is exactly your username, unless the field DOMAIN is specific to you, in that case, this prefix is empty.\">\n                  <Icon type=\"info-circle\" />\n                </Tooltip>\n              }\n              type=\"text\"\n              value={self.state.remoteRegistryToAdd.registryImagePrefix}\n              onChange={e => {\n                const newData = Utils.copyObject(\n                  self.state.remoteRegistryToAdd\n                );\n                newData.registryImagePrefix = e.target.value.trim();\n                self.setState({ remoteRegistryToAdd: newData });\n              }}\n            />\n          </div>\n        </Modal>\n\n        <div className={hasSelfHostedRegistry ? \"hide-on-demand\" : \"\"}>\n          <Row type=\"flex\" justify=\"end\">\n            <Button\n              onClick={() => self.setState({ modalShowing: ADDING_LOCAL })}\n            >\n              Add Self-Hosted Registry\n            </Button>\n          </Row>\n        </div>\n\n        <div style={{ height: 20 }} />\n        <Row type=\"flex\" justify=\"end\">\n          <Button\n            onClick={() =>\n              self.setState({\n                modalShowing: ADDING_REMOTE,\n                remoteRegistryToAdd: self.getPlainRegistryInfo()\n              })\n            }\n          >\n            Add Remote Registry\n          </Button>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Collapse, Row, Button, Alert, message } from \"antd\";\nimport DockerRegistriesStaticInfo from \"./DockerRegistriesStaticInfo\";\nimport ApiComponent from \"../global/ApiComponent\";\nimport CenteredSpinner from \"../global/CenteredSpinner\";\nimport Toaster from \"../../utils/Toaster\";\nimport DefaultDockerRegistry from \"./DefaultDockerRegistry\";\nimport DockerRegistryTable from \"./DockerRegistryTable\";\nimport { connect } from \"react-redux\";\nimport {\n  IRegistryApi,\n  IRegistryInfo,\n  IRegistryTypes\n} from \"../../models/IRegistryInfo\";\nimport DockerRegistryAdd from \"./DockerRegistryAdd\";\nimport { emitDefaultRegistryChanged } from \"../../actions/DefaultRegistryActions\";\n\nclass DockerRegistries extends ApiComponent<\n  { emitDefaultRegistryChanged: Function },\n  { apiData: IRegistryApi | undefined }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      apiData: undefined\n    };\n  }\n\n  fetchData() {\n    const self = this;\n    this.setState({ apiData: undefined });\n    this.apiManager\n      .getDockerRegistries()\n      .then(function(data) {\n        self.setState({ apiData: data });\n        self.props.emitDefaultRegistryChanged(\n          (data as IRegistryApi).defaultPushRegistryId\n        );\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  changeDefault(id: string) {\n    const self = this;\n    this.setState({ apiData: undefined });\n\n    this.apiManager\n      .setDefaultPushDockerRegistry(id)\n      .then(function() {\n        message.success(\"Default push registry successfully changed.\");\n      })\n      .catch(Toaster.createCatcher())\n      .then(function() {\n        self.fetchData();\n      });\n  }\n\n  deleteRegistry(id: string) {\n    const self = this;\n\n    const isSelfHosted =\n      self.state\n        .apiData!.registries.map(\n          reg => reg.registryType === IRegistryTypes.LOCAL_REG && reg.id === id\n        )\n        .indexOf(true) >= 0;\n\n    this.setState({ apiData: undefined });\n\n    (isSelfHosted\n      ? this.apiManager.disableSelfHostedDockerRegistry()\n      : this.apiManager.deleteDockerRegistry(id)\n    )\n      .then(function() {\n        message.success(\"Registry deleted.\");\n      })\n      .catch(Toaster.createCatcher())\n      .then(function() {\n        self.fetchData();\n      });\n  }\n\n  editRegistry(dockerRegistry: IRegistryInfo) {\n    const self = this;\n    this.setState({ apiData: undefined });\n\n    this.apiManager\n      .updateDockerRegistry(dockerRegistry)\n      .then(function() {\n        message.success(\"Registry updated.\");\n      })\n      .catch(Toaster.createCatcher())\n      .then(function() {\n        self.fetchData();\n      });\n  }\n\n  addDockerRegistry(dockerRegistry: IRegistryInfo) {\n    const self = this;\n    this.setState({ apiData: undefined });\n    (dockerRegistry.registryType === IRegistryTypes.LOCAL_REG\n      ? self.apiManager.enableSelfHostedDockerRegistry()\n      : self.apiManager.addDockerRegistry(dockerRegistry)\n    )\n      .then(function() {\n        message.success(\"Docker registry successfully added!\");\n      })\n      .catch(Toaster.createCatcher())\n      .then(function() {\n        self.fetchData();\n      });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    const self = this;\n    if (!this.state.apiData) {\n      return <CenteredSpinner />;\n    }\n\n    return (\n      <div>\n        <DockerRegistriesStaticInfo />\n\n        <div style={{ height: 60 }} />\n        <div\n          style={{ textAlign: \"center\" }}\n          className={\n            this.state.apiData.registries.length === 0 ? \"\" : \"hide-on-demand\"\n          }\n        >\n          <Alert\n            type=\"info\"\n            message=\"No registries is added yet. Go ahead and add your first registry!\"\n          />\n        </div>\n\n        <div\n          className={\n            this.state.apiData.registries.length > 0 ? \"\" : \"hide-on-demand\"\n          }\n        >\n          <DefaultDockerRegistry\n            apiData={self.state.apiData!}\n            changeDefault={id => {\n              self.changeDefault(id);\n            }}\n          />\n\n          <div style={{ height: 40 }} />\n\n          <DockerRegistryTable\n            apiData={self.state.apiData!}\n            deleteRegistry={id => {\n              self.deleteRegistry(id);\n            }}\n            editRegistry={dockerRegistry => {\n              self.editRegistry(dockerRegistry);\n            }}\n          />\n        </div>\n        <div style={{ height: 50 }} />\n        <DockerRegistryAdd\n          apiData={self.state.apiData!}\n          addDockerRegistry={dockerRegistry =>\n            self.addDockerRegistry(dockerRegistry)\n          }\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    defaultRegistryId: state.registryReducer.defaultRegistryId\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    emitDefaultRegistryChanged: emitDefaultRegistryChanged\n  }\n)(DockerRegistries);\n","import React, { Component } from \"react\";\nimport { Card, Row, Col, Input, Button, Icon, Radio, Tooltip } from \"antd\";\nimport Utils from \"../../utils/Utils\";\n\nexport interface INodeToAdd {\n  remoteNodeIpAddress: string;\n  captainIpAddress: string;\n  nodeType: string;\n  privateKey: string;\n}\n\nexport default class AddNode extends Component<\n  { onAddNodeClicked: (nodeToAdd: INodeToAdd) => void },\n  {\n    nodeToAdd: INodeToAdd;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      nodeToAdd: {\n        remoteNodeIpAddress: \"\",\n        captainIpAddress: \"\",\n        nodeType: \"worker\",\n        privateKey: \"\"\n      }\n    };\n  }\n\n  changeModel(childField: string, value: string) {\n    const nodeToAdd = Utils.copyObject(this.state.nodeToAdd) as any;\n    nodeToAdd[childField] = value;\n    this.setState({ nodeToAdd });\n  }\n\n  render() {\n    const self = this;\n    const nodeToAdd = self.state.nodeToAdd;\n\n    return (\n      <div>\n        <Card style={{ marginTop: 16 }} type=\"inner\" title=\"Attach New Node\">\n          <Row type=\"flex\" justify=\"space-between\">\n            <Col span={11}>\n              <Input\n                style={{ marginBottom: 10 }}\n                addonBefore=\"New node IP Address\"\n                placeholder=\"123.123.123.123\"\n                type=\"text\"\n                value={nodeToAdd.remoteNodeIpAddress}\n                onChange={e =>\n                  self.changeModel(\"remoteNodeIpAddress\", e.target.value)\n                }\n              />\n            </Col>\n            <Col span={11}>\n              <Input\n                style={{ marginBottom: 10 }}\n                addonBefore=\"Captain IP Address\"\n                placeholder=\"123.123.123.123\"\n                type=\"text\"\n                value={nodeToAdd.captainIpAddress}\n                onChange={e =>\n                  self.changeModel(\"captainIpAddress\", e.target.value)\n                }\n              />\n            </Col>\n            <Col span={24} style={{ marginTop: 10 }}>\n              <div style={{ paddingBottom: 5 }}>\n                &nbsp;SSH Private Key for <b>root</b> user\n              </div>\n              <Input.TextArea\n                style={{ marginBottom: 20 }}\n                className=\"code-input\"\n                rows={6}\n                placeholder=\"-----BEGIN RSA PRIVATE KEY-----&#10;MIICWwIBAAKBgQDArfs81aizq8ckg16e+ewFgJg7J...\"\n                value={nodeToAdd.privateKey}\n                onChange={e => self.changeModel(\"privateKey\", e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row type=\"flex\" justify=\"end\">\n            <Radio.Group\n              defaultValue=\"a\"\n              buttonStyle=\"outline\"\n              style={{ marginBottom: 20 }}\n              value={nodeToAdd.nodeType}\n              onChange={e => self.changeModel(\"nodeType\", e.target.value)}\n            >\n              <Radio.Button value=\"worker\">Join as worker node</Radio.Button>\n              <Radio.Button value=\"manager\">Join as manager node</Radio.Button>\n            </Radio.Group>\n            &nbsp;\n            <Tooltip title=\"Tip: For every 5 workers, add 2 manager nodes, keeping manager node count as an odd number. Therefore, use worker node for the first 4 nodes you add to your cluster.\">\n              <Icon\n                style={{ paddingTop: 8, paddingLeft: 8 }}\n                type=\"info-circle\"\n              />\n            </Tooltip>\n          </Row>\n\n          <Row type=\"flex\" justify=\"end\">\n            <Button type=\"primary\" onClick={() => self.props.onAddNodeClicked(self.state.nodeToAdd)}>\n              <Icon type=\"cluster\" /> &nbsp; Join Cluster\n            </Button>\n          </Row>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AddNode, { INodeToAdd } from \"./AddNode\";\nimport { Alert, Row, Col, Divider, message } from \"antd\";\nimport ApiComponent from \"../global/ApiComponent\";\nimport Toaster from \"../../utils/Toaster\";\nimport CenteredSpinner from \"../global/CenteredSpinner\";\n\nclass CurrentNodes extends ApiComponent<\n  {\n    defaultRegistryId: string | undefined;\n  },\n  { apiData: any }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      apiData: undefined\n    };\n  }\n\n  fetchData() {\n    const self = this;\n    self.setState({ apiData: undefined });\n    self.apiManager\n      .getAllNodes()\n      .then(function(data) {\n        self.setState({ apiData: data });\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  addNode(nodeToAdd: INodeToAdd) {\n    const self = this;\n    self.setState({ apiData: undefined });\n    self.apiManager\n      .addDockerNode(\n        nodeToAdd.nodeType,\n        nodeToAdd.privateKey,\n        nodeToAdd.remoteNodeIpAddress,\n        nodeToAdd.captainIpAddress\n      )\n      .then(function() {\n        message.success(\"Node added successfully!\");\n      })\n      .catch(Toaster.createCatcher())\n      .then(function(data) {\n        self.fetchData();\n      });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  createNodes() {\n    const nodes: any[] = this.state.apiData.nodes || [];\n\n    return nodes.map(node => {\n      return (\n        <div\n          key={node.nodeId}\n          style={{\n            paddingTop: 15,\n            paddingBottom: 20,\n            paddingRight: 20,\n            paddingLeft: 20,\n            marginBottom: 40,\n            borderRadius: 5,\n            border: \"1px solid #dddddd\",\n            backgroundColor: \"#fcfcfc\"\n          }}\n        >\n          <Row type=\"flex\" justify=\"center\">\n            <b>Node ID:&nbsp;&nbsp;</b> {node.nodeId}\n          </Row>\n          <hr />\n          <div style={{ height: 10 }} />\n          <Row>\n            <Col span={12}>\n              <b>Type: </b>\n              {node.isLeader ? \"Leader (Main Node)\" : node.type}\n            </Col>\n            <Col span={12}>\n              <b>IP: </b>\n              {node.ip}\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <b>State: </b>\n              {node.state}\n            </Col>\n            <Col span={12}>\n              <b>Status: </b>\n              {node.status}\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col span={12}>\n              <b>RAM: </b>\n              {(node.memoryBytes / 1073741824).toFixed(2)} GB\n            </Col>\n            <Col span={12}>\n              <b>OS: </b>\n              {node.operatingSystem}\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <b>CPU: </b>\n              {(node.nanoCpu / 1000000000).toFixed(0)} cores\n            </Col>\n            <Col span={12}>\n              <b>Architecture: </b>\n              {node.architecture}\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col span={12}>\n              <b>Hostname: </b>\n              {node.hostname}\n            </Col>\n            <Col span={12}>\n              <b>Docker Version: </b>\n              {node.dockerEngineVersion}\n            </Col>\n          </Row>\n        </div>\n      );\n    });\n\n    // \"ip\":\"199.195.150.96\"\n    // \"nodeId\":\"i9lccwa92dfyy9kpkktw2okll\"\n\n    // ,\"type\":\"manager\"\n    // ,\"isLeader\":true,\n    // ,\"state\":\"ready\",\n    // \"status\":\"active\"\n\n    // \"hostname\":\"kasra-X550JK\"\n    // \"dockerEngineVersion\":\"18.09.1-rc1\",\n\n    // \"memoryBytes\":8241434624,\n    // operatingSystem\":\"linux\",\n    // \"nanoCpu\":8000000000,\n    // ,\"architecture\":\"x86_64\",\"\n  }\n\n  render() {\n    const self = this;\n    if (!this.state.apiData) {\n      return <CenteredSpinner />;\n    }\n\n    return (\n      <div>\n        {this.props.defaultRegistryId ? (\n          <AddNode\n            onAddNodeClicked={nodeToAdd => {\n              self.addNode(nodeToAdd);\n            }}\n          />\n        ) : (\n          <div>\n            <Alert\n              type=\"warning\"\n              showIcon={true}\n              message=\"Cannot add more nodes as no default push registry is set. To add more nodes and create a cluster, you first need to add a docker registry and set it as the default push registry.\"\n            />\n          </div>\n        )}\n        <div style={{ height: 50 }} />\n\n        <Divider type=\"horizontal\">\n          <h4>Current Cluster Nodes</h4>\n        </Divider>\n        <div style={{ height: 30 }} />\n\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={14}>{self.createNodes()}</Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    defaultRegistryId: state.registryReducer.defaultRegistryId\n  };\n}\n\nexport default connect(mapStateToProps)(CurrentNodes);\n","import React, { Component } from \"react\";\nimport { Row, Col, Card } from \"antd\";\nimport DockerRegistries from \"./DockerRegistries\";\nimport Nodes from \"./Nodes\";\n\nexport default class Cluster extends Component {\n  render() {\n    return (\n      <div>\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={20}>\n            <Card title=\"Docker Registry Configuration\">\n              <DockerRegistries />\n            </Card>\n          </Col>\n        </Row>\n        <div style={{ height: 35 }} />\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={20}>\n            <Card title=\"Nodes\">\n              <Nodes />\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n  componentDidMount() {}\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Card, Checkbox, Button, Icon, Tooltip } from \"antd\";\nimport ApiComponent from \"../global/ApiComponent\";\nimport Toaster from \"../../utils/Toaster\";\nimport Search from \"antd/lib/input/Search\";\nimport CenteredSpinner from \"../global/CenteredSpinner\";\n\nexport default class CreateNewApp extends Component<\n  {\n    onCreateNewAppClicked: (appName: string, hasPersistency: boolean) => void;\n    onCreateOneClickAppClicked: () => void;\n  },\n  { appName: string; hasPersistency: boolean }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      hasPersistency: false,\n      appName: \"\"\n    };\n  }\n\n  onCreateNewAppClicked() {\n    this.props.onCreateNewAppClicked(\n      this.state.appName,\n      this.state.hasPersistency\n    );\n  }\n\n  onCreateOneClickAppClicked() {\n    this.props.onCreateOneClickAppClicked();\n  }\n\n  render() {\n    const self = this;\n\n    return (\n      <Row>\n        <Col span={10} offset={7}>\n          <Card\n            title={\n              <span>\n                <Icon type=\"plus-circle\" />\n                &nbsp;&nbsp;&nbsp;Create A New App\n              </span>\n            }\n          >\n            <Row>\n              <Search\n                placeholder=\"my-amazing-app\"\n                enterButton=\"Create New App\"\n                onChange={e => self.setState({ appName: e.target.value })}\n                onSearch={value => self.onCreateNewAppClicked()}\n              />\n            </Row>\n            <br />\n            <Row type=\"flex\" justify=\"end\">\n              <Checkbox\n                onChange={(e: any) =>\n                  self.setState({ hasPersistency: !!e.target.checked })\n                }\n              >\n                Has Persistent Data\n              </Checkbox>\n              &nbsp;&nbsp;\n              <Tooltip title=\"Mostly used for databases, see docs for details.\">\n                <a\n                  href=\"https://captainduckduck.com/docs/app-configuration.html#persistent-or-not\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <span>\n                    <Icon type=\"question-circle\" theme=\"filled\" />\n                  </span>\n                </a>\n              </Tooltip>\n            </Row>\n\n            <br />\n\n            <hr />\n\n            <br />\n            <div style={{ textAlign: \"center\" }}>\n              <p>Or Select From</p>\n              <Button onClick={() => self.onCreateOneClickAppClicked()}>\n                One-Click Apps/Databases\n              </Button>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Checkbox,\n  Button,\n  Icon,\n  Tooltip,\n  Input,\n  Table\n} from \"antd\";\nimport ApiComponent from \"../global/ApiComponent\";\nimport Toaster from \"../../utils/Toaster\";\nimport Search from \"antd/lib/input/Search\";\nimport CenteredSpinner from \"../global/CenteredSpinner\";\nimport { IAppDef } from \"./AppDefinition\";\nimport ClickableLink from \"../global/ClickableLink\";\nimport { History } from \"history\";\nimport { ColumnProps } from \"antd/lib/table\";\n\nexport default class AppsTable extends Component<\n  {\n    history: History;\n    apps: IAppDef[];\n    rootDomain: string;\n    defaultNginxConfig: string;\n  },\n  { searchTerm: string }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = { searchTerm: \"\" };\n  }\n\n  onAppClicked(appName: string) {\n    this.props.history.push(`/apps/details/${appName}`);\n  }\n\n  createColumns(): ColumnProps<IAppDef>[] {\n    const self = this;\n    const ALIGN: \"center\" = \"center\";\n    return [\n      {\n        title: \"App Name\",\n        dataIndex: \"appName\",\n        key: \"appName\",\n        render: (appName: string) => (\n          <ClickableLink onLinkClicked={() => self.onAppClicked(appName)}>\n            {appName}\n          </ClickableLink>\n        )\n      },\n      {\n        title: \"Persistent Data\t\",\n        dataIndex: \"hasPersistentData\",\n        key: \"hasPersistentData\",\n        align: ALIGN,\n        render: (hasPersistentData: boolean) => {\n          if (!hasPersistentData) {\n            return <span />;\n          }\n\n          return (\n            <span>\n              <Icon type=\"check\" />\n            </span>\n          );\n        }\n      },\n      {\n        title: \"Exposed Webapp\",\n        dataIndex: \"notExposeAsWebApp\",\n        key: \"notExposeAsWebApp\",\n        align: ALIGN,\n        render: (notExposeAsWebApp: boolean) => {\n          if (!!notExposeAsWebApp) {\n            return <span />;\n          }\n\n          return (\n            <span>\n              <Icon type=\"check\" />\n            </span>\n          );\n        }\n      },\n      {\n        title: \"Instance Count\",\n        dataIndex: \"instanceCount\",\n        key: \"instanceCount\",\n        align: ALIGN\n      },\n      {\n        title: \"Open in Browser\",\n        dataIndex: \"notExposeAsWebApp\",\n        key: \"openInBrowser\",\n        align: ALIGN,\n        render: (notExposeAsWebApp: boolean, app: IAppDef) => {\n          if (notExposeAsWebApp) {\n            return <span />;\n          }\n\n          return (\n            <a\n              href={\n                \"http\" +\n                (app.hasDefaultSubDomainSsl ? \"s\" : \"\") +\n                \"://\" +\n                app.appName +\n                \".\" +\n                self.props.rootDomain\n              }\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Icon type=\"link\" />{\" \"}\n            </a>\n          );\n        }\n      }\n    ];\n  }\n\n  render() {\n    const self = this;\n\n    const appsToRender = self.props.apps.filter(app => {\n      if (!self.state.searchTerm) return true;\n\n      return app.appName!.indexOf(self.state.searchTerm) >= 0;\n    });\n\n    return (\n      <Row>\n        <Col span={18} offset={3} style={{ paddingBottom: 300 }}>\n          <Card\n            extra={\n              <Input\n                placeholder=\"Search by Name\"\n                type=\"text\"\n                onChange={event =>\n                  self.setState({\n                    searchTerm: (event.target.value || \"\").trim()\n                  })\n                }\n              />\n            }\n            title={\n              <span>\n                <Icon type=\"code\" />\n                &nbsp;&nbsp;&nbsp;Your Apps\n              </span>\n            }\n          >\n            <Row>\n              <Table<IAppDef>\n                rowKey=\"appName\"\n                columns={self.createColumns()}\n                dataSource={appsToRender}\n                pagination={false}\n                size=\"middle\"\n              />\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Card } from \"antd\";\nimport ApiComponent from \"../global/ApiComponent\";\nimport Toaster from \"../../utils/Toaster\";\nimport Search from \"antd/lib/input/Search\";\nimport CenteredSpinner from \"../global/CenteredSpinner\";\nimport CreateNewApp from \"./CreateNewApp\";\nimport AppsTable from \"./AppsTable\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport default class Apps extends ApiComponent<\n  RouteComponentProps<any>,\n  { isLoading: boolean; apiData: any }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      apiData: undefined\n    };\n  }\n\n  onCreateOneClickAppClicked() {\n    this.props.history.push(`/apps/oneclick/`);\n  }\n\n  onCreateNewAppClicked(appName: string, hasPersistentData: boolean) {\n    const self = this;\n\n    Promise.resolve() //\n      .then(function() {\n        self.setState({ isLoading: true });\n        return self.apiManager.registerNewApp(appName, hasPersistentData);\n      })\n      .then(function(data) {\n        self.reFetchData();\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  render() {\n    const self = this;\n\n    if (self.state.isLoading) {\n      return <CenteredSpinner />;\n    }\n\n    return (\n      <div>\n        <CreateNewApp\n          onCreateNewAppClicked={(appName: string, hasPersistency: boolean) => {\n            self.onCreateNewAppClicked(appName, hasPersistency);\n          }}\n          onCreateOneClickAppClicked={() => {\n            self.onCreateOneClickAppClicked();\n          }}\n        />\n        <div style={{ height: 25 }} />\n        {self.state.apiData.appDefinitions.length > 0 ? (\n          <AppsTable\n            history={this.props.history}\n            defaultNginxConfig={this.state.apiData.defaultNginxConfig}\n            apps={this.state.apiData.appDefinitions}\n            rootDomain={this.state.apiData.rootDomain}\n          />\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.reFetchData();\n  }\n\n  reFetchData() {\n    const self = this;\n    self.setState({ isLoading: true });\n    this.apiManager\n      .getAllApps()\n      .then(function(data: any) {\n        self.setState({ isLoading: false, apiData: data });\n      })\n      .catch(Toaster.createCatcher());\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  message,\n  Row,\n  Button,\n  Input,\n  Col,\n  Icon,\n  Tooltip,\n  Checkbox\n} from \"antd\";\nimport Toaster from \"../../../utils/Toaster\";\nimport Utils from \"../../../utils/Utils\";\nimport { AppDetailsTabProps } from \"./AppDetails\";\n\nconst Search = Input.Search;\n\nexport default class HttpSettings extends Component<\n  AppDetailsTabProps,\n  { dummyVar: undefined }\n> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    return <div>{this.createHttpSettingsContent()}</div>;\n  }\n\n  reFetchData() {\n    this.props.reFetchData();\n  }\n\n  enableDefaultHttps() {\n    const self = this;\n    this.props.setLoading(true);\n\n    return Promise.resolve()\n      .then(function() {\n        return self.props.apiManager.enableSslForBaseDomain(\n          self.props.apiData!.appDefinition.appName!\n        );\n      })\n      .then(function() {\n        message.success(\"HTTPS is now enabled for your app\");\n      })\n      .then(function() {\n        self.reFetchData();\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  onConnectNewDomainClicked(newDomain: string) {\n    const self = this;\n    this.props.setLoading(true);\n\n    return Promise.resolve()\n      .then(function() {\n        return self.props.apiManager.attachNewCustomDomainToApp(\n          self.props.apiData!.appDefinition.appName!,\n          newDomain\n        );\n      })\n      .then(function() {\n        message.success(\"New domain is now successfully connected!\");\n      })\n      .then(function() {\n        self.reFetchData();\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  onEnableCustomDomainSslClicked(customDomain: string) {\n    const self = this;\n    this.props.setLoading(true);\n\n    return Promise.resolve()\n      .then(function() {\n        return self.props.apiManager.enableSslForCustomDomain(\n          self.props.apiData!.appDefinition.appName!,\n          customDomain\n        );\n      })\n      .then(function() {\n        message.success(\"HTTPS is successfully activated for your domain!\");\n      })\n      .then(function() {\n        self.reFetchData();\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  onRemoveCustomDomainClicked(customDomain: string) {\n    const self = this;\n    this.props.setLoading(true);\n\n    return Promise.resolve()\n      .then(function() {\n        return self.props.apiManager.removeCustomDomain(\n          self.props.apiData!.appDefinition.appName!,\n          customDomain\n        );\n      })\n      .then(function() {\n        message.success(\"Your custom domain is successfully removed!\");\n      })\n      .then(function() {\n        self.reFetchData();\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  createCustomDomainRows() {\n    const customDomains = this.props.apiData!.appDefinition.customDomain || [];\n\n    const rows: JSX.Element[] = [];\n    customDomains.forEach(c => {\n      const row = (\n        <Row key={c.publicDomain} style={{ marginTop: 15 }}>\n          <Button.Group size=\"small\">\n            <Tooltip\n              title={\n                c.hasSsl\n                  ? \"Already activated\"\n                  : \"Click to activate HTTPS for this domain\"\n              }\n            >\n              <Button\n                disabled={c.hasSsl}\n                onClick={() => {\n                  this.onEnableCustomDomainSslClicked(c.publicDomain);\n                }}\n                type=\"primary\"\n              >\n                Enable HTTPS\n              </Button>\n            </Tooltip>\n            <Button\n              style={{ marginRight: 20 }}\n              onClick={() => {\n                this.onRemoveCustomDomainClicked(c.publicDomain);\n              }}\n            >\n              Remove\n            </Button>\n          </Button.Group>\n\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={\"http://\" + c.publicDomain}\n          >\n            {c.publicDomain}\n          </a>\n        </Row>\n      );\n      rows.push(row);\n    });\n\n    return rows;\n  }\n\n  onEditDefaultNginxConfigClicked() {\n    const newApiData = Utils.copyObject(this.props.apiData!);\n    newApiData.appDefinition.customNginxConfig = this.props.apiData!.defaultNginxConfig;\n    this.props.updateApiData(newApiData);\n  }\n\n  createCustomNginx() {\n    const customNginxConfig = this.props.apiData!.appDefinition\n      .customNginxConfig!;\n    if (!customNginxConfig) {\n      return (\n        <div>\n          <Button\n            type=\"default\"\n            onClick={() => this.onEditDefaultNginxConfigClicked()}\n          >\n            Edit Default Nginx Configurations\n          </Button>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <p>\n          Note that templates are build using EJS template pattern. Do not\n          change the areas between &lt;&percnt; and &percnt;&gt; unless you\n          really know what you're doing! To revert to default, simply remove all\n          the content.\n        </p>\n        <Input.TextArea\n          style={{\n            fontFamily: \"monospace\"\n          }}\n          onChange={e => {\n            const newApiData = Utils.copyObject(this.props.apiData!);\n            newApiData.appDefinition.customNginxConfig = e.target.value;\n            this.props.updateApiData(newApiData);\n          }}\n          rows={17}\n          defaultValue={customNginxConfig}\n        />\n      </div>\n    );\n  }\n\n  createHttpDetailsSettingsContent() {\n    const app = this.props.apiData!.appDefinition;\n    const rootDomain = this.props.apiData!.rootDomain;\n\n    return (\n      <div>\n        <Row>\n          <p>Your app is available to public at:</p>\n          <Tooltip\n            title={\n              app.hasDefaultSubDomainSsl\n                ? \"Already activated\"\n                : \"Click to activate HTTPS for this domain\"\n            }\n          >\n            <Button\n              disabled={app.hasDefaultSubDomainSsl}\n              style={{ marginRight: 20 }}\n              onClick={() => {\n                this.enableDefaultHttps();\n              }}\n              type=\"primary\"\n              size=\"small\"\n            >\n              Enable HTTPS\n            </Button>\n          </Tooltip>\n          <a\n            href={\n              \"http\" +\n              (app.hasDefaultSubDomainSsl ? \"s\" : \"\") +\n              \"://\" +\n              app.appName +\n              \".\" +\n              rootDomain\n            }\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {\"http\" +\n              (app.hasDefaultSubDomainSsl ? \"s\" : \"\") +\n              \"://\" +\n              app.appName +\n              \".\" +\n              rootDomain}\n          </a>\n        </Row>\n        <br />\n        <hr />\n        <br />\n        <Row>\n          <Col span={15}>\n            <Search\n              placeholder=\"www.the-best-app-in-the-world.com\"\n              enterButton=\"Connect New Domain\"\n              onSearch={value => this.onConnectNewDomainClicked(value)}\n            />\n          </Col>\n          &nbsp;&nbsp;&nbsp;\n          <Tooltip title=\"Make sure the new domain points to this IP, otherwise verification will fail.\">\n            <span>\n              <Icon style={{ marginTop: 9 }} type=\"info-circle\" />\n            </span>\n          </Tooltip>\n        </Row>\n\n        <br />\n        {this.createCustomDomainRows()}\n        <br />\n        <br />\n        {this.createCustomNginx()}\n        <br />\n        <br />\n\n        <Row>\n          <Checkbox\n            onChange={(e: any) => {\n              const newApiData = Utils.copyObject(this.props.apiData!);\n              newApiData.appDefinition.forceSsl = !!e.target.checked;\n              this.props.updateApiData(newApiData);\n            }}\n          >\n            Enforce HTTPS by redirecting all HTTP traffic to HTTPS\n          </Checkbox>\n          <Tooltip title=\"Forcing HTTPS causes domains without HTTPS to malfunction. Make sure you enable HTTPS for the domain you want to use, before enabling Force HTTPS option.\">\n            <Icon type=\"info-circle\" />\n          </Tooltip>\n        </Row>\n      </div>\n    );\n  }\n\n  createHttpSettingsContent() {\n    const app = this.props.apiData!.appDefinition;\n    return (\n      <div>\n        <p>\n          Your app is internally available as{\" \"}\n          <code>srv-captain--{app.appName}</code> to other Captain apps. In case\n          of web-app, it is accessible via{\" \"}\n          <code>{\"http://srv-captain--\" + app.appName}</code> from other apps.\n        </p>\n        <br />\n\n        <Checkbox\n          defaultChecked={this.props.apiData!.appDefinition.notExposeAsWebApp}\n          onChange={(e: any) => {\n            const newApiData = Utils.copyObject(this.props.apiData!);\n            newApiData.appDefinition.notExposeAsWebApp = !!e.target.checked;\n            this.props.updateApiData(newApiData);\n          }}\n        >\n          Do not expose as web-app\n        </Checkbox>\n        <Tooltip title=\"Use this if you don't want your app be externally available.\">\n          <Icon type=\"info-circle\" />\n        </Tooltip>\n\n        <div style={{ height: 35 }} />\n        {app.notExposeAsWebApp ? (\n          <div />\n        ) : (\n          this.createHttpDetailsSettingsContent()\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  message,\n  Row,\n  Button,\n  Input,\n  Col,\n  Icon,\n  Tooltip,\n  Checkbox,\n  Switch\n} from \"antd\";\nimport Toaster from \"../../../utils/Toaster\";\nimport Utils from \"../../../utils/Utils\";\nimport { AppDetailsTabProps } from \"./AppDetails\";\nimport ClickableLink from \"../../global/ClickableLink\";\nimport { IAppEnvVar } from \"../AppDefinition\";\nimport { IHashMapGeneric } from \"../../../models/IHashMapGeneric\";\n\nconst Search = Input.Search;\n\nexport default class AppConfigs extends Component<\n  AppDetailsTabProps,\n  {\n    dummyVar: undefined;\n    envVarBulkEdit: boolean;\n    bulkVals: string;\n    forceEditableNodeId: boolean;\n    forceEditableInstanceCount: boolean;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      dummyVar: undefined,\n      forceEditableInstanceCount: false,\n      envVarBulkEdit: false,\n      bulkVals: \"\",\n      forceEditableNodeId: false\n    };\n  }\n\n  // Copied from https://github.com/motdotla/dotenv/blob/master/lib/main.js\n  parseEnvVars(src: string) {\n    const obj: IHashMapGeneric<string> = {};\n\n    // convert Buffers before splitting into lines and processing\n    src\n      .toString()\n      .split(\"\\n\")\n      .forEach(function(line, idx) {\n        // matching \"KEY' and 'VAL' in 'KEY=VAL'\n        const keyValueArr = line.match(/^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/);\n        // matched?\n        if (keyValueArr != null) {\n          const key = keyValueArr[1];\n\n          // default undefined or missing values to empty string\n          let value = keyValueArr[2] || \"\";\n\n          // expand newlines in quoted values\n          const len = value ? value.length : 0;\n          if (\n            len > 0 &&\n            value.charAt(0) === '\"' &&\n            value.charAt(len - 1) === '\"'\n          ) {\n            value = value.replace(/\\\\n/gm, \"\\n\");\n          }\n\n          // remove any surrounding quotes and extra spaces\n          value = value.replace(/(^['\"]|['\"]$)/g, \"\").trim();\n\n          obj[key] = value;\n        }\n      });\n\n    return obj;\n  }\n\n  convertEnvVarsToBulk(envVars: IAppEnvVar[]) {\n    return envVars\n      .map(e => {\n        let val = e.value;\n        if (val.indexOf(\"\\n\") >= 0) {\n          val = '\"' + val.split(\"\\n\").join(\"\\\\n\") + '\"';\n        }\n        return e.key + \"=\" + val;\n      })\n      .join(\"\\n\");\n  }\n\n  createEnvVarSection() {\n    const self = this;\n    const envVars = this.props.apiData.appDefinition.envVars || [];\n\n    if (self.state.envVarBulkEdit) {\n      return (\n        <div>\n          <Row style={{ paddingBottom: 12 }}>\n            <Col span={24}>\n              <Input.TextArea\n                className=\"code-input\"\n                placeholder={\"key1=value1\\nkey2=value2\"}\n                rows={7}\n                value={\n                  self.state.bulkVals\n                    ? self.state.bulkVals\n                    : self.convertEnvVarsToBulk(envVars)\n                }\n                onChange={e => {\n                  const newApiData = Utils.copyObject(self.props.apiData);\n                  const keyVals = self.parseEnvVars(e.target.value);\n                  const envVars: IAppEnvVar[] = [];\n                  Object.keys(keyVals).forEach(k => {\n                    envVars.push({ key: k, value: keyVals[k] });\n                  });\n                  newApiData.appDefinition.envVars = envVars;\n                  self.props.updateApiData(newApiData);\n                  self.setState({ bulkVals: e.target.value });\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n      );\n    }\n\n    const rows = envVars.map((value, index) => {\n      return (\n        <Row style={{ paddingBottom: 12 }} key={\"\" + index}>\n          <Col span={8}>\n            <Input\n              className=\"code-input\"\n              placeholder=\"key\"\n              value={value.key}\n              type=\"text\"\n              onChange={e => {\n                const newApiData = Utils.copyObject(self.props.apiData);\n                newApiData.appDefinition.envVars[index].key = e.target.value;\n                self.props.updateApiData(newApiData);\n              }}\n            />\n          </Col>\n          <Col style={{ paddingLeft: 12 }} span={16}>\n            <Input.TextArea\n              className=\"code-input\"\n              placeholder=\"value\"\n              rows={1}\n              value={value.value}\n              onChange={e => {\n                const newApiData = Utils.copyObject(self.props.apiData);\n                newApiData.appDefinition.envVars[index].value = e.target.value;\n                self.props.updateApiData(newApiData);\n              }}\n            />\n          </Col>\n        </Row>\n      );\n    });\n\n    return (\n      <div>\n        {rows}\n\n        <br />\n\n        <Button type=\"default\" onClick={() => self.addEnvVarClicked()}>\n          Add Key/Value Pair\n        </Button>\n      </div>\n    );\n  }\n\n  createPortRows() {\n    const self = this;\n    const ports = this.props.apiData.appDefinition.ports || [];\n    return ports.map((value, index) => {\n      return (\n        <Row style={{ paddingBottom: 12 }} key={\"\" + index}>\n          <Col span={12}>\n            <Tooltip title=\"Make sure the port is not already used!\">\n              <Input\n                addonBefore=\"Server Port\"\n                placeholder=\"5050\"\n                value={value.hostPort ? value.hostPort + \"\" : \"\"}\n                type=\"number\"\n                onChange={e => {\n                  const newApiData = Utils.copyObject(self.props.apiData);\n                  const p = Number(e.target.value.trim());\n                  newApiData.appDefinition.ports[index].hostPort =\n                    p > 0 ? p : 0; // to avoid NaN\n                  self.props.updateApiData(newApiData);\n                }}\n              />\n            </Tooltip>\n          </Col>\n          <Col style={{ paddingLeft: 12 }} span={12}>\n            <Input\n              addonBefore=\"Container Port\"\n              placeholder=\"6060\"\n              value={value.containerPort ? value.containerPort + \"\" : \"\"}\n              onChange={e => {\n                const newApiData = Utils.copyObject(self.props.apiData);\n                const p = Number(e.target.value.trim());\n                newApiData.appDefinition.ports[index].containerPort =\n                  p > 0 ? p : 0; // to avoid NaN\n                self.props.updateApiData(newApiData);\n              }}\n            />\n          </Col>\n        </Row>\n      );\n    });\n  }\n\n  createVolRows() {\n    const self = this;\n    const volumes = this.props.apiData.appDefinition.volumes || [];\n    return volumes.map((value, index) => {\n      return (\n        <Row style={{ paddingBottom: 12 }} key={\"\" + index}>\n          <Col span={8}>\n            <Input\n              addonBefore=\"Path in App\"\n              className=\"code-input\"\n              placeholder=\"/var/www/html\"\n              value={value.containerPath}\n              type=\"text\"\n              onChange={e => {\n                const newApiData = Utils.copyObject(self.props.apiData);\n                newApiData.appDefinition.volumes[index].containerPath =\n                  e.target.value;\n                self.props.updateApiData(newApiData);\n              }}\n            />\n          </Col>\n          <Col\n            style={{ paddingLeft: 12 }}\n            span={8}\n            className={value.hostPath ? \"hide-on-demand\" : \"\"}\n          >\n            <Input\n              addonBefore=\"Label\"\n              className=\"code-input\"\n              placeholder=\"some-name\"\n              value={value.volumeName}\n              onChange={e => {\n                const newApiData = Utils.copyObject(self.props.apiData);\n                newApiData.appDefinition.volumes[index].volumeName =\n                  e.target.value;\n                self.props.updateApiData(newApiData);\n              }}\n            />\n          </Col>\n\n          <Col\n            style={{ paddingLeft: 12 }}\n            span={8}\n            className={!value.hostPath ? \"hide-on-demand\" : \"\"}\n          >\n            <Tooltip title=\"IMPORTANT: Ensure Host Path exists before assigning it here\">\n              <Input\n                addonBefore=\"Path on Host\"\n                className=\"code-input\"\n                placeholder=\"/host/path/exists\"\n                value={value.hostPath}\n                onChange={e => {\n                  const newApiData = Utils.copyObject(self.props.apiData);\n                  newApiData.appDefinition.volumes[index].hostPath =\n                    e.target.value;\n                  self.props.updateApiData(newApiData);\n                }}\n              />\n            </Tooltip>\n          </Col>\n          <Col style={{ paddingLeft: 12 }} span={8}>\n            <Button\n              type=\"dashed\"\n              onClick={() => {\n                const newApiData = Utils.copyObject(self.props.apiData);\n                newApiData.appDefinition.volumes[index].hostPath = newApiData\n                  .appDefinition.volumes[index].hostPath\n                  ? \"\"\n                  : \"/\";\n                self.props.updateApiData(newApiData);\n              }}\n            >\n              {value.hostPath\n                ? \"Let Captain manage path\"\n                : \"Set specific host path\"}\n            </Button>\n          </Col>\n        </Row>\n      );\n    });\n  }\n\n  createVolSection() {\n    const self = this;\n    const app = this.props.apiData!.appDefinition;\n\n    if (!app.hasPersistentData) return <div />;\n\n    return (\n      <div>\n        <h4>\n          Persistent Directories &nbsp;\n          <a\n            href=\"https://captainduckduck.com/docs/app-configuration.html#persistent-or-not\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon type=\"info-circle\" />\n          </a>\n        </h4>\n        <div\n          className={\n            app.volumes && !!app.volumes.length ? \"hide-on-demand\" : \"\"\n          }\n        >\n          <i>Currently, this app does not have any persistent directories.</i>\n        </div>\n\n        {this.createVolRows()}\n        <br />\n        <Button type=\"default\" onClick={() => this.addVolumeClicked()}>\n          Add Persistent Directory\n        </Button>\n        <br />\n        <br />\n        <br />\n\n        <Row>\n          <Col span={6} style={{ width: 300 }}>\n            <Tooltip title=\"Leave empty for automatic placement\">\n              <Input\n                addonBefore=\"Node ID\"\n                className=\"code-input\"\n                value={app.nodeId ? app.nodeId : \"\"}\n                disabled={!this.state.forceEditableNodeId}\n                onChange={e => {\n                  const newApiData = Utils.copyObject(self.props.apiData);\n                  newApiData.appDefinition.nodeId = e.target.value;\n                  self.props.updateApiData(newApiData);\n                }}\n              />\n            </Tooltip>\n          </Col>\n          <Col span={12} style={{ paddingLeft: 24 }}>\n            <Tooltip title=\"WARNING: Changing Node ID causes the content of your persistent directories to be deleted!\">\n              <Button\n                type=\"default\"\n                disabled={this.state.forceEditableNodeId}\n                onClick={() => this.setState({ forceEditableNodeId: true })}\n              >\n                Edit\n              </Button>\n            </Tooltip>\n          </Col>\n        </Row>\n\n        <br />\n        <br />\n      </div>\n    );\n  }\n\n  render() {\n    const self = this;\n    const app = this.props.apiData!.appDefinition;\n    return (\n      <div>\n        <h4>Environmental Variables:</h4>\n        <Row align=\"middle\" justify=\"end\" type=\"flex\">\n          <h5>\n            Bulk Edit&nbsp;{\" \"}\n            <Switch\n              onChange={val => {\n                self.setState({ envVarBulkEdit: val, bulkVals: \"\" });\n              }}\n            />\n          </h5>\n        </Row>\n        <div\n          className={\n            app.envVars && !!app.envVars.length ? \"hide-on-demand\" : \"\"\n          }\n        >\n          <i>\n            Currently, this app does not have any custom environmental variables\n            yet.\n          </i>\n        </div>\n\n        {this.createEnvVarSection()}\n\n        <br />\n        <br />\n        <br />\n\n        <h4>\n          Port Mapping &nbsp;\n          <a\n            href=\"https://captainduckduck.com/docs/app-configuration.html#port-mapping\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon type=\"info-circle\" />\n          </a>\n        </h4>\n        <div\n          className={app.ports && !!app.ports.length ? \"hide-on-demand\" : \"\"}\n        >\n          <i>Currently, this app does not have any custom port mapping.</i>\n        </div>\n\n        {this.createPortRows()}\n\n        <br />\n\n        <Button type=\"default\" onClick={() => this.addPortMappingClicked()}>\n          Add Port Mapping\n        </Button>\n        <br />\n        <br />\n        <br />\n        {this.createVolSection()}\n        <br />\n        <Row>\n          <Col span={6} style={{ width: 300 }}>\n            <Tooltip title=\"Number of running instances of this app\">\n              <Input\n                addonBefore=\"Instance Count\"\n                type=\"number\"\n                defaultValue={app.instanceCount + \"\"}\n                disabled={\n                  app.hasPersistentData &&\n                  !this.state.forceEditableInstanceCount\n                }\n                onChange={e => {\n                  const newApiData = Utils.copyObject(this.props.apiData);\n                  newApiData.appDefinition.instanceCount = Number(\n                    e.target.value\n                  );\n                  this.props.updateApiData(newApiData);\n                }}\n              />\n            </Tooltip>\n          </Col>\n          <Col span={6}>\n            <div\n              style={{ paddingLeft: 24 }}\n              className={!app.hasPersistentData ? \"hide-on-demand\" : \"\"}\n            >\n              <Tooltip title=\"Multiple instances of apps with persistent data can be very dangerous and bug prone as they can be accessing the same file on the disk resulting in data corruption. Edit the instance count only if you understand the risk.\">\n                <Button\n                  type=\"default\"\n                  disabled={this.state.forceEditableInstanceCount}\n                  onClick={() =>\n                    this.setState({ forceEditableInstanceCount: true })\n                  }\n                >\n                  Edit\n                </Button>\n              </Tooltip>\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <br />\n          <br />\n          <br />\n          <h4>\n            Pre-Deploy Script\n            <a\n              style={{ paddingLeft: 10 }}\n              href=\"https://captainduckduck.com/docs/pre-deploy-script.html\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Icon type=\"info-circle\" />\n            </a>\n          </h4>\n\n          <Input.TextArea\n            spellCheck={false}\n            autoCorrect=\"off\"\n            autoComplete=\"off\"\n            autoCapitalize=\"off\"\n            className=\"code-input\"\n            placeholder=\"var preDeployFunction = function (captainAppObj, dockerUpdateObject) ...\"\n            rows={4}\n            value={app.preDeployFunction ? app.preDeployFunction : \"\"}\n            onChange={e => {\n              const newApiData = Utils.copyObject(this.props.apiData);\n              newApiData.appDefinition.preDeployFunction = e.target.value;\n              this.props.updateApiData(newApiData);\n            }}\n          />\n        </Row>\n      </div>\n    );\n  }\n\n  addPortMappingClicked() {\n    const newApiData = Utils.copyObject(this.props.apiData);\n    newApiData.appDefinition.ports = newApiData.appDefinition.ports || [];\n    newApiData.appDefinition.ports.push({\n      containerPort: 0,\n      hostPort: 0\n    });\n    this.props.updateApiData(newApiData);\n  }\n\n  addEnvVarClicked() {\n    const newApiData = Utils.copyObject(this.props.apiData);\n    newApiData.appDefinition.envVars = newApiData.appDefinition.envVars || [];\n    newApiData.appDefinition.envVars.push({\n      key: \"\",\n      value: \"\"\n    });\n    this.props.updateApiData(newApiData);\n  }\n\n  addVolumeClicked() {\n    const newApiData = Utils.copyObject(this.props.apiData);\n    newApiData.appDefinition.volumes = newApiData.appDefinition.volumes || [];\n    newApiData.appDefinition.volumes.push({\n      containerPath: \"\",\n      volumeName: \"\"\n    });\n    this.props.updateApiData(newApiData);\n  }\n\n  reFetchData() {\n    this.props.reFetchData();\n  }\n}\n","import React, { Component } from \"react\";\nimport ApiComponent from \"../../../global/ApiComponent\";\nimport Toaster from \"../../../../utils/Toaster\";\nimport ClickableLink from \"../../../global/ClickableLink\";\nimport { Input, Icon, Alert, Row, Spin } from \"antd\";\n\nexport default class BuildLogsView extends ApiComponent<\n  {\n    appName: string;\n    buildLogRecreationId: string;\n  },\n  {\n    isAppBuilding: boolean;\n    expandedLogs: boolean;\n    buildLogs: string;\n    lastLineNumberPrinted: number;\n  }\n> {\n  private fetchBuildLogsInterval: any;\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isAppBuilding: false,\n      expandedLogs: !!this.props.buildLogRecreationId,\n      buildLogs: \"\",\n      lastLineNumberPrinted: -10000\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.fetchBuildLogsInterval) {\n      clearInterval(this.fetchBuildLogsInterval);\n    }\n  }\n\n  fetchBuildLogs() {\n    const self = this;\n    this.apiManager\n      .fetchBuildLogs(this.props.appName)\n      .then(function(logInfo) {\n        self.setState({ isAppBuilding: logInfo.isAppBuilding });\n        if (logInfo.isAppBuilding) {\n          // forcefully expanding the view such that when building finishes it doesn't collapses automatically\n          self.setState({ expandedLogs: true });\n        }\n\n        let lines = logInfo.logs.lines;\n        let firstLineNumberOfLogs = logInfo.logs.firstLineNumber;\n        let firstLinesToPrint = 0;\n        if (firstLineNumberOfLogs > self.state.lastLineNumberPrinted) {\n          if (firstLineNumberOfLogs < 0) {\n            // This is the very first fetch, probably firstLineNumberOfLogs is around -50\n            firstLinesToPrint = -firstLineNumberOfLogs;\n          } else {\n            self.setState({\n              buildLogs: self.state.buildLogs + \"[[ TRUNCATED ]]\\n\"\n            });\n          }\n        } else {\n          firstLinesToPrint =\n            self.state.lastLineNumberPrinted - firstLineNumberOfLogs;\n        }\n\n        self.setState({\n          lastLineNumberPrinted: firstLineNumberOfLogs + lines.length\n        });\n\n        let lineAdded = false;\n\n        let buildLogs = self.state.buildLogs;\n        for (let i = firstLinesToPrint; i < lines.length; i++) {\n          buildLogs += (lines[i] || \"\").trim() + \"\\n\";\n\n          lineAdded = true;\n        }\n        self.setState({ buildLogs: buildLogs });\n\n        if (lineAdded) {\n          setTimeout(function() {\n            let textarea = document.getElementById(\"buildlog-text-id\");\n            if (textarea) textarea.scrollTop = textarea.scrollHeight;\n          }, 100);\n        }\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  componentDidMount() {\n    const self = this;\n    this.fetchBuildLogs();\n    this.fetchBuildLogsInterval = setInterval(function() {\n      self.fetchBuildLogs();\n    }, 2000);\n  }\n\n  onExpandLogClicked() {\n    this.setState({ expandedLogs: !this.state.expandedLogs });\n  }\n\n  render() {\n    const self = this;\n    return (\n      <div>\n        <Row>\n          <div className={this.state.isAppBuilding ? \"\" : \"hide-on-demand\"}>\n            <Alert\n              message={\n                <span>\n                  &nbsp;&nbsp;\n                  <Spin\n                    indicator={\n                      <Icon type=\"loading\" style={{ fontSize: 24 }} spin />\n                    }\n                    size=\"default\"\n                  />\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Building the image. This\n                  might take a few minutes...\n                </span>\n              }\n              type=\"info\"\n            />\n          </div>\n        </Row>\n\n        <div style={{ height: 20 }} />\n\n        <div>\n          <div>\n            <ClickableLink\n              onLinkClicked={() => {\n                self.onExpandLogClicked();\n              }}\n            >\n              <h4 className=\"unselectable-span\">\n                <Icon\n                  type={!this.state.expandedLogs ? \"down-circle\" : \"up-circle\"}\n                />\n                &nbsp;&nbsp;\n                {!this.state.expandedLogs ? \"View\" : \"Hide\"} Build Logs\n              </h4>\n            </ClickableLink>\n          </div>\n\n          <div\n            className={\n              this.state.isAppBuilding || this.state.expandedLogs\n                ? \"\"\n                : \"hide-on-demand\"\n            }\n            style={{ padding: 5 }}\n          >\n            <div\n              id=\"buildlog-text-id\"\n              style={{\n                overflow: \"scroll\",\n                height: 250,\n                border: \"2px solid #cccccc\",\n                backgroundColor: \"#f6f6f6\",\n                borderRadius: 5,\n                padding: 10,\n                fontSize: \"90%\"\n              }}\n            >\n              <pre>{self.state.buildLogs}</pre>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ApiComponent from \"../../../global/ApiComponent\";\nimport { Upload, Col, Row, Icon, message, Button } from \"antd\";\nimport { UploadFile, UploadChangeParam } from \"antd/lib/upload/interface\";\nimport Toaster from \"../../../../utils/Toaster\";\n\nexport default class TarUploader extends ApiComponent<\n  {\n    appName: string;\n    onUploadSucceeded: () => void;\n  },\n  {\n    fileToBeUploaded: UploadFile | undefined;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      fileToBeUploaded: undefined\n    };\n  }\n\n  beforeUpload = (file: File) => {\n    // We handle upload manually :)\n    return false;\n  };\n\n  handleChange = (info: UploadChangeParam) => {\n    if (info.fileList.length > 1) {\n      message.error(\n        \"You can only upload one TAR file! Remove the currently selected file first.\"\n      );\n      return;\n    }\n\n    if (info.fileList.length === 0) {\n      this.setState({ fileToBeUploaded: undefined });\n      message.info(\"File removed\");\n      return;\n    }\n\n    let file = info.fileList[0];\n\n    if (file.name.indexOf(\".tar\") < 0) {\n      message.error(\"You can only upload a TAR file!\");\n      return;\n    }\n\n    this.setState({ fileToBeUploaded: file });\n  };\n\n  startUploadAndDeploy() {\n    const self = this;\n\n    Promise.resolve()\n      .then(function() {\n        return self.apiManager.uploadAppData(\n          self.props.appName,\n          self.state.fileToBeUploaded!.originFileObj!\n        );\n      })\n      .then(function() {\n        self.props.onUploadSucceeded();\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  render() {\n    return (\n      <div>\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={12}>\n            <Upload.Dragger\n              name=\"files\"\n              accept=\"*/*\"\n              multiple={false}\n              fileList={\n                this.state.fileToBeUploaded\n                  ? [this.state.fileToBeUploaded]\n                  : undefined\n              }\n              listType=\"text\"\n              onChange={this.handleChange}\n              beforeUpload={this.beforeUpload}\n              action=\"//\" // this is unused as beforeUpload always returns false\n            >\n              <p className=\"ant-upload-drag-icon\">\n                <Icon type=\"inbox\" />\n              </p>\n              <p className=\"ant-upload-text\">\n                Click or drag TAR file to this area to upload\n              </p>\n              <p className=\"ant-upload-hint\">\n                Must contain <code>captain-definition</code> file.\n              </p>\n            </Upload.Dragger>\n          </Col>\n        </Row>\n\n        <Row type=\"flex\" justify=\"center\">\n          <Button\n            style={{ marginTop: 40 }}\n            disabled={!this.state.fileToBeUploaded}\n            onClick={() => this.startUploadAndDeploy()}\n            type=\"primary\"\n            size=\"large\"\n          >\n            Upload &amp; Deploy\n          </Button>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Form, Input } from \"antd\";\nimport { RepoInfo } from \"../../AppDefinition\";\nimport Utils from \"../../../../utils/Utils\";\n\nexport default class GitRepoForm extends Component<{\n  gitRepoValues: RepoInfo;\n  updateRepoInfo: (newRepoInfo: RepoInfo) => void;\n}> {\n  render() {\n    return (\n      <div>\n        <form action=\"/\" autoComplete=\"off\">\n          <Row gutter={20}>\n            <Col span={12}>\n              <Input\n                style={{ marginBottom: 20 }}\n                value={this.props.gitRepoValues.repo}\n                addonBefore=\"Repository\"\n                placeholder=\"github.com/someone/something\"\n                type=\"url\"\n                spellCheck={false}\n                autoCorrect=\"off\"\n                autoComplete=\"off\"\n                autoCapitalize=\"off\"\n                onChange={e => {\n                  const newObj = Utils.copyObject(this.props.gitRepoValues);\n                  newObj.repo = e.target.value;\n                  this.props.updateRepoInfo(newObj);\n                }}\n              />\n            </Col>\n            <Col span={12}>\n              <Input\n                style={{ marginBottom: 20 }}\n                value={this.props.gitRepoValues.branch}\n                addonBefore={<span>Branch&nbsp;&nbsp;&nbsp;&nbsp;</span>}\n                placeholder=\"master\"\n                type=\"text\"\n                spellCheck={false}\n                autoCorrect=\"off\"\n                autoComplete=\"off\"\n                autoCapitalize=\"off\"\n                onChange={e => {\n                  const newObj = Utils.copyObject(this.props.gitRepoValues);\n                  newObj.branch = e.target.value;\n                  this.props.updateRepoInfo(newObj);\n                }}\n              />\n            </Col>\n            <Col span={12}>\n              <Input\n                style={{ marginBottom: 20 }}\n                value={this.props.gitRepoValues.user}\n                addonBefore={<span>Username&nbsp;</span>}\n                placeholder=\"myemail@gmail.com\"\n                type=\"email\"\n                onChange={e => {\n                  const newObj = Utils.copyObject(this.props.gitRepoValues);\n                  newObj.user = e.target.value;\n                  this.props.updateRepoInfo(newObj);\n                }}\n              />\n            </Col>\n            <Col span={12}>\n              <Input\n                style={{ marginBottom: 20 }}\n                value={this.props.gitRepoValues.password}\n                addonBefore=\"Password\"\n                placeholder=\"githubpassword\"\n                spellCheck={false}\n                autoCorrect=\"off\"\n                autoComplete=\"off\"\n                autoCapitalize=\"off\"\n                type=\"text\"\n                onChange={e => {\n                  const newObj = Utils.copyObject(this.props.gitRepoValues);\n                  newObj.password = e.target.value;\n                  this.props.updateRepoInfo(newObj);\n                }}\n              />\n            </Col>\n          </Row>\n        </form>\n      </div>\n    );\n  }\n}\n","function scrollToFixedFromTop(fromTopPx: number, el: HTMLElement) {\n  window.scrollTo(0, fromTopPx);\n  el.scrollTo({\n    top: fromTopPx,\n    behavior: \"smooth\"\n  });\n}\n\nexport default {\n  scrollToTopBar(delay?: number) {\n    const el = document.getElementById(\"main-content-layout\");\n    const currScroll = el ? el.scrollTop : 0;\n    if (currScroll <= 120) return;\n\n    if (!delay) {\n      scrollToFixedFromTop(0, el!);\n      return;\n    }\n\n    setTimeout(() => {\n      scrollToFixedFromTop(0, el!);\n    }, delay);\n  },\n  scrollToThebottom(delay: number) {\n    if (!delay) {\n      window.scrollTo(0, document.body.scrollHeight);\n      return;\n    }\n\n    setTimeout(() => {\n      window.scrollTo(0, document.body.scrollHeight);\n    }, delay);\n  }\n};\n","import UploaderPlainTextBase from \"./UploaderPlainTextBase\";\n\nexport default class UploaderPlainTextCaptainDefinition extends UploaderPlainTextBase {\n  protected getPlaceHolderValue() {\n    return `{\n    \"schemaVersion\" :2 ,\n    \"imageName\" : \"mysql:5.7\n}`;\n  }\n\n  protected convertDataToCaptainDefinition(userEnteredValue: string) {\n    return userEnteredValue.trim();\n  }\n}\n","import React, { Component } from \"react\";\nimport ApiComponent from \"../../../global/ApiComponent\";\nimport { Row, Input, Button, message } from \"antd\";\nimport Toaster from \"../../../../utils/Toaster\";\n\nexport default abstract class UploaderPlainTextBase extends ApiComponent<\n  {\n    appName: string;\n    onUploadSucceeded: () => void;\n  },\n  {\n    userEnteredValue: string;\n    uploadInProcess: boolean;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      userEnteredValue: \"\",\n      uploadInProcess: false\n    };\n  }\n\n  protected abstract getPlaceHolderValue(): string;\n\n  protected abstract convertDataToCaptainDefinition(\n    userEnteredValue: string\n  ): string;\n\n  startDeploy(captainDefinitionToBeUploaded: string) {\n    const self = this;\n\n    Promise.resolve() //\n      .then(function() {\n        self.setState({ uploadInProcess: true });\n        return self.apiManager.uploadCaptainDefinitionContent(\n          self.props.appName,\n          JSON.parse(captainDefinitionToBeUploaded),\n          true\n        );\n      })\n      .then(function() {\n        self.setState({ userEnteredValue: \"\" });\n        self.props.onUploadSucceeded();\n      })\n      .catch(Toaster.createCatcher())\n      .then(function() {\n        self.setState({ uploadInProcess: false });\n      });\n  }\n\n  render() {\n    const self = this;\n    return (\n      <div style={{ padding: 16 }}>\n        <Row>\n          <Input.TextArea\n            className=\"code-input\"\n            placeholder={self.getPlaceHolderValue()}\n            rows={7}\n            value={self.state.userEnteredValue}\n            onChange={e => {\n              self.setState({\n                userEnteredValue: e.target.value\n              });\n            }}\n          />\n        </Row>\n        <div style={{ height: 20 }} />\n        <Row type=\"flex\" justify=\"end\">\n          <Button\n            disabled={\n              self.state.uploadInProcess || !self.state.userEnteredValue.trim()\n            }\n            type=\"primary\"\n            onClick={() =>\n              self.startDeploy(\n                self.convertDataToCaptainDefinition(self.state.userEnteredValue)\n              )\n            }\n          >\n            Deploy Now\n          </Button>\n        </Row>\n      </div>\n    );\n  }\n}\n","import UploaderPlainTextCaptainDefinition from \"./UploaderPlainTextCaptainDefinition\";\nimport { ICaptainDefinition } from \"../../../../models/ICaptainDefinition\";\n\nexport default class UploaderPlainTextDockerfile extends UploaderPlainTextCaptainDefinition {\n  protected getPlaceHolderValue() {\n    return `# Derived from official mysql image (our base image)\nFROM mysql:5.7\n# Add a database\nENV MYSQL_DATABASE company`;\n  }\n\n  protected convertDataToCaptainDefinition(userEnteredValue: string) {\n    const capDefinition: ICaptainDefinition = {\n      schemaVersion: 2,\n      dockerfileLines: userEnteredValue.trim().split(\"\\n\")\n    };\n\n    return JSON.stringify(capDefinition);\n  }\n}\n","import React, { Component } from \"react\";\nimport { AppDetailsTabProps } from \"../AppDetails\";\nimport BuildLogsView from \"./BuildLogsView\";\nimport { Col, Row, Upload, Input, message, Icon, Button } from \"antd\";\nimport TarUploader from \"./TarUploader\";\nimport GitRepoForm from \"./GitRepoForm\";\nimport { RepoInfo } from \"../../AppDefinition\";\nimport Utils from \"../../../../utils/Utils\";\nimport DomUtils from \"../../../../utils/DomUtils\";\nimport UploaderPlainTextCaptainDefinition from \"./UploaderPlainTextCaptainDefinition\";\nimport UploaderPlainTextDockerfile from \"./UploaderPlainTextDockerfile\";\n\ninterface IDeploymentTabProps extends AppDetailsTabProps {\n  onUpdateConfigAndSave: () => void;\n}\nexport default class Deployment extends Component<\n  IDeploymentTabProps,\n  {\n    dummyVar: undefined;\n    buildLogRecreationId: string;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      dummyVar: undefined,\n      buildLogRecreationId: \"\"\n    };\n  }\n\n  onUploadSuccess() {\n    message.info(\"Build has started\");\n    this.setState({ buildLogRecreationId: \"\" + new Date().getTime() });\n    DomUtils.scrollToTopBar();\n  }\n\n  render() {\n    const self = this;\n    const app = this.props.apiData.appDefinition;\n    const hasPushToken =\n      app.appPushWebhook && app.appPushWebhook.pushWebhookToken;\n    const repoInfo = app.appPushWebhook\n      ? app.appPushWebhook.repoInfo\n      : {\n          user: \"\",\n          password: \"\",\n          branch: \"\",\n          repo: \"\"\n        };\n    return (\n      <div>\n        <BuildLogsView\n          appName={app.appName!}\n          buildLogRecreationId={self.state.buildLogRecreationId}\n          key={app.appName! + \"-\" + self.state.buildLogRecreationId}\n        />\n        <div style={{ height: 20 }} />\n        <hr />\n        <div style={{ height: 20 }} />\n        <div>\n          <p>\n            <b>Current Version: </b>\n            {app.deployedVersion}\n            <br />\n            <b>Git Commit Hash: </b>{\" \"}\n            {app.versions[app.deployedVersion].gitHash || \"n/a\"}\n            <br />\n            <b>Deployed at</b>{\" \"}\n            {new Date(\n              app.versions[app.deployedVersion].timeStamp\n            ).toLocaleString()}\n            <br />\n          </p>\n        </div>\n\n        <p>\n          Make sure that you have a 'captain-definition' file in your project.\n          See{\" \"}\n          <a\n            href=\"https://captainduckduck.com/docs/captain-definition-file.html\"\n            target=\"_blank\"\n          >\n            docs\n          </a>{\" \"}\n          for more details.\n        </p>\n        <div style={{ height: 20 }} />\n        <h4>\n          <Icon type=\"code\" /> Method 1: Official CLI\n        </h4>\n        <p>\n          Use CLI deploy command. This is the easiest method as it only requires\n          a simply command like <code>captainduckduck deploy</code>. Read more\n          about it in the{\" \"}\n          <a\n            href=\"https://captainduckduck.com/docs/get-started.html#step-4-deploy-the-test-app\"\n            target=\"_blank\"\n          >\n            docs\n          </a>\n        </p>\n        <div style={{ height: 20 }} />\n        <h4>\n          <Icon type=\"code\" /> Method 2: Tarball\n        </h4>\n        <p>\n          You can simply create a tarball (<code>.tar</code>) of your project\n          and upload it here via upload button.\n        </p>\n\n        <TarUploader\n          onUploadSucceeded={() => self.onUploadSuccess()}\n          appName={app.appName!}\n        />\n\n        <div style={{ height: 40 }} />\n        <h4>\n          <Icon type=\"code\" /> Method 3: Deploy from Github/Bitbucket/Gitlab\n        </h4>\n        <p>\n          Enter your repository information in the form and save. Then copy the\n          URL in the box as a webhook on Github, Bitbucket, Gitlab and etc. Once\n          you push a commit, CaptainDuckDuck starts a new build.\n          <br />\n        </p>\n        <Row>\n          <Input\n            onFocus={e => {\n              if (hasPushToken) {\n                e.target.select();\n                document.execCommand(\"copy\");\n                message.info(\"Copied to clipboard!\");\n              }\n            }}\n            className=\"code-input\"\n            readOnly={true}\n            disabled={!hasPushToken}\n            defaultValue={\n              hasPushToken\n                ? window.location.protocol +\n                  \"//captain.\" +\n                  this.props.apiData.rootDomain +\n                  \"/api/v1/user/webhooks/triggerbuild?namespace=captain&token=\" +\n                  app.appPushWebhook!.pushWebhookToken\n                : \"** Add repo info and save for this webhook to appear **\"\n            }\n          />\n        </Row>\n        <br />\n        <GitRepoForm\n          gitRepoValues={repoInfo}\n          updateRepoInfo={newRepo => {\n            console.log(newRepo);\n            const newApiData = Utils.copyObject(this.props.apiData);\n            if (newApiData.appDefinition.appPushWebhook) {\n              newApiData.appDefinition.appPushWebhook.repoInfo = Utils.copyObject(\n                newRepo\n              );\n            } else {\n              newApiData.appDefinition.appPushWebhook = {\n                repoInfo: Utils.copyObject(newRepo)\n              };\n            }\n            this.props.updateApiData(newApiData);\n          }}\n        />\n        <Row type=\"flex\" justify=\"end\">\n          <Button\n            disabled={!repoInfo.repo}\n            type=\"primary\"\n            onClick={() => self.props.onUpdateConfigAndSave()}\n          >\n            Save &amp; Update\n          </Button>\n        </Row>\n        <div style={{ height: 20 }} />\n        <h4>\n          <Icon type=\"code\" /> Method 4: Deploy plain Dockerfile\n        </h4>\n        <UploaderPlainTextDockerfile\n          appName={app.appName!}\n          onUploadSucceeded={() => self.onUploadSuccess()}\n        />\n        <div style={{ height: 20 }} />\n        <h4>\n          <Icon type=\"code\" /> Method 5: Deploy captain-definition file\n        </h4>\n        <UploaderPlainTextCaptainDefinition\n          appName={app.appName!}\n          onUploadSucceeded={() => self.onUploadSuccess()}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component, RefObject } from \"react\";\nimport {\n  message,\n  Row,\n  Col,\n  Card,\n  Icon,\n  Tooltip,\n  Tabs,\n  Checkbox,\n  Button,\n  Input,\n  Affix,\n  Modal\n} from \"antd\";\nimport ApiComponent from \"../../global/ApiComponent\";\nimport Toaster from \"../../../utils/Toaster\";\nimport CenteredSpinner from \"../../global/CenteredSpinner\";\nimport { RouteComponentProps } from \"react-router\";\nimport { IAppDef } from \"../AppDefinition\";\nimport ClickableLink from \"../../global/ClickableLink\";\nimport HttpSettings from \"./HttpSettings\";\nimport ApiManager from \"../../../api/ApiManager\";\nimport AppConfigs from \"./AppConfigs\";\nimport Deployment from \"./deploy/Deployment\";\nimport Utils from \"../../../utils/Utils\";\nconst TabPane = Tabs.TabPane;\n\nconst WEB_SETTINGS = \"WEB_SETTINGS\";\nconst APP_CONFIGS = \"APP_CONFIGS\";\nconst DEPLOYMENT = \"DEPLOYMENT\";\n\nexport interface SingleAppApiData {\n  appDefinition: IAppDef;\n  rootDomain: string;\n  defaultNginxConfig: string;\n}\n\nexport interface AppDetailsTabProps {\n  apiData: SingleAppApiData;\n  apiManager: ApiManager;\n  updateApiData: Function;\n  reFetchData: () => void;\n  setLoading: (value: boolean) => void;\n}\n\ninterface PropsInterface extends RouteComponentProps<any> {\n  mainContainer: RefObject<HTMLDivElement>;\n}\n\nexport default class AppDetails extends ApiComponent<\n  PropsInterface,\n  {\n    isLoading: boolean;\n    apiData: SingleAppApiData | undefined;\n    activeTabKey: string;\n    renderCounterForAffixBug: number;\n  }\n> {\n  private reRenderTriggered = false;\n  private confirmedAppNameToDelete: string = \"\";\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      activeTabKey: WEB_SETTINGS,\n      isLoading: true,\n      renderCounterForAffixBug: 0,\n      apiData: undefined\n    };\n  }\n\n  goBackToApps() {\n    this.props.history.push(\"/apps\");\n  }\n\n  onDeleteAppClicked() {\n    const self = this;\n    const appDef = Utils.copyObject(self.state.apiData!.appDefinition);\n\n    self.confirmedAppNameToDelete = \"\";\n\n    Modal.confirm({\n      title: \"Confirm Permanent Delete?\",\n      content: (\n        <div>\n          <p>\n            You are about to delete <code>{appDef.appName}</code>. Enter the\n            name of this app in the box below to confirm deletion of this app.\n            Please note that this is\n            <b> not reversible</b>.\n          </p>\n          <p className={appDef.hasPersistentData ? \"\" : \"hide-on-demand\"}>\n            <b>IMPORTANT:</b>\n            <i> {appDef.appName}</i> is an app with persistent data. After\n            deleting the app from CaptainDuckDuck, you will have to manually SSH\n            to your server, and delete Persistent Directories on your server.\n            Refer to the\n            <a\n              href=\"https://captainduckduck.com/docs/app-configuration.html#removing-persistent-apps\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              documentations\n            </a>\n            for more details.\n          </p>\n          <p>Confirm App Name:</p>\n          <Input\n            type=\"text\"\n            placeholder={appDef.appName}\n            onChange={e => {\n              self.confirmedAppNameToDelete = e.target.value.trim();\n            }}\n          />\n        </div>\n      ),\n      onOk() {\n        if (self.confirmedAppNameToDelete !== appDef.appName) {\n          message.warning(\"App name did not match. Operation cancelled.\");\n          return;\n        }\n\n        self.setState({ isLoading: true });\n        self.apiManager\n          .deleteApp(appDef.appName!)\n          .then(function() {\n            message.success(\"App deleted!\");\n          })\n          .then(function() {\n            self.goBackToApps();\n          })\n          .catch(Toaster.createCatcher());\n      },\n      onCancel() {\n        // do nothing\n      }\n    });\n  }\n\n  onUpdateConfigAndSave() {\n    const self = this;\n    const appDef = Utils.copyObject(self.state.apiData!.appDefinition);\n    self.setState({ isLoading: true });\n    this.apiManager\n      .updateConfigAndSave(appDef.appName!, appDef)\n      .then(function(data: any) {\n        self.reFetchData();\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  render() {\n    const self = this;\n\n    if (self.state.isLoading) {\n      return <CenteredSpinner />;\n    }\n\n    if (!self.reRenderTriggered) {\n      //crazy hack to make sure the Affix is showing (delete and save & update)\n      self.reRenderTriggered = true;\n      setTimeout(function() {\n        self.setState({ renderCounterForAffixBug: 1 });\n      }, 50);\n    }\n\n    const app = self.state.apiData!.appDefinition;\n\n    return (\n      <Row>\n        <Col span={20} offset={2}>\n          <Card\n            extra={\n              <ClickableLink onLinkClicked={() => self.goBackToApps()}>\n                <Tooltip title=\"Close\">\n                  <Icon type=\"close\" />\n                </Tooltip>\n              </ClickableLink>\n            }\n            title={\n              <span>\n                <Icon type=\"code\" />\n                &nbsp;&nbsp;&nbsp;{app.appName}\n              </span>\n            }\n          >\n            <Tabs\n              defaultActiveKey={WEB_SETTINGS}\n              onChange={key => {\n                self.setState({ activeTabKey: key });\n              }}\n            >\n              <TabPane\n                tab={<span className=\"unselectable-span\">HTTP Settings</span>}\n                key={WEB_SETTINGS}\n              >\n                <HttpSettings\n                  setLoading={value => this.setState({ isLoading: value })}\n                  reFetchData={() => this.reFetchData()}\n                  apiData={this.state.apiData!}\n                  apiManager={this.apiManager}\n                  updateApiData={(newData: any) =>\n                    this.setState({ apiData: newData })\n                  }\n                />\n              </TabPane>\n              <TabPane\n                tab={<span className=\"unselectable-span\">App Configs</span>}\n                key={APP_CONFIGS}\n              >\n                <AppConfigs\n                  setLoading={value => this.setState({ isLoading: value })}\n                  reFetchData={() => this.reFetchData()}\n                  apiData={this.state.apiData!}\n                  apiManager={this.apiManager}\n                  updateApiData={(newData: any) =>\n                    this.setState({ apiData: newData })\n                  }\n                />\n              </TabPane>\n              <TabPane\n                tab={<span className=\"unselectable-span\">Deployment</span>}\n                key={DEPLOYMENT}\n              >\n                <Deployment\n                  setLoading={value => this.setState({ isLoading: value })}\n                  reFetchData={() => this.reFetchData()}\n                  apiData={this.state.apiData!}\n                  apiManager={this.apiManager}\n                  onUpdateConfigAndSave={() => self.onUpdateConfigAndSave()}\n                  updateApiData={(newData: any) =>\n                    this.setState({ apiData: newData })\n                  }\n                />\n              </TabPane>\n            </Tabs>\n            <div style={{ height: 70 }} />\n\n            <Affix\n              offsetBottom={10}\n              target={() => {\n                const newLocal = self.props.mainContainer;\n                return newLocal && newLocal.current ? newLocal.current : window;\n              }}\n            >\n              <div\n                className={\n                  self.state.activeTabKey === DEPLOYMENT ? \"hide-on-demand\" : \"\"\n                }\n                style={{\n                  borderRadius: 8,\n                  background: \"rgba(51,73,90,0.9)\",\n                  paddingTop: 20,\n                  paddingBottom: 20\n                }}\n              >\n                <Row type=\"flex\" justify=\"center\" gutter={20}>\n                  <Col span={8}>\n                    <div style={{ textAlign: \"center\" }}>\n                      <Button\n                        style={{ minWidth: 135 }}\n                        type=\"danger\"\n                        size=\"large\"\n                        onClick={() => self.onDeleteAppClicked()}\n                      >\n                        Delete App\n                      </Button>\n                    </div>\n                  </Col>\n                  <Col span={8}>\n                    <div style={{ textAlign: \"center\" }}>\n                      <Button\n                        style={{ minWidth: 135 }}\n                        type=\"primary\"\n                        size=\"large\"\n                        onClick={() => self.onUpdateConfigAndSave()}\n                      >\n                        Save &amp; Update\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n            </Affix>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n\n  componentDidMount() {\n    this.reFetchData();\n  }\n\n  reFetchData() {\n    const self = this;\n    self.setState({ isLoading: true });\n    this.apiManager\n      .getAllApps()\n      .then(function(data: any) {\n        for (let index = 0; index < data.appDefinitions.length; index++) {\n          const element = data.appDefinitions[index];\n          if (element.appName === self.props.match.params.appName) {\n            self.setState({\n              isLoading: false,\n              apiData: {\n                appDefinition: element,\n                rootDomain: data.rootDomain,\n                defaultNginxConfig: data.defaultNginxConfig\n              }\n            });\n            return;\n          }\n        }\n\n        // App Not Found!\n        self.goBackToApps();\n      })\n      .catch(Toaster.createCatcher());\n  }\n}\n","import React, { Component } from \"react\";\nimport ApiComponent from \"../global/ApiComponent\";\nimport { Row, Col, Card, Avatar, Icon, Tooltip } from \"antd\";\nimport Toaster from \"../../utils/Toaster\";\nimport CenteredSpinner from \"../global/CenteredSpinner\";\n\nclass LoadBalancerStatsCard extends Component<any, any> {\n  render() {\n    return (\n      <div\n        style={{\n          height: 240,\n          overflow: \"hidden\",\n          borderRadius: 5,\n          border: \"1px solid #dddddd\",\n          backgroundColor: \"#fbfbfb\"\n        }}\n      >\n        <div style={{ textAlign: \"center\", margin: 16 }}>\n          <Avatar\n            style={{ backgroundColor: this.props.color }}\n            size={64}\n            icon={this.props.icon}\n          />\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <h4>\n            {this.props.titleText}\n            <br />\n            {this.props.titleNumber}\n          </h4>\n          <p>\n            {this.props.text1}\n            <br />\n            {this.props.text2}\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default class LoadBalancerStats extends ApiComponent<\n  {},\n  { apiData: any }\n> {\n  private updateApiInterval: any;\n\n  constructor(props: any) {\n    super(props);\n    this.state = { apiData: undefined };\n  }\n  updateApi() {\n    const self = this;\n    this.apiManager\n      .getLoadBalancerInfo()\n      .then(function(data) {\n        self.setState({ apiData: data });\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  componentWillUnmount() {\n    if (this.updateApiInterval) {\n      clearInterval(this.updateApiInterval);\n    }\n  }\n\n  componentDidMount() {\n    const self = this;\n    this.updateApi();\n    this.updateApiInterval = setInterval(function() {\n      self.updateApi();\n    }, 20000);\n  }\n\n  render() {\n    if (!this.state.apiData) {\n      return <CenteredSpinner />;\n    }\n\n    return (\n      <div>\n        <Row>\n          <Col span={22} offset={1}>\n            <Card title=\"Load Balancer Stats\">\n              <Row type=\"flex\" gutter={10}>\n                <Col span={6}>\n                  <Tooltip title=\"Constantly going up as refreshing the values\">\n                    <div>\n                      <LoadBalancerStatsCard\n                        icon=\"global\"\n                        color=\"#2361ae\"\n                        titleText=\"Total Requests\"\n                        titleNumber={`${this.state.apiData.total}`}\n                        text1={``}\n                        text2={``}\n                      />\n                    </div>\n                  </Tooltip>\n                </Col>\n                <Col span={6}>\n                  <LoadBalancerStatsCard\n                    icon=\"cluster\"\n                    color=\"#23ae89\"\n                    titleText=\"Active Connections\"\n                    titleNumber={`${this.state.apiData.activeConnections}`}\n                    text1={`${this.state.apiData.handled} handled`}\n                    text2={`${this.state.apiData.accepted} accepted`}\n                  />\n                </Col>\n                <Col span={6}>\n                  <LoadBalancerStatsCard\n                    icon=\"sync\"\n                    color=\"#d3a938\"\n                    titleText=\"Active Requests\"\n                    titleNumber={`${this.state.apiData.reading +\n                      this.state.apiData.writing}`}\n                    text1={`${this.state.apiData.reading} reading`}\n                    text2={`${this.state.apiData.writing} writing`}\n                  />\n                </Col>\n                <Col span={6}>\n                  <LoadBalancerStatsCard\n                    icon=\"clock-circle\"\n                    color=\"#ae2323\"\n                    titleText=\"Waiting Requests\"\n                    titleNumber={`${this.state.apiData.waiting}`}\n                    text1={`  `}\n                    text2={`  `}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class NetDataDescription extends Component {\n  render() {\n    return (\n      <div>\n        <p>\n          <a\n            href=\"https://github.com/netdata/netdata/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            NetData\n          </a>{\" \"}\n          is one of the most popular and most powerful monitoring tools that\n          provide a web interface. It is a system for distributed real-time\n          performance and health monitoring. It provides unparalleled insights,\n          in real-time, of everything happening on the system it runs (including\n          applications such as web and database servers), using modern\n          interactive web dashboards.\n        </p>\n        <p>\n          NetData is fast and efficient, designed to permanently run on all\n          systems (physical &amp; virtual servers, containers, IoT devices),\n          without disrupting their core function.\n        </p>\n        <p>\n          Captain provides a simple interface to enable NetData on your captain\n          instance. Currently, Captain only supports installing NetData on your{\" \"}\n          <b>leader node</b>, i.e., the node where Captain instance resides.\n          This limitation is due to a limitation in Docker interface,\n          <a\n            href=\"https://github.com/moby/moby/issues/25885/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {\" \"}\n            see here\n          </a>{\" \"}\n          .\n        </p>\n        <p>\n          <i>For more details regarding NetData, visit their </i>\n          <a\n            href=\"https://github.com/firehol/netdata/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            GitHub page\n          </a>\n          .\n        </p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Input, Checkbox, Button } from \"antd\";\nimport Utils from \"../../utils/Utils\";\n\nexport default class NetDataSettingsForm extends Component<{\n  netDataInfo: any;\n  updateModel: (netDataInfo: any) => void;\n}> {\n  changeModel(\n    parentField: string,\n    childField: string,\n    value: string | boolean\n  ) {\n    const netDataInfo = Utils.copyObject(this.props.netDataInfo);\n    const netDataInfoData = netDataInfo.data;\n    if (!netDataInfoData[parentField]) {\n      netDataInfoData[parentField] = {};\n    }\n    netDataInfoData[parentField][childField] = value;\n    this.props.updateModel(netDataInfo);\n  }\n\n  render() {\n    const self = this;\n    const netDataInfo = this.props.netDataInfo;\n    return (\n      <div>\n        <h3>Notification Settings</h3>\n\n        <p>\n          NetData offers multiple ways for you to receive notifications if\n          something is going wrong with your server resource usage.\n          <i>All notification options are completely OPTIONAL.</i>\n        </p>\n        <hr />\n        <br />\n        <h4>Email (SMTP)</h4>\n\n        <Row>\n          <Col span={20} offset={2}>\n            <Row type=\"flex\" gutter={20} align=\"middle\">\n              <Col className=\"netdata-field\" span={12}>\n                Recipient Email\n                <Input\n                  type=\"text\"\n                  placeholder=\"alerts.receiver@example.com\"\n                  value={netDataInfo.data.smtp.to}\n                  onChange={e => self.changeModel(\"smtp\", \"to\", e.target.value)}\n                />\n              </Col>\n\n              <Col className=\"netdata-field\" span={12}>\n                Server Tag\n                <Input\n                  type=\"text\"\n                  placeholder=\"my-aws-server-01-anything\"\n                  value={netDataInfo.data.smtp.hostname}\n                  onChange={e =>\n                    self.changeModel(\"smtp\", \"hostname\", e.target.value)\n                  }\n                />\n              </Col>\n\n              <Col className=\"netdata-field\" span={12}>\n                SMTP Server\n                <Input\n                  type=\"text\"\n                  placeholder=\"smtp.gmail.com\"\n                  value={netDataInfo.data.smtp.server}\n                  onChange={e =>\n                    self.changeModel(\"smtp\", \"server\", e.target.value)\n                  }\n                />\n              </Col>\n\n              <Col className=\"netdata-field\" span={6}>\n                SMTP Port\n                <Input\n                  type=\"number\"\n                  placeholder=\"587\"\n                  value={netDataInfo.data.smtp.port}\n                  onChange={e =>\n                    self.changeModel(\"smtp\", \"port\", e.target.value)\n                  }\n                />\n              </Col>\n\n              <Col className=\"netdata-field\" span={6}>\n                Unsecure\n                <Checkbox\n                  checked={!!netDataInfo.data.smtp.allowNonTls}\n                  onChange={e =>\n                    self.changeModel(\"smtp\", \"allowNonTls\", e.target.checked)\n                  }\n                >\n                  allow non-TLS\n                </Checkbox>\n              </Col>\n\n              <Col className=\"netdata-field\" span={12}>\n                SMTP Username\n                <Input\n                  type=\"text\"\n                  placeholder=\"alerts.receiver@example.com\"\n                  value={netDataInfo.data.smtp.username}\n                  onChange={e =>\n                    self.changeModel(\"smtp\", \"username\", e.target.value)\n                  }\n                />\n              </Col>\n\n              <Col className=\"netdata-field\" span={12}>\n                SMTP password\n                <Input\n                  type=\"text\"\n                  placeholder=\"your password\"\n                  value={netDataInfo.data.smtp.password}\n                  onChange={e =>\n                    self.changeModel(\"smtp\", \"password\", e.target.value)\n                  }\n                />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <br />\n        <h4>Slack</h4>\n        <Row>\n          <Col span={20} offset={2}>\n            <Row type=\"flex\" gutter={20} align=\"middle\">\n              <Col className=\"netdata-field\" span={12}>\n                Slack Webhook\n                <Input\n                  type=\"text\"\n                  placeholder=\"https://hooks.slack.com/services/XXXX\"\n                  value={netDataInfo.data.slack.hook}\n                  onChange={e =>\n                    self.changeModel(\"slack\", \"hook\", e.target.value)\n                  }\n                />\n              </Col>\n              <Col className=\"netdata-field\" span={12}>\n                Slack Channel\n                <Input\n                  type=\"text\"\n                  placeholder=\"alertschannel\"\n                  value={netDataInfo.data.slack.channel}\n                  onChange={e =>\n                    self.changeModel(\"slack\", \"channel\", e.target.value)\n                  }\n                />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <br />\n        <h4>Telegram</h4>\n        <Row>\n          <Col span={20} offset={2}>\n            <Row type=\"flex\" gutter={20} align=\"middle\">\n              <Col className=\"netdata-field\" span={12}>\n                Bot Token\n                <Input\n                  type=\"text\"\n                  placeholder=\"TELEGRAM_BOT_TOKEN\"\n                  value={netDataInfo.data.telegram.botToken}\n                  onChange={e =>\n                    self.changeModel(\"telegram\", \"botToken\", e.target.value)\n                  }\n                />\n              </Col>\n              <Col className=\"netdata-field\" span={12}>\n                Chat ID\n                <Input\n                  type=\"text\"\n                  placeholder=\"Telegram Chat ID\"\n                  value={netDataInfo.data.telegram.chatId}\n                  onChange={e =>\n                    self.changeModel(\"telegram\", \"chatId\", e.target.value)\n                  }\n                />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <br />\n        <h4>Push Bullet</h4>\n        <Row>\n          <Col span={20} offset={2}>\n            <Row type=\"flex\" gutter={20} align=\"middle\">\n              <Col className=\"netdata-field\" span={12}>\n                Push Bullet API token\n                <Input\n                  type=\"text\"\n                  placeholder=\"PUSH_BULLET_API_TOKEN\"\n                  value={netDataInfo.data.pushBullet.apiToken}\n                  onChange={e =>\n                    self.changeModel(\"pushBullet\", \"apiToken\", e.target.value)\n                  }\n                />\n              </Col>\n              <Col className=\"netdata-field\" span={12}>\n                Default Email (fallback receiver)\n                <Input\n                  type=\"text\"\n                  placeholder=\"alerts.receiver@example.com\"\n                  value={netDataInfo.data.pushBullet.fallbackEmail}\n                  onChange={e =>\n                    self.changeModel(\n                      \"pushBullet\",\n                      \"fallbackEmail\",\n                      e.target.value\n                    )\n                  }\n                />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ApiComponent from \"../global/ApiComponent\";\nimport { Card, Col, Row, Button, Icon, message } from \"antd\";\nimport Toaster from \"../../utils/Toaster\";\nimport CenteredSpinner from \"../global/CenteredSpinner\";\nimport NetDataDescription from \"./NetDataDescription\";\nimport NetDataSettingsForm from \"./NetDataSettingsForm\";\nimport Utils from \"../../utils/Utils\";\n\nexport default class NetDataInfo extends ApiComponent<{}, { apiData: any }> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      apiData: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.refetchData();\n  }\n\n  refetchData() {\n    const self = this;\n    self.setState({ apiData: undefined });\n    this.apiManager\n      .getNetDataInfo()\n      .then(function(data) {\n        self.setState({ apiData: data });\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  toggleNetDataClicked(isActivated: boolean) {\n    const netDataInfo = Utils.copyObject(this.state.apiData);\n    netDataInfo.isEnabled = !!isActivated;\n    this.onUpdateNetDataClicked(netDataInfo);\n  }\n\n  onUpdateNetDataClicked(netDataInfo: any) {\n    const self = this;\n    self.setState({ apiData: undefined });\n    return this.apiManager\n      .updateNetDataInfo(netDataInfo)\n      .then(function() {\n        message.success(\n          netDataInfo.isEnabled\n            ? \"NetData is started and updated!\"\n            : \"NetData has stopped!\"\n        );\n      })\n      .catch(Toaster.createCatcher())\n      .then(function() {\n        self.refetchData();\n      });\n  }\n\n  render() {\n    const self = this;\n\n    if (!this.state.apiData) {\n      return <CenteredSpinner />;\n    }\n\n    const netDataInfo = this.state.apiData;\n\n    return (\n      <div>\n        <Row>\n          <Col span={18} offset={3}>\n            <Card title=\"NetData Monitoring Tool\">\n              <NetDataDescription />\n              <hr />\n              <div style={{ height: 30 }} />\n              <div className={netDataInfo.isEnabled ? \"hide-on-demand\" : \"\"}>\n                <Row type=\"flex\" justify=\"end\">\n                  <Button\n                    onClick={() => self.toggleNetDataClicked(true)}\n                    type=\"primary\"\n                  >\n                    <span>\n                      Start NetData Engine &nbsp;\n                      <Icon type=\"poweroff\" />\n                    </span>\n                  </Button>\n                </Row>\n              </div>\n\n              <div className={!netDataInfo.isEnabled ? \"hide-on-demand\" : \"\"}>\n                <Row type=\"flex\" justify=\"end\">\n                  <Button\n                    style={{ marginRight: 50 }}\n                    onClick={() => self.toggleNetDataClicked(false)}\n                    type=\"danger\"\n                  >\n                    <span>\n                      Turn NetData Off &nbsp;\n                      <Icon type=\"poweroff\" />\n                    </span>\n                  </Button>\n\n                  <a\n                    type=\"submit\"\n                    href={\"//\" + netDataInfo.netDataUrl}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Button\n                      //onClick={() => self.onStartNetDataClicked()}\n                      type=\"primary\"\n                    >\n                      <span>\n                        Open NetData &nbsp;\n                        <Icon type=\"area-chart\" />\n                      </span>\n                    </Button>\n                  </a>\n                </Row>\n                <div style={{ height: 30 }} />\n                <hr />\n                <div style={{ height: 30 }} />\n                <NetDataSettingsForm\n                  updateModel={netDataInfo => {\n                    self.setState({ apiData: netDataInfo });\n                  }}\n                  netDataInfo={netDataInfo}\n                />\n\n                <br />\n\n                <Row type=\"flex\" justify=\"end\">\n                  <Button\n                    type=\"primary\"\n                    onClick={() =>\n                      self.onUpdateNetDataClicked(\n                        Utils.copyObject(self.state.apiData)\n                      )\n                    }\n                  >\n                    Update NetData\n                  </Button>\n                </Row>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport LoadBalancerStats from \"./LoadBalancerStats\";\nimport NetDataInfo from \"./NetDataInfo\";\n\nexport default class Monitoring extends Component {\n  render() {\n    return (\n      <div>\n        <LoadBalancerStats />\n        <div style={{ height: 50 }} />\n        <NetDataInfo />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ApiComponent from \"../global/ApiComponent\";\nimport { Input, Button, Row, message } from \"antd\";\nimport Toaster from \"../../utils/Toaster\";\nimport CenteredSpinner from \"../global/CenteredSpinner\";\n\nexport default class ChangePass extends ApiComponent<\n  {},\n  { isLoading: boolean; old: string; new1: string; new2: string }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      old: \"\",\n      new1: \"\",\n      new2: \"\"\n    };\n  }\n\n  onChangePasswordClicked() {\n    const self = this;\n    if (!this.state.new1) {\n      message.error(\"New password cannot be empty\");\n      return;\n    }\n\n    if (this.state.new1 !== this.state.new2) {\n      message.error(\"New passwords confirm does not match\");\n      return;\n    }\n\n    this.setState({ isLoading: true });\n\n    this.apiManager\n      .changePass(this.state.old, this.state.new1)\n      .catch(Toaster.createCatcher())\n      .then(function(data) {\n        self.setState({ isLoading: false });\n      });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <CenteredSpinner />;\n    }\n\n    return (\n      <div>\n        Old Password\n        <Input\n          type=\"password\"\n          onChange={e => this.setState({ old: e.target.value })}\n        />\n        <div style={{ height: 20 }} />\n        <hr />\n        <div style={{ height: 20 }} />\n        New Password\n        <Input\n          type=\"password\"\n          onChange={e => this.setState({ new1: e.target.value })}\n        />\n        <div style={{ height: 20 }} />\n        Confirm New Password\n        <Input\n          type=\"password\"\n          onChange={e => this.setState({ new2: e.target.value })}\n        />\n        <div style={{ height: 40 }} />\n        <Row type=\"flex\" justify=\"end\">\n          <Button onClick={() => this.onChangePasswordClicked()} type=\"primary\">\n            Change Password\n          </Button>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Modal } from \"antd\";\n\nexport default class ReloadCaptainModal extends Component<\n  {\n    isRefreshTimerActivated: boolean;\n  },\n  { timeToRefresh: number }\n> {\n  private hasAlreadyActivated: boolean;\n  constructor(props: any) {\n    super(props);\n    this.hasAlreadyActivated = false;\n    this.state = {\n      timeToRefresh: 0\n    };\n  }\n\n  startTimer() {\n    const self = this;\n    self.setState({ timeToRefresh: 30 });\n    setInterval(function() {\n      if (self.state.timeToRefresh < 2) {\n        window.location.reload(true);\n        return;\n      }\n      self.setState({ timeToRefresh: self.state.timeToRefresh - 1 });\n    }, 1000);\n  }\n\n  render() {\n    const self = this;\n    if (self.props.isRefreshTimerActivated && !this.hasAlreadyActivated) {\n      this.hasAlreadyActivated = true;\n      setTimeout(() => self.startTimer(), 10);\n    }\n\n    return (\n      <div>\n        <Modal\n          closable={false}\n          footer={<div />}\n          title=\"Update Process Started\"\n          visible={self.state.timeToRefresh > 0}\n        >\n          <div>\n            {self.props.children}\n            <p>\n              <b>Time to Refresh: </b>\n              {this.state.timeToRefresh}\n            </p>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Icon, Button, message, Modal, Row, Alert } from \"antd\";\nimport ApiComponent from \"../global/ApiComponent\";\nimport CenteredSpinner from \"../global/CenteredSpinner\";\nimport Toaster from \"../../utils/Toaster\";\nimport ReloadCaptainModal from \"./ReloadCaptainModal\";\nimport { IVersionInfo } from \"../../models/IVersionInfo\";\n\nexport default class CheckUpdate extends ApiComponent<\n  {},\n  { versionInfo: IVersionInfo | undefined; isRefreshTimerActivated: boolean }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      versionInfo: undefined,\n      isRefreshTimerActivated: false\n    };\n  }\n\n  componentDidMount() {\n    const self = this;\n    self.apiManager\n      .getVersionInfo()\n      .then(function(data) {\n        self.setState({ versionInfo: data });\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  onPerformUpdateClicked() {\n    const self = this;\n    const versionInfo = this.state.versionInfo;\n    self.apiManager\n      .performUpdate(versionInfo!.latestVersion)\n      .then(function(data) {\n        self.setState({ isRefreshTimerActivated: true });\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  render() {\n    const self = this;\n    const versionInfo = this.state.versionInfo;\n\n    if (!versionInfo) {\n      return <CenteredSpinner />;\n    }\n\n    return (\n      <div>\n        <p>\n          Captain allows in-place updates to be installed. However, always read\n          the change logs before updating your Captain. There might be breaking\n          changes that you need to be aware of. The update usually takes around\n          60 seconds and your Captain may become unresponsive until the update\n          process is finished. Your apps will stay functional and responsive\n          during this time, except for a very short period of 10 seconds or\n          less.\n        </p>\n        <br />\n        <p>\n          <b>Current Version</b>: {versionInfo.currentVersion}\n        </p>\n        <p>\n          <b>Latest Stable Version</b>: {versionInfo.latestVersion}\n        </p>\n        <div className={versionInfo.canUpdate ? \"\" : \"hide-on-demand\"}>\n          <Row type=\"flex\" justify=\"end\">\n            <Button\n              type=\"primary\"\n              onClick={() => this.onPerformUpdateClicked()}\n            >\n              <span>\n                <Icon type=\"cloud-download\" />\n              </span>{\" \"}\n              &nbsp; Install Update\n            </Button>\n          </Row>\n        </div>\n\n        <div className={!versionInfo.canUpdate ? \"\" : \"hide-on-demand\"}>\n          <Alert message=\"Your Captain is the latest version.\" type=\"info\" />\n        </div>\n\n        <ReloadCaptainModal\n          isRefreshTimerActivated={self.state.isRefreshTimerActivated}\n        >\n          <div>\n            <p>\n              Update takes around 30 to 60 seconds to complete depending on your\n              server connection speed.\n            </p>\n            <p>\n              Your Captain dashboard is not functional during the update. Please\n              wait until this page is refreshed automatically.\n            </p>\n\n            <br />\n            <br />\n          </div>\n        </ReloadCaptainModal>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ApiComponent from \"../global/ApiComponent\";\nimport { Input, Icon, Row, Button, message, Modal } from \"antd\";\nimport Utils from \"../../utils/Utils\";\nimport CenteredSpinner from \"../global/CenteredSpinner\";\nimport Toaster from \"../../utils/Toaster\";\nimport ReloadCaptainModal from \"./ReloadCaptainModal\";\n\nexport default class NginxConfig extends ApiComponent<\n  {},\n  {\n    nginxConfig: any;\n    isRefreshTimerActivated: boolean;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      nginxConfig: undefined,\n      isRefreshTimerActivated: false\n    };\n  }\n\n  componentDidMount() {\n    const self = this;\n    this.apiManager\n      .getNginxConfig()\n      .then(function(data) {\n        self.setState({ nginxConfig: data });\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  onLoadDefaultNginxConfigClicked() {\n    const newApiData = Utils.copyObject(this.state.nginxConfig);\n    newApiData.baseConfig.customValue = newApiData.baseConfig.byDefault;\n    newApiData.captainConfig.customValue = newApiData.captainConfig.byDefault;\n    this.setState({ nginxConfig: newApiData });\n  }\n\n  onUpdateNginxConfigClicked() {\n    const self = this;\n    const newApiData = Utils.copyObject(this.state.nginxConfig);\n    this.apiManager\n      .setNginxConfig(\n        newApiData.baseConfig.customValue,\n        newApiData.captainConfig.customValue\n      )\n      .then(function() {\n        self.setState({ isRefreshTimerActivated: true });\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  render() {\n    const self = this;\n    const nginxConfig = this.state.nginxConfig;\n\n    if (!nginxConfig) {\n      return <CenteredSpinner />;\n    }\n\n    return (\n      <div>\n        <ReloadCaptainModal\n          isRefreshTimerActivated={self.state.isRefreshTimerActivated}\n        >\n          <div>\n            Nginx is successfully updated, Captain will restart in 30 seconds.{\" \"}\n            <b>Please wait until the page is automatically refreshed.</b>\n            <br />\n            <br />\n          </div>\n        </ReloadCaptainModal>{\" \"}\n        <p>\n          Captain allows you to set custom configurations for your nginx router.\n          This will allow high customization level in terms of caching, special\n          routing, http2 and etc.\n        </p>\n        <p>\n          Note that templates are build using EJS template pattern. Do not\n          change the areas between <code>&lt;%</code> and <code>%&gt;</code>{\" \"}\n          unless you really know what you're doing!\n        </p>\n        <br />\n        <p>\n          <b>Base Config Location in nginx container</b>: /etc/nginx/nginx.conf\n        </p>\n        <div\n          className={\n            nginxConfig.baseConfig.customValue ||\n            nginxConfig.captainConfig.customValue\n              ? \"\"\n              : \"hide-on-demand\"\n          }\n        >\n          <Input.TextArea\n            className=\"code-input\"\n            placeholder=\"\"\n            rows={17}\n            value={nginxConfig.baseConfig.customValue}\n            onChange={e => {\n              const newApiData = Utils.copyObject(nginxConfig);\n              newApiData.baseConfig.customValue = e.target.value;\n              self.setState({ nginxConfig: newApiData });\n            }}\n          />\n          <div style={{ height: 40 }} />\n        </div>\n        <p>\n          <b>Captain Config Location in nginx container</b>:\n          /etc/nginx/conf.d/captain-root.conf\n        </p>\n        <div\n          className={\n            nginxConfig.baseConfig.customValue ||\n            nginxConfig.captainConfig.customValue\n              ? \"\"\n              : \"hide-on-demand\"\n          }\n        >\n          <Input.TextArea\n            className=\"code-input\"\n            placeholder=\"\"\n            rows={17}\n            value={nginxConfig.captainConfig.customValue}\n            onChange={e => {\n              const newApiData = Utils.copyObject(nginxConfig);\n              newApiData.captainConfig.customValue = e.target.value;\n              self.setState({ nginxConfig: newApiData });\n            }}\n          />\n        </div>\n        <div style={{ height: 40 }} />\n        <div>\n          <Row type=\"flex\" justify=\"end\">\n            <Button\n              type=\"default\"\n              onClick={() => self.onLoadDefaultNginxConfigClicked()}\n            >\n              Load Default and Edit\n            </Button>\n          </Row>\n\n          <div style={{ height: 20 }} />\n\n          <Row type=\"flex\" justify=\"end\">\n            <Button\n              type=\"primary\"\n              onClick={() => self.onUpdateNginxConfigClicked()}\n            >\n              <span>\n                <Icon type=\"sync\" />\n              </span>{\" \"}\n              &nbsp; Save and Update\n            </Button>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport { ColumnProps } from \"antd/lib/table\";\nimport { IUnusedImage } from \"./DiskCleanup\";\n\nexport default class UnusedImagesTable extends Component<{\n  unusedImages: IUnusedImage[];\n  updateModel: (selectedIds: string[]) => void;\n}> {\n  getCols(): ColumnProps<{ imageName: string; imageId: string }>[] {\n    const columns = [\n      {\n        title: \"Image ID\",\n        dataIndex: \"imageId\" as \"imageId\",\n        render: (imageId: string) => {\n          imageId = imageId || \"\";\n          return (\n            <div style={{ width: 150, fontSize: \"90%\" }}>\n              {imageId.substr(0, Math.min(imageId.length, 25))}...\n            </div>\n          );\n        }\n      },\n      {\n        title: \"Associated Tags\",\n        dataIndex: \"imageName\" as \"imageName\",\n        render: (imageName: string) => {\n          imageName = imageName || \"\";\n          return (\n            <div style={{ whiteSpace: \"pre-line\", fontSize: \"90%\" }}>\n              {imageName}\n            </div>\n          );\n        }\n      }\n    ];\n    return columns;\n  }\n\n  getData() {\n    const data: { key: string; imageName: string; imageId: string }[] = [];\n    for (let index = 0; index < this.props.unusedImages.length; index++) {\n      const element = this.props.unusedImages[index];\n      data.push({\n        key: element.id,\n        imageId: element.id,\n        imageName: element.tags.join(\"\\n\")\n      });\n    }\n    return data;\n  }\n\n  getRowSelection() {\n    // rowSelection object indicates the need for row selection\n    const self = this;\n    const rowSelection = {\n      onChange: (selectedRowKeys: any, selectedRows: any[]) => {\n        self.props.updateModel(selectedRowKeys);\n      },\n      getCheckboxProps: (record: any) => ({\n        disabled: false, // Column configuration not to be checked\n        name: record.imageId\n      })\n    };\n    return rowSelection;\n  }\n\n  render() {\n    return (\n      <div>\n        <Table\n          pagination={false}\n          rowSelection={this.getRowSelection()}\n          columns={this.getCols()}\n          dataSource={this.getData()}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Row,\n  Col,\n  Input,\n  InputNumber,\n  Tooltip,\n  Button,\n  Icon,\n  message\n} from \"antd\";\nimport ApiComponent from \"../global/ApiComponent\";\nimport Toaster from \"../../utils/Toaster\";\nimport CenteredSpinner from \"../global/CenteredSpinner\";\nimport UnusedImagesTable from \"./UnusedImagesTable\";\n\nexport interface IUnusedImage {\n  tags: string[];\n  id: string;\n}\n\nexport default class DiskCleanup extends ApiComponent<\n  {},\n  {\n    mostRecentLimit: number;\n    unusedImages?: IUnusedImage[];\n    selectedImagesForDelete: string[];\n  }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      mostRecentLimit: 2,\n      selectedImagesForDelete: [],\n      unusedImages: []\n    };\n  }\n\n  onRemoveImagesClicked() {\n    const self = this;\n    this.setState({ unusedImages: undefined });\n    this.apiManager\n      .deleteImages(this.state.selectedImagesForDelete)\n      .then(function(data) {\n        message.success(\"Unused images are deleted.\");\n        self.onGetOldImagesClicked();\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  onGetOldImagesClicked() {\n    const self = this;\n    this.setState({ unusedImages: undefined });\n    this.apiManager\n      .getUnusedImages(this.state.mostRecentLimit)\n      .then(function(data) {\n        self.setState({ unusedImages: data.unusedImages });\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  render() {\n    const self = this;\n    const unusedImages = this.state.unusedImages;\n\n    if (!unusedImages) {\n      return <CenteredSpinner />;\n    }\n\n    const hasSelectedImagesForRemoval = !!(\n      self.state.selectedImagesForDelete &&\n      self.state.selectedImagesForDelete.length\n    );\n\n    return (\n      <div>\n        <div>\n          <p>\n            Every time you deploy a new build, Docker builds a new image for\n            you. Typically, a large part of this image is shared between the old\n            version and the new version, but a small chunk is added to your disk\n            with each build. You can read more about disk cleanup in the docs,\n            but as a simple interface, this widget gives you the ability to\n            perform image cleanups on demand.\n          </p>\n          <p>\n            You can perform this action, after each deploy. But it's typically\n            not needed with that frequency. For typical mid-sized projects, it's\n            recommended to perform this cleanup after every ~20 builds.\n          </p>\n          <p>\n            With default parameter, it keeps the last two recent builds of all\n            current apps, and creates a list of images that can be deleted (by\n            clicking on Get List button). You can select which images you want\n            to delete and click on Remove Images button. You might noticed that\n            some images are not deleted even though you clicked on Remove\n            Images, it means they are being directly or indirectly in-use by\n            Docker. A common example For indirect usage is an image whose child\n            image is being used by an alive container.\n          </p>\n\n          <br />\n        </div>\n\n        <Row>\n          <Col span={12}>\n            <Tooltip title=\"For example, enter 2 in order to exclude 2 most recent builds during clean-up\">\n              <Input\n                addonBefore=\"Keep most recent\"\n                type=\"number\"\n                value={this.state.mostRecentLimit + \"\"}\n                onChange={e => {\n                  this.setState({ mostRecentLimit: Number(e.target.value) });\n                }}\n              />\n            </Tooltip>\n          </Col>\n          <Col span={12}>\n            <Row type=\"flex\" justify=\"end\">\n              <Button\n                type=\"default\"\n                onClick={() => this.onGetOldImagesClicked()}\n              >\n                <span>\n                  <Icon type=\"sync\" />\n                </span>{\" \"}\n                &nbsp; Get List\n              </Button>\n            </Row>\n          </Col>\n        </Row>\n\n        <div className={unusedImages.length > 0 ? \"\" : \"hide-on-demand\"}>\n          <div style={{ height: 20 }} />\n          <Row type=\"flex\" justify=\"end\">\n            <Tooltip\n              title={\n                hasSelectedImagesForRemoval\n                  ? \"\"\n                  : \"Select images that you want to remove. You can select all from the top row.\"\n              }\n            >\n              <Button\n                disabled={!hasSelectedImagesForRemoval}\n                type=\"primary\"\n                onClick={() => {\n                  self.onRemoveImagesClicked();\n                }}\n              >\n                <span>\n                  <Icon type=\"delete\" />{\" \"}\n                </span>{\" \"}\n                &nbsp; Remove Unused Images\n              </Button>\n            </Tooltip>\n          </Row>\n          <div style={{ height: 20 }} />\n          <div>\n            <b>NOTE: </b> Images that are being used (directly or indirectly)\n            will not be deleted even if you select them.\n          </div>\n          <div style={{ height: 20 }} />\n          <UnusedImagesTable\n            unusedImages={unusedImages}\n            updateModel={selectedImagesForDelete =>\n              this.setState({ selectedImagesForDelete })\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Col, Card } from \"antd\";\nimport ChangePass from \"./ChangePass\";\nimport CheckUpdate from \"./CheckUpdate\";\nimport NginxConfig from \"./NginxConfig\";\nimport DiskCleanup from \"./DiskCleanup\";\n\nexport default class Settings extends Component {\n  render() {\n    return (\n      <div>\n        <Row type=\"flex\" justify=\"space-around\">\n          <Col span={8}>\n            <div style={{ margin: 10 }}>\n              <Card title=\"Check for Updates\">\n                <CheckUpdate />\n              </Card>\n            </div>\n          </Col>\n          <Col span={16}>\n            <div style={{ margin: 10 }}>\n              <Card title=\"NGINX Configurations\">\n                <NginxConfig />\n              </Card>\n            </div>\n          </Col>\n          <Col span={8}>\n            <div style={{ margin: 10 }}>\n              <Card title=\"Change Password\">\n                <ChangePass />\n              </Card>\n            </div>\n          </Col>\n          <Col span={16}>\n            <div style={{ margin: 10 }}>\n              <Card title=\"Disk Cleanup\">\n                <DiskCleanup />\n              </Card>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\nimport { IOneClickAppIdentifier } from \"../containers/apps/oneclick/OneClickAppSelector\";\n\nconst DOT_JSON = \".JSON\";\n\nexport default class OneClickAppsApi {\n  getOneClickAppByName(appName: string) {\n    const self = this;\n    return self.getAllOneClickApps().then(function(data) {\n      if (!appName) throw new Error(\"appName is empty!\");\n\n      const downloadUrl = data.filter(value => value.name === appName)[0]\n        .download_url;\n\n      return axios\n        .get(downloadUrl) //\n        .then(function(res) {\n          // res contains data, headers, and etc...\n          return res.data;\n        });\n    });\n  }\n\n  getAllOneClickApps() {\n    const self = this;\n    return axios\n      .get(\n        `https://api.github.com/repos/githubsaturn/testing-v1-one-click-apps/contents/one-click-apps/v1`\n      ) //\n      .then(function(res) {\n        // res contains data, headers, and etc...\n        return (res.data as IOneClickAppIdentifier[]).map(element => {\n          return {\n            name: element.name.substr(0, element.name.length - DOT_JSON.length),\n            download_url: element.download_url\n          };\n        });\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport ApiComponent from \"../../global/ApiComponent\";\nimport OneClickAppsApi from \"../../../api/OneClickAppsApi\";\nimport Toaster from \"../../../utils/Toaster\";\nimport { Row, Col, Card, Select, Button } from \"antd\";\nimport CenteredSpinner from \"../../global/CenteredSpinner\";\nimport { RouteComponentProps } from \"react-router\";\n\nexport interface IOneClickAppIdentifier {\n  name: string;\n  download_url: string;\n}\n\nexport default class OneClickAppSelector extends Component<\n  RouteComponentProps<any>,\n  {\n    oneClickAppList: IOneClickAppIdentifier[] | undefined;\n    selectedApp: string | undefined;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      oneClickAppList: undefined,\n      selectedApp: undefined\n    };\n  }\n\n  componentDidMount() {\n    const self = this;\n    new OneClickAppsApi()\n      .getAllOneClickApps()\n      .then(function(data) {\n        self.setState({\n          oneClickAppList: data\n        });\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  createOptions() {\n    return this.state.oneClickAppList!.map(app => {\n      return (\n        <Select.Option key={app.name} value={app.name}>\n          {app.name}\n        </Select.Option>\n      );\n    });\n  }\n\n  render() {\n    const self = this;\n\n    if (!this.state.oneClickAppList) return <CenteredSpinner />;\n\n    return (\n      <div>\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={16}>\n            <Card title=\"One Click Apps\">\n              <p>\n                Choose an app, a database or a bundle (app+database) from the\n                list below. The rest is magic, well... Wizard! One click apps\n                will be retrieved from this GitHub Repo:{\" \"}\n                <a\n                  href=\"https://github.com/githubsaturn/testing-v1-one-click-apps\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  testing-v1-one-click-apps\n                </a>\n              </p>\n              <div style={{ height: 50 }} />\n              <Row type=\"flex\" justify=\"end\" align=\"middle\">\n                <b>One-Click Apps List: &nbsp;&nbsp;</b>\n                <Select\n                  style={{ minWidth: 150 }}\n                  onChange={value => {\n                    self.setState({ selectedApp: value.toString() });\n                  }}\n                >\n                  {self.createOptions()}\n                </Select>\n              </Row>\n              <div style={{ height: 60 }} />\n              <Row type=\"flex\" justify=\"end\" align=\"middle\">\n                <Button\n                  onClick={() =>\n                    self.props.history.push(\n                      `/apps/oneclick/${self.state.selectedApp}`\n                    )\n                  }\n                  disabled={!self.state.selectedApp}\n                  style={{ minWidth: 150 }}\n                  type=\"primary\"\n                >\n                  Next\n                </Button>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { IOneClickVariable } from \"./OneClickAppConfigPage\";\nimport { Input, Row, Col, Alert, Button, message } from \"antd\";\nimport { IHashMapGeneric } from \"../../../models/IHashMapGeneric\";\nimport Utils from \"../../../utils/Utils\";\n\nexport default class OneClickVariablesSection extends Component<\n  {\n    oneClickAppVariables: IOneClickVariable[];\n    onNextClicked: (values: IHashMapGeneric<string>) => void;\n  },\n  {\n    enteredVariables: IHashMapGeneric<string>;\n    blurredFields: IHashMapGeneric<boolean>;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n\n    let enteredVariables: IHashMapGeneric<string> = {};\n    this.props.oneClickAppVariables.forEach(v => {\n      const defaultValue = v.defaultValue;\n      if (defaultValue) {\n        enteredVariables[v.id] = defaultValue;\n      }\n    });\n\n    this.state = {\n      enteredVariables,\n      blurredFields: {}\n    };\n  }\n\n  onNextClicked() {\n    const self = this;\n    const blurredFields = Utils.copyObject(self.state.blurredFields);\n    let allFieldValid = true;\n    self.props.oneClickAppVariables.forEach(v => {\n      blurredFields[v.id] = true;\n      if (!self.isFieldValueValid(v)) {\n        allFieldValid = false;\n      }\n    });\n\n    if (!allFieldValid) {\n      message.error(\"Fix all errors before deploying.\");\n    } else {\n      self.props.onNextClicked(self.state.enteredVariables);\n    }\n    self.setState({ blurredFields });\n  }\n\n  isFieldValueValid(variable: IOneClickVariable) {\n    const self = this;\n    const currVal = self.state.enteredVariables[variable.id] || \"\";\n    let isEnteredValueValid = true;\n    if (variable.validRegex) {\n      // From https://stackoverflow.com/questions/39154255/converting-regexp-to-string-then-back-to-regexp\n      let parts = /\\/(.*)\\/(.*)/.exec(variable.validRegex);\n      if (\n        !parts /*This should never happen!*/ ||\n        !new RegExp(parts[1], parts[2]).test(currVal)\n      ) {\n        isEnteredValueValid = false;\n      }\n    }\n\n    return isEnteredValueValid;\n  }\n\n  createTextFields() {\n    const self = this;\n    return this.props.oneClickAppVariables.map(variable => {\n      const currVal = self.state.enteredVariables[variable.id];\n\n      return (\n        <div key={variable.id} style={{ marginBottom: 40 }}>\n          <h4>{variable.label}</h4>\n          <div\n            style={{ paddingBottom: 5, fontSize: \"90%\" }}\n            className={!!variable.description ? \"\" : \"hide-on-demand\"}\n          >\n            {variable.description}\n          </div>\n\n          <Row>\n            <Col span={12}>\n              <Input\n                type=\"text\"\n                placeholder={variable.defaultValue}\n                value={currVal === undefined ? variable.defaultValue : currVal}\n                onChange={e => {\n                  const newModel = Utils.copyObject(\n                    this.state.enteredVariables\n                  );\n                  newModel[variable.id] = e.target.value;\n                  this.setState({ enteredVariables: newModel });\n                }}\n                onBlur={e => {\n                  const blurredFields = Utils.copyObject(\n                    self.state.blurredFields\n                  );\n                  blurredFields[variable.id] = true;\n                  self.setState({ blurredFields });\n                }}\n              />\n              <div style={{ height: 5 }} />\n              <Alert\n                className={\n                  !self.state.blurredFields[variable.id] ||\n                  self.isFieldValueValid(variable)\n                    ? \"hide-on-demand\"\n                    : \"\"\n                }\n                showIcon\n                message={\n                  <span>\n                    Invalid value. Does not match Regex:\n                    <code>{variable.validRegex}</code>\n                  </span>\n                }\n                type=\"error\"\n              />\n            </Col>\n          </Row>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const self = this;\n    return (\n      <div>\n        <div>{this.createTextFields()}</div>\n        <Row type=\"flex\" justify=\"end\">\n          <Button\n            size=\"large\"\n            style={{ minWidth: 150 }}\n            type=\"primary\"\n            onClick={() => self.onNextClicked()}\n          >\n            Deploy\n          </Button>\n        </Row>\n      </div>\n    );\n  }\n}\n","import { IDockerComposeService } from \"./OneClickAppConfigPage\";\nimport ApiManager from \"../../../api/ApiManager\";\nimport { IAppDef } from \"../AppDefinition\";\nimport { ICaptainDefinition } from \"../../../models/ICaptainDefinition\";\nimport Utils from \"../../../utils/Utils\";\n\nexport default class OneClickAppDeploymentHelper {\n  private apiManager: ApiManager = new ApiManager();\n\n  createRegisterPromise(\n    appName: string,\n    dockerComposeService: IDockerComposeService\n  ) {\n    const self = this;\n    return Promise.resolve().then(function() {\n      return self.apiManager.registerNewApp(\n        appName,\n        !!dockerComposeService.volumes && !!dockerComposeService.volumes.length\n      );\n    });\n  }\n\n  createConfigurationPromise(\n    appName: string,\n    dockerComposeService: IDockerComposeService\n  ) {\n    const self = this;\n    return Promise.resolve().then(function() {\n      return self.apiManager\n        .getAllApps()\n        .then(function(data) {\n          const appDefs = data.appDefinitions as IAppDef[];\n          for (let index = 0; index < appDefs.length; index++) {\n            const element = appDefs[index];\n            if (element.appName === appName) {\n              return Utils.copyObject(element);\n            }\n          }\n        })\n        .then(function(appDef) {\n          if (!appDef) {\n            throw new Error(\"App was not found right after registering!!\");\n          }\n\n          appDef.volumes = appDef.volumes || [];\n\n          const vols = dockerComposeService.volumes || [];\n          for (let i = 0; i < vols.length; i++) {\n            const elements = vols[i].split(\":\");\n            if (elements[0].startsWith(\"/\")) {\n              appDef.volumes.push({\n                hostPath: elements[0],\n                containerPath: elements[1]\n              });\n            } else {\n              appDef.volumes.push({\n                volumeName: elements[0],\n                containerPath: elements[1]\n              });\n            }\n          }\n\n          appDef.ports = appDef.ports || [];\n          const ports = dockerComposeService.ports || [];\n          for (let i = 0; i < ports.length; i++) {\n            const elements = ports[i].split(\":\");\n            appDef.ports.push({\n              hostPort: Number(elements[0]),\n              containerPort: Number(elements[1])\n            });\n          }\n\n          appDef.envVars = appDef.envVars || [];\n          const environment = dockerComposeService.environment || {};\n          Object.keys(environment).forEach(function(envKey) {\n            appDef.envVars.push({\n              key: envKey,\n              value: environment[envKey]\n            });\n          });\n\n          return self.apiManager.updateConfigAndSave(appName, appDef);\n        });\n    });\n  }\n\n  createDeploymentPromise(\n    appName: string,\n    dockerComposeService: IDockerComposeService\n  ) {\n    const self = this;\n    return Promise.resolve().then(function() {\n      let captainDefinition: ICaptainDefinition = {\n        schemaVersion: 2\n      };\n\n      if (dockerComposeService.image) {\n        captainDefinition.imageName = dockerComposeService.image;\n      } else {\n        captainDefinition.dockerfileLines =\n          dockerComposeService.dockerFileLines;\n      }\n\n      return self.apiManager.uploadCaptainDefinitionContent(\n        appName,\n        captainDefinition,\n        false\n      );\n    });\n  }\n}\n","import { IHashMapGeneric } from \"../../../models/IHashMapGeneric\";\nimport {\n  IOneClickTemplate,\n  IDockerComposeService\n} from \"./OneClickAppConfigPage\";\nimport Utils from \"../../../utils/Utils\";\nimport OneClickAppDeploymentHelper from \"./OneClickAppDeploymentHelper\";\n\ninterface IDeploymentStep {\n  stepName: string;\n  stepPromise: () => Promise<void>;\n}\n\nexport interface IDeploymentState {\n  steps: string[];\n  error: string;\n  successMessage?: string;\n  currentStep: number;\n}\n\nexport default class OneClickAppDeployManager {\n  private deploymentHelper: OneClickAppDeploymentHelper = new OneClickAppDeploymentHelper();\n  private template: IOneClickTemplate | undefined;\n  constructor(\n    private onDeploymentStateChanged: (\n      deploymentState: IDeploymentState\n    ) => void\n  ) {\n    //\n  }\n\n  startDeployProcess(\n    template: IOneClickTemplate,\n    values: IHashMapGeneric<string>\n  ) {\n    const self = this;\n    let stringified = JSON.stringify(template);\n\n    for (let index = 0; index < template.variables.length; index++) {\n      const element = template.variables[index];\n      stringified = stringified\n        .split(element.id)\n        .join(values[element.id] || \"\");\n    }\n\n    try {\n      this.template = JSON.parse(stringified);\n    } catch (error) {\n      this.onDeploymentStateChanged({\n        steps: [\"Parsing the template\"],\n        error: `Cannot parse: ${stringified}` + \"\\n\\n\\n\\n\" + error,\n        currentStep: 0\n      });\n      return;\n    }\n\n    // Dependency tree and sort apps\n    // Call createDeploymentStepPromises for all apps.\n    // populate steps as string[]\n    // create promise chain with catch -> error. Each promise gets followed by currentStep++ promise\n    // Start running promises,\n\n    const apps = this.createAppsArrayInOrder();\n    if (!apps) {\n      self.onDeploymentStateChanged({\n        steps: [\"Parsing the template\"],\n        error:\n          \"Cannot parse the template. Dependency tree cannot be resolved. Infinite loop!!\",\n        currentStep: 0\n      });\n    } else if (apps.length === 0) {\n      self.onDeploymentStateChanged({\n        steps: [\"Parsing the template\"],\n        error: \"Cannot parse the template. No services found!!\",\n        currentStep: 0\n      });\n    } else {\n      const steps: IDeploymentStep[] = [];\n      for (let index = 0; index < apps.length; index++) {\n        const element = apps[index];\n        steps.push(\n          ...self.createDeploymentStepPromises(element.appName, element.service)\n        );\n      }\n\n      const stepsTexts: string[] = [\"Parsing the template\"];\n      for (let index = 0; index < steps.length; index++) {\n        stepsTexts.push(steps[index].stepName);\n      }\n\n      let currentStep = 0;\n      const onNextStepPromiseCreator = function() {\n        return new Promise<void>(function(resolve) {\n          currentStep++;\n          self.onDeploymentStateChanged(\n            Utils.copyObject({\n              steps: stepsTexts,\n              error: \"\",\n              currentStep,\n              successMessage:\n                currentStep >= stepsTexts.length\n                  ? self.template!.instructions.end\n                  : undefined\n            })\n          );\n          resolve();\n        });\n      };\n\n      let promise = onNextStepPromiseCreator();\n\n      for (let index = 0; index < steps.length; index++) {\n        const element = steps[index];\n        promise = promise\n          .then(element.stepPromise)\n          .then(onNextStepPromiseCreator);\n      }\n\n      promise.catch(function(error) {\n        self.onDeploymentStateChanged(\n          Utils.copyObject({\n            steps: stepsTexts,\n            error: \"Failed: \" + error,\n            currentStep\n          })\n        );\n      });\n    }\n  }\n\n  /**\n   * Outputs an array which includes all services in order based on their dependencies.\n   * The first element is an app without any dependencies. The second element can be an app that depends on the first app.\n   */\n  createAppsArrayInOrder() {\n    const apps: {\n      appName: string;\n      service: IDockerComposeService;\n    }[] = [];\n\n    let numberOfServices = 0;\n    const servicesMap = this.template!.dockerCompose.services;\n    Object.keys(servicesMap).forEach(function(key) {\n      numberOfServices++;\n    });\n\n    let itCount = 0;\n    while (apps.length < numberOfServices) {\n      if (itCount > numberOfServices) {\n        // we are stuck in an infinite loop\n        return undefined;\n      }\n      itCount++;\n\n      Object.keys(servicesMap).forEach(function(appName) {\n        for (let index = 0; index < apps.length; index++) {\n          const element = apps[index];\n          if (element.appName === appName) {\n            // already added\n            return;\n          }\n        }\n\n        let service = servicesMap[appName];\n\n        const dependsOn = service.depends_on || [];\n\n        for (let index = 0; index < dependsOn.length; index++) {\n          const element = dependsOn[index];\n          let dependencyAlreadyAdded = false;\n          for (let j = 0; j < apps.length; j++) {\n            if (element === apps[j].appName) {\n              dependencyAlreadyAdded = true;\n            }\n          }\n\n          if (!dependencyAlreadyAdded) return;\n        }\n\n        apps.push({\n          appName,\n          service\n        });\n      });\n    }\n\n    return apps;\n  }\n\n  createDeploymentStepPromises(\n    appName: string,\n    dockerComposeService: IDockerComposeService\n  ): IDeploymentStep[] {\n    const promises: IDeploymentStep[] = [];\n    const self = this;\n\n    promises.push({\n      stepName: `Registering ${appName}`,\n      stepPromise: function() {\n        return self.deploymentHelper.createRegisterPromise(\n          appName,\n          dockerComposeService\n        );\n      }\n    });\n\n    promises.push({\n      stepName: `Configuring ${appName} (volumes, ports, environmental variables)`,\n      stepPromise: function() {\n        return self.deploymentHelper.createConfigurationPromise(\n          appName,\n          dockerComposeService\n        );\n      }\n    });\n\n    promises.push({\n      stepName: `Deploying ${appName} (might take up to a minute)`,\n      stepPromise: function() {\n        return self.deploymentHelper.createDeploymentPromise(\n          appName,\n          dockerComposeService\n        );\n      }\n    });\n\n    return promises;\n  }\n}\n","import React, { Component } from \"react\";\nimport { IDeploymentState } from \"./OneClickAppDeployManager\";\nimport { Row, Col, Card, Steps, Icon, Button, Alert } from \"antd\";\n\nconst Step = Steps.Step;\n\nexport default class OneClickAppDeployProgress extends Component<{\n  appName: string;\n  deploymentState: IDeploymentState;\n  onRestartClicked: () => void;\n  onFinishClicked: () => void;\n}> {\n  createSteps() {\n    const steps = this.props.deploymentState.steps;\n    const stepsInfo = [];\n\n    for (let index = 0; index < steps.length; index++) {\n      stepsInfo.push({\n        text: (\n          <span>\n            <span>\n              {index === this.props.deploymentState.currentStep &&\n              !this.props.deploymentState.error ? (\n                <Icon\n                  style={{ fontSize: \"16px\", paddingRight: 12 }}\n                  type=\"loading\"\n                />\n              ) : (\n                <span />\n              )}\n            </span>\n            {steps[index]}\n          </span>\n        ),\n        icon: undefined\n      });\n    }\n\n    return stepsInfo.map(s => {\n      return <Step icon={s.icon} title={s.text} />;\n    });\n  }\n\n  render() {\n    const self = this;\n\n    return (\n      <div>\n        <div>\n          <Row type=\"flex\" justify=\"center\">\n            <Col span={16}>\n              <Card title={`Deploying your ${this.props.appName}`}>\n                <p>\n                  This process takes a few minutes to complete. DO NOT refresh\n                  this page and DO NOT navigate away!!!\n                </p>\n                <div style={{ padding: 20 }}>\n                  <h3>Progress:</h3>\n                  <div style={{ height: 20 }} />\n                  <Steps\n                    status={\n                      !!self.props.deploymentState.error ? \"error\" : undefined\n                    }\n                    direction=\"vertical\"\n                    current={self.props.deploymentState.currentStep}\n                  >\n                    {self.createSteps()}\n                  </Steps>\n\n                  <div\n                    className={\n                      !!self.props.deploymentState.successMessage\n                        ? \"\"\n                        : \"hide-on-demand\"\n                    }\n                  >\n                    <div style={{ height: 20 }} />\n                    <Alert\n                      showIcon\n                      type=\"success\"\n                      message={\n                        <div style={{ whiteSpace: \"pre-line\" }}>\n                          {self.props.deploymentState.successMessage}\n                        </div>\n                      }\n                    />\n                    <div style={{ height: 80 }} />\n                    <Row type=\"flex\" justify=\"end\">\n                      <Button\n                        style={{ minWidth: 150 }}\n                        size=\"large\"\n                        type=\"primary\"\n                        onClick={() => self.props.onFinishClicked()}\n                      >\n                        Finish\n                      </Button>\n                    </Row>\n                  </div>\n\n                  <div\n                    className={\n                      !!self.props.deploymentState.error ? \"\" : \"hide-on-demand\"\n                    }\n                  >\n                    <div style={{ height: 20 }} />\n                    <Alert\n                      showIcon\n                      type=\"error\"\n                      message={self.props.deploymentState.error}\n                    />\n                    <div style={{ height: 80 }} />\n\n                    <Row type=\"flex\" justify=\"end\">\n                      <Button\n                        size=\"large\"\n                        type=\"primary\"\n                        onClick={() => self.props.onRestartClicked()}\n                      >\n                        Go Back &amp; Try Again\n                      </Button>\n                    </Row>\n                  </div>\n                </div>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport OneClickAppsApi from \"../../../api/OneClickAppsApi\";\nimport { RouteComponentProps } from \"react-router\";\nimport { IHashMapGeneric } from \"../../../models/IHashMapGeneric\";\nimport Toaster from \"../../../utils/Toaster\";\nimport { Row, Col, Card, message } from \"antd\";\nimport CenteredSpinner from \"../../global/CenteredSpinner\";\nimport OneClickVariablesSection from \"./OneClickVariablesSection\";\nimport OneClickAppDeployManager, {\n  IDeploymentState\n} from \"./OneClickAppDeployManager\";\nimport OneClickAppDeployProgress from \"./OneClickAppDeployProgress\";\nimport DomUtils from \"../../../utils/DomUtils\";\n\nexport const ONE_CLICK_APP_NAME_VAR_NAME = \"$$cap_appname\";\n\nexport interface IOneClickVariable {\n  id: string;\n  label: string;\n  defaultValue?: string;\n  validRegex?: string;\n  description?: string;\n}\n\nexport interface IDockerComposeService {\n  image?: string;\n  dockerFileLines?: string[]; // This is our property, not DockerCompose. We use this instead of image if we need to extend the image.\n  volumes?: string[];\n  ports?: string[];\n  environment?: IHashMapGeneric<string>;\n  depends_on?: string[];\n}\n\nexport interface IOneClickTemplate {\n  captainVersion: number;\n  dockerCompose: {\n    version: string;\n    services: IHashMapGeneric<IDockerComposeService>;\n  };\n  instructions: {\n    start: string;\n    end: string;\n  };\n  variables: IOneClickVariable[];\n}\n\nexport default class OneClickAppConfigPage extends Component<\n  RouteComponentProps<any>,\n  {\n    apiData: IOneClickTemplate | undefined;\n    deploymentState: IDeploymentState | undefined;\n  }\n> {\n  private oneClickAppDeployHelper: OneClickAppDeployManager;\n  private isUnmount: boolean = false;\n\n  constructor(props: any) {\n    super(props);\n    const self = this;\n    this.state = {\n      apiData: undefined,\n      deploymentState: undefined\n    };\n    this.oneClickAppDeployHelper = new OneClickAppDeployManager(\n      deploymentState => {\n        if (self.isUnmount) {\n          return;\n        }\n        self.setState({ deploymentState });\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    this.isUnmount = true;\n  }\n\n  componentDidMount() {\n    const self = this;\n    new OneClickAppsApi()\n      .getOneClickAppByName(this.props.match.params.appName)\n      .then(function(data: IOneClickTemplate) {\n        if ((data.captainVersion || \"\").toString() !== \"1\") {\n          message.error(\n            \"One-Click App version does not match! Create a GitHub issue please!\"\n          );\n          return;\n        }\n\n        data.variables = data.variables || [];\n        // Adding app name to all one click apps\n        data.variables.unshift({\n          id: ONE_CLICK_APP_NAME_VAR_NAME,\n          label: \"App Name\",\n          description:\n            \"This is your app name. Pick a name such as my-first-1-click-app\",\n          validRegex: \"/^([a-z0-9]+\\\\-)*[a-z0-9]+$/\" // string version of /^([a-z0-9]+\\-)*[a-z0-9]+$/\n        });\n        self.setState({ apiData: data });\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  render() {\n    const self = this;\n    const deploymentState = this.state.deploymentState;\n    const apiData = this.state.apiData;\n\n    if (!apiData) {\n      return <CenteredSpinner />;\n    }\n\n    if (!!deploymentState) {\n      return (\n        <OneClickAppDeployProgress\n          appName={self.props.match.params.appName}\n          deploymentState={deploymentState}\n          onFinishClicked={() => self.props.history.push(\"/apps\")}\n          onRestartClicked={() => self.setState({ deploymentState: undefined })}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={16}>\n            <Card title={`Setup your ${this.props.match.params.appName}`}>\n              <h2>{this.props.match.params.appName}</h2>\n              <p\n                style={{\n                  whiteSpace: \"pre-line\",\n                  paddingLeft: 15,\n                  paddingRight: 15\n                }}\n              >\n                {apiData.instructions.start}\n              </p>\n              <div style={{ height: 40 }} />\n              <OneClickVariablesSection\n                oneClickAppVariables={apiData.variables}\n                onNextClicked={values => {\n                  self.oneClickAppDeployHelper.startDeployProcess(\n                    self.state.apiData!,\n                    values\n                  );\n                  DomUtils.scrollToTopBar();\n                }}\n              />\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { RefObject, Fragment } from \"react\";\nimport { RouteComponentProps, Switch, Route } from \"react-router\";\nimport ApiManager from \"../api/ApiManager\";\nimport { Layout, Menu, Icon, Row, Col } from \"antd\";\nimport ClickableLink from \"./global/ClickableLink\";\nimport Dashboard from \"./Dashboard\";\nimport LoggedInCatchAll from \"./LoggedInCatchAll\";\nimport Cluster from \"./nodes/Cluster\";\nimport Apps from \"./apps/Apps\";\nimport { SelectParam } from \"antd/lib/menu\";\nimport AppDetails from \"./apps/appDetails/AppDetails\";\nimport Monitoring from \"./monitoring/Monitoring\";\nimport Settings from \"./settings/Settings\";\nimport OneClickAppSelector from \"./apps/oneclick/OneClickAppSelector\";\nimport OneClickAppConfigPage from \"./apps/oneclick/OneClickAppConfigPage\";\nimport ApiComponent from \"./global/ApiComponent\";\nimport Toaster from \"../utils/Toaster\";\nimport { IVersionInfo } from \"../models/IVersionInfo\";\n\nconst { Header, Content, Sider } = Layout;\n\nexport default class PageRoot extends ApiComponent<\n  RouteComponentProps<any>,\n  {\n    versionInfo: IVersionInfo | undefined;\n  }\n> {\n  private mainContainer: RefObject<HTMLDivElement>;\n\n  constructor(props: any) {\n    super(props);\n    this.mainContainer = React.createRef();\n    this.state = {\n      versionInfo: undefined\n    };\n  }\n\n  componentDidMount() {\n    const self = this;\n\n    if (!ApiManager.isLoggedIn()) {\n      this.goToLogin();\n    } else {\n      this.apiManager\n        .getVersionInfo()\n        .then(function(data) {\n          self.setState({ versionInfo: data });\n        })\n        .catch(Toaster.createCatcher());\n    }\n  }\n\n  goToLogin() {\n    this.props.history.push(\"/login\");\n  }\n\n  createUpdateAvailableIfNeeded() {\n    const self = this;\n\n    if (!self.state.versionInfo || !self.state.versionInfo.canUpdate) {\n      return <span />;\n    }\n\n    return (\n      <Fragment>\n        <ClickableLink\n          onLinkClicked={() => self.props.history.push(\"/settings\")}\n        >\n          <Icon\n            type=\"gift\"\n            theme=\"twoTone\"\n            style={{\n              marginLeft: 50\n            }}\n          />\n          <Icon\n            type=\"gift\"\n            theme=\"twoTone\"\n            style={{\n              marginRight: 10,\n              marginLeft: 3\n            }}\n          />\n          Update Available!\n          <Icon\n            type=\"gift\"\n            theme=\"twoTone\"\n            style={{\n              marginLeft: 10\n            }}\n          />\n          <Icon\n            type=\"gift\"\n            theme=\"twoTone\"\n            style={{\n              marginLeft: 3\n            }}\n          />\n        </ClickableLink>\n      </Fragment>\n    );\n  }\n\n  onSelectMenu(param: SelectParam) {\n    this.props.history.push(\"/\" + param.key);\n  }\n\n  render() {\n    const self = this;\n    return (\n      <Layout className=\"full-screen-bg\">\n        <Header className=\"header\">\n          <div>\n            <Row>\n              <Col span={12}>\n                <span>\n                  <h3 style={{ color: \"#fff\" }}>\n                    <img\n                      src=\"/favicon.ico\"\n                      style={{\n                        marginRight: 10\n                      }}\n                    />\n                    CaptainDuckDuck\n                  </h3>\n                </span>\n\n                {self.createUpdateAvailableIfNeeded()}\n              </Col>\n              <Col span={12}>\n                <Row type=\"flex\" justify=\"end\">\n                  <a\n                    href=\"https://github.com/githubsaturn/captainduckduck\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{ marginRight: 20 }}\n                  >\n                    GitHub\n                  </a>\n\n                  <a\n                    href=\"https://captainduckduck.com\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{ marginRight: 70 }}\n                  >\n                    Docs\n                  </a>\n                  <span>\n                    <span\n                      style={{\n                        border: \"1px solid #1b8ad3\",\n                        borderRadius: 5,\n                        padding: 8\n                      }}\n                    >\n                      <ClickableLink\n                        onLinkClicked={() => {\n                          self.apiManager.setAuthToken(\"\");\n                          self.goToLogin();\n                        }}\n                      >\n                        Logout <Icon type=\"logout\" />\n                      </ClickableLink>\n                    </span>\n                  </span>\n                </Row>\n              </Col>\n            </Row>\n          </div>\n        </Header>\n        <Layout>\n          <Sider collapsible width={200} style={{ background: \"#fff\" }}>\n            <Menu\n              onSelect={(param: SelectParam) => {\n                self.onSelectMenu(param);\n              }}\n              theme=\"dark\"\n              mode=\"inline\"\n              defaultSelectedKeys={[\"dashboard\"]}\n              style={{ height: \"100%\", borderRight: 0 }}\n            >\n              <Menu.Item key=\"dashboard\">\n                <span>\n                  <Icon type=\"laptop\" />\n                  <span>Dashboard</span>\n                </span>\n              </Menu.Item>\n              <Menu.Item key=\"apps\">\n                <span>\n                  <Icon type=\"code\" />\n                  <span>Apps</span>\n                </span>\n              </Menu.Item>\n              <Menu.Item key=\"monitoring\">\n                <span>\n                  <Icon type=\"dashboard\" />\n                  <span>Monitoring</span>\n                </span>\n              </Menu.Item>\n              <Menu.Item key=\"cluster\">\n                <span>\n                  <Icon type=\"cluster\" />\n                  <span>Cluster</span>\n                </span>\n              </Menu.Item>\n              <Menu.Item key=\"settings\">\n                <span>\n                  <Icon type=\"setting\" />\n                  <span>Settings</span>\n                </span>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Content>\n            <div\n              ref={self.mainContainer}\n              style={{\n                paddingTop: 12,\n                paddingBottom: 36,\n                height: \"100%\",\n                overflowY: \"scroll\"\n              }}\n              id=\"main-content-layout\"\n            >\n              <Switch>\n                <Route path=\"/dashboard/\" component={Dashboard} />\n                <Route\n                  path=\"/apps/details/:appName\"\n                  render={props => (\n                    <AppDetails {...props} mainContainer={self.mainContainer} />\n                  )}\n                />\n                <Route\n                  path=\"/apps/oneclick/:appName\"\n                  component={OneClickAppConfigPage}\n                />\n                <Route path=\"/apps/oneclick\" component={OneClickAppSelector} />\n                <Route path=\"/apps/\" component={Apps} />\n                <Route path=\"/monitoring/\" component={Monitoring} />\n                <Route path=\"/cluster/\" component={Cluster} />\n                <Route path=\"/settings/\" component={Settings} />\n                <Route path=\"/\" component={LoggedInCatchAll} />\n              </Switch>\n            </div>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox, Card } from \"antd\";\nimport ApiComponent from \"./global/ApiComponent\";\nimport Toaster from \"../utils/Toaster\";\nimport ApiManager from \"../api/ApiManager\";\nimport { RouteComponentProps } from \"react-router\";\nconst FormItem = Form.Item;\n\nexport default class Login extends ApiComponent<RouteComponentProps<any>> {\n  onLoginRequested(password: string) {\n    const self = this;\n    this.apiManager\n      .getAuthToken(password)\n      .then(function() {\n        self.props.history.push(\"/\");\n      })\n      .catch(Toaster.createCatcher());\n  }\n\n  render() {\n    const self = this;\n    return (\n      <div>\n        <div\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%,-50%)\"\n          }}\n        >\n          <Card title=\"CaptainDuckDuck\" style={{ width: 300 }}>\n            <WrappedNormalLoginForm\n              onLoginRequested={(password: string) =>\n                self.onLoginRequested(password)\n              }\n            />\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass NormalLoginForm extends React.Component<any, any> {\n  handleSubmit = (e: any) => {\n    const self = this;\n    e.preventDefault();\n    this.props.form.validateFields((err: any, values: any) => {\n      if (!err) {\n        self.props.onLoginRequested(values.password);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <FormItem>\n          {getFieldDecorator(\"password\", {\n            rules: [{ required: true, message: \"Please input your Password!\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </FormItem>\n        <FormItem>\n          <Button\n            style={{ float: \"right\" }}\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Login\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\nimport thunk from \"redux-thunk\";\n\nimport \"./App.css\";\n\nimport reducers from \"./reducers\";\n\nimport PageRoot from \"./containers/PageRoot\";\nimport Login from \"./containers/Login\";\nimport CrashReporter from \"./utils/CrashReporter\";\n\nCrashReporter.getInstance().init();\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"full-screen-bg\">\n        <Provider store={createStoreWithMiddleware(reducers)}>\n          <HashRouter>\n            <Switch>\n              <Route path=\"/login/\" component={Login} />\n              <Route path=\"/\" component={PageRoot} />\n            </Switch>\n          </HashRouter>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}